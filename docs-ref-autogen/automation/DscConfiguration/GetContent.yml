### YamlMime:RESTOperation
summary: Retrieve the configuration script identified by configuration name.
service: Automation
apiVersion: 2015-10-31
groupName: Dsc Configuration
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/configurations/{configurationName}/content?api-version=2015-10-31
uriParameters:
- in: path
  isRequired: true
  description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
  name: subscriptionId
- in: path
  isRequired: true
  description: The resource group name.
  types:
  - uid: string
  pattern: ^[-\w\._]+$
  name: resourceGroupName
- in: path
  isRequired: true
  description: The automation account name.
  types:
  - uid: string
  name: automationAccountName
- in: path
  isRequired: true
  description: The configuration name.
  types:
  - uid: string
  name: configurationName
- in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
  name: api-version
responses:
- description: OK
  types:
  - uid: file
  name: 200 OK
- description: Automation error response describing why the operation failed.
  types:
  - uid: ErrorResponse
  name: Other Status Codes
requestHeader: []
definitions:
- name: ErrorResponse
  description: Error response of an operation failure
  kind: object
  properties:
  - description: Error code
    types:
    - uid: string
    name: code
  - description: Error message indicating why the operation failed.
    types:
    - uid: string
    name: message
examples:
- request:
    uri: GET https://management.azure.com/subscriptions/subid/resourceGroups/rg/providers/Microsoft.Automation/automationAccounts/myAutomationAccount33/configurations/TemplateBasic/content?api-version=2015-10-31
  responses:
  - statusCode: "200"
    body: "\"\\tconfiguration TemplateWithConfigData{\\r\\n    <#\\r\\n        .DESCRIPTION\\r\\n        DSC Coniguration that uses ConfigData file\\r\\n\\r\\n        .EXAMPLE\\r\\n        TemplateWithConfigData -outpath c:\\\\dsc\\\\\\r\\n\\r\\n        .NOTES\\r\\n        This configuration requires the corresponding configdata file\\r\\n    #>\\r\\n\\r\\n    Import-DscResource -ModuleName 'PSDesiredStateConfiguration', @{ModuleName='xPSDesiredStateConfiguration';ModuleVersion='5.0.0.0'\\r\\n                    }\\r\\n    \\r\\n    Node $AllNodes.NodeName{\\r\\n        # WindowsOptionalFeature is compatible with the Nano Server installation option\\r\\n        File testfile{\\r\\n            Ensure          = 'Present'\\r\\n            DestinationPath = $Data.Path\\r\\n            Contents        = $Data.Contents\\r\\n                        }\\r\\n        xArchive testarchive{\\r\\n            Ensure          = 'Present'\\r\\n            Destination     = $Data.Destination\\r\\n            Path            = (Get-ChildItem $Data.Path).ParentFolder\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n\\r\\nconfiguration TemplateBasic{\\r\\n    <#\\r\\n        .DESCRIPTION\\r\\n        Basic configuration template\\r\\n\\r\\n        .EXAMPLE\\r\\n        TemplateBasic -outpath c:\\\\dsc\\\\\\r\\n\\r\\n        .NOTES\\r\\n        This is the most basic configuration and does not take parameters or configdata\\r\\n    #>\\r\\n\\r\\n    Import-DscResource -module 'PSDesiredStateConfiguration'\\r\\n    \\r\\n    Node localhost{\\r\\n        # WindowsOptionalFeature is compatible with the Nano Server installation option\\r\\n        File testfile{\\r\\n            Ensure          = 'Present'\\r\\n            DestinationPath = 'c:\\\\filetoo.txt'\\r\\n            Contents        = 'this is some text too'\\r\\n                        }\\r\\n                    }\\r\\n                }\""
  name: Get DSC Configuration content
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - description: impersonate your user account
    name: user_impersonation
name: Get Content
uid: management.azure.com.automation.dscconfiguration.getcontent

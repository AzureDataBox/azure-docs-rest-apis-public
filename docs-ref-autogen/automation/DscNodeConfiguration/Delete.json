{
  "swagger": "2.0",
  "info": {
    "version": "2015-10-31",
    "x-ms-code-generation-settings": {
      "useDateTimeOffset": true
    },
    "title": "AutomationManagement"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodeConfigurations/{nodeConfigurationName}": {
      "delete": {
        "tags": [
          "DscNodeConfiguration"
        ],
        "operationId": "DscNodeConfiguration_Delete",
        "description": "Delete the Dsc node configurations by node configuration.",
        "externalDocs": {
          "url": "http://aka.ms/azureautomationsdk/dscnodeconfigurations"
        },
        "x-ms-examples": {
          "Delete a DSC node configuration": {
            "parameters": {
              "subscriptionId": "subid",
              "resourceGroupName": "rg",
              "automationAccountName": "myAutomationAccount20",
              "credentialName": "myCredential",
              "api-version": "2015-10-31",
              "nodeConfigurationName": "configName.nodeConfigName"
            },
            "responses": {
              "200": {}
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "automationAccountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The automation account name."
          },
          {
            "name": "nodeConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Dsc node configuration name."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "Delete"
      }
    }
  },
  "definitions": {
    "DscNodeConfiguration": {
      "properties": {
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the last modified time.",
          "x-nullable": false
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets creation time.",
          "x-nullable": false
        },
        "configuration": {
          "$ref": "#/definitions/DscConfigurationAssociationProperty",
          "description": "Gets or sets the configuration of the node."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Definition of the dsc node configuration."
    },
    "DscNodeConfigurationListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DscNodeConfiguration"
          },
          "description": "Gets or sets a list of Dsc node configurations."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets or sets the next link."
        }
      },
      "description": "The response model for the list job operation."
    },
    "RunbookAssociationProperty": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the runbook."
        }
      },
      "description": "The runbook property associated with the entity."
    },
    "WebhookProperties": {
      "properties": {
        "isEnabled": {
          "type": "boolean",
          "default": false,
          "description": "Gets or sets the value of the enabled flag of the webhook."
        },
        "uri": {
          "type": "string",
          "description": "Gets or sets the webhook uri."
        },
        "expiryTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the expiry time.",
          "x-nullable": false
        },
        "lastInvokedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the last invoked time.",
          "x-nullable": true
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Gets or sets the parameters of the job that is created when the webhook calls the runbook it is associated with."
        },
        "runbook": {
          "$ref": "#/definitions/RunbookAssociationProperty",
          "description": "Gets or sets the runbook the webhook is associated with."
        },
        "runOn": {
          "type": "string",
          "description": "Gets or sets the name of the hybrid worker group the webhook job will run on."
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the creation time.",
          "x-nullable": false
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the last modified time.",
          "x-nullable": false
        },
        "description": {
          "type": "string",
          "description": "Gets or sets the description."
        }
      },
      "description": "Definition of the webhook properties"
    },
    "Webhook": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/WebhookProperties",
          "x-ms-client-flatten": true,
          "description": "Gets or sets the webhook properties."
        }
      },
      "description": "Definition of the webhook type.",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ]
    },
    "VariableProperties": {
      "properties": {
        "value": {
          "type": "string",
          "description": "Gets or sets the value of the variable."
        },
        "isEncrypted": {
          "type": "boolean",
          "description": "Gets or sets the encrypted flag of the variable.",
          "x-nullable": true
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the creation time.",
          "x-nullable": false
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the last modified time.",
          "x-nullable": false
        },
        "description": {
          "type": "string",
          "description": "Gets or sets the description."
        }
      },
      "description": "Definition of the varible properties"
    },
    "Variable": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/VariableProperties",
          "x-ms-client-flatten": true,
          "description": "Gets or sets the properties of the variable."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Definition of the varible."
    },
    "JobProvisioningStateProperty": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state of the resource.",
          "enum": [
            "Failed",
            "Succeeded",
            "Suspended",
            "Processing"
          ],
          "x-ms-enum": {
            "name": "JobProvisioningState",
            "modelAsString": true
          }
        }
      },
      "description": "The provisioning state property."
    },
    "DscConfigurationAssociationProperty": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the Dsc configuration."
        }
      },
      "description": "The Dsc configuration property associated with the entity."
    },
    "DscCompilationJobProperties": {
      "properties": {
        "configuration": {
          "$ref": "#/definitions/DscConfigurationAssociationProperty",
          "description": "Gets or sets the configuration."
        },
        "startedBy": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the compilation job started by."
        },
        "jobId": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "description": "Gets the id of the job.",
          "x-nullable": false
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the creation time of the job.",
          "x-nullable": false
        },
        "provisioningState": {
          "$ref": "#/definitions/JobProvisioningStateProperty",
          "description": "The current provisioning state of the job."
        },
        "runOn": {
          "type": "string",
          "description": "Gets or sets the runOn which specifies the group name where the job is to be executed."
        },
        "status": {
          "type": "string",
          "description": "Gets or sets the status of the job.",
          "enum": [
            "New",
            "Activating",
            "Running",
            "Completed",
            "Failed",
            "Stopped",
            "Blocked",
            "Suspended",
            "Disconnected",
            "Suspending",
            "Stopping",
            "Resuming",
            "Removing"
          ],
          "x-ms-enum": {
            "name": "JobStatus",
            "modelAsString": true
          }
        },
        "statusDetails": {
          "type": "string",
          "description": "Gets or sets the status details of the job."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the start time of the job.",
          "x-nullable": true
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the end time of the job.",
          "x-nullable": true
        },
        "exception": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the exception of the job."
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the last modified time of the job.",
          "x-nullable": false
        },
        "lastStatusModifiedTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the last status modified time of the job.",
          "x-nullable": true
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Gets or sets the parameters of the job."
        }
      },
      "description": "Definition of Dsc Compilation job properties."
    },
    "DscCompilationJob": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/DscCompilationJobProperties",
          "x-ms-client-flatten": true,
          "description": "Gets or sets the properties of the Dsc Compilation job."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Definition of the Dsc Compilation job."
    },
    "CredentialProperties": {
      "properties": {
        "userName": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the user name of the credential."
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the creation time.",
          "x-nullable": false
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the last modified time.",
          "x-nullable": false
        },
        "description": {
          "type": "string",
          "description": "Gets or sets the description."
        }
      },
      "description": "Definition of the credential properties"
    },
    "Credential": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/CredentialProperties",
          "x-ms-client-flatten": true,
          "description": "Gets or sets the properties of the credential."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Definition of the credential."
    },
    "ConnectionTypeAssociationProperty": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the connection type."
        }
      },
      "description": "The connection type property associated with the entity."
    },
    "ConnectionProperties": {
      "properties": {
        "connectionType": {
          "$ref": "#/definitions/ConnectionTypeAssociationProperty",
          "description": "Gets or sets the connectionType of the connection."
        },
        "fieldDefinitionValues": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Gets the field definition values of the connection."
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the creation time.",
          "x-nullable": false
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the last modified time.",
          "x-nullable": false
        },
        "description": {
          "type": "string",
          "description": "Gets or sets the description."
        }
      },
      "description": "Definition of the connection properties."
    },
    "Connection": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConnectionProperties",
          "x-ms-client-flatten": true,
          "description": "Gets or sets the properties of the connection."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Definition of the connection."
    },
    "CertificateProperties": {
      "properties": {
        "thumbprint": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the thumbprint of the certificate."
        },
        "expiryTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the expiry time of the certificate.",
          "x-nullable": false
        },
        "isExportable": {
          "type": "boolean",
          "readOnly": true,
          "description": "Gets the is exportable flag of the certificate.",
          "x-nullable": false
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the creation time.",
          "x-nullable": false
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the last modified time.",
          "x-nullable": false
        },
        "description": {
          "type": "string",
          "description": "Gets or sets the description."
        }
      },
      "description": "Properties of the certificate."
    },
    "Certificate": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/CertificateProperties",
          "x-ms-client-flatten": true,
          "description": "Gets or sets the properties of the certificate."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Definition of the certificate."
    },
    "ProxyResource": {
      "description": "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "RunbookParameter": {
      "properties": {
        "type": {
          "type": "string",
          "description": "Gets or sets the type of the parameter."
        },
        "isMandatory": {
          "type": "boolean",
          "description": "Gets or sets a Boolean value to indicate whether the parameter is madatory or not."
        },
        "position": {
          "type": "integer",
          "format": "int32",
          "description": "Get or sets the position of the parameter."
        },
        "defaultValue": {
          "type": "string",
          "description": "Gets or sets the default value of parameter."
        }
      },
      "description": "Definition of the runbook parameter type."
    },
    "ContentHash": {
      "properties": {
        "algorithm": {
          "type": "string",
          "description": "Gets or sets the content hash algorithm used to hash the content."
        },
        "value": {
          "type": "string",
          "description": "Gets or sets expected hash value of the content."
        }
      },
      "required": [
        "algorithm",
        "value"
      ],
      "description": "Definition of the runbook property type."
    },
    "ContentLink": {
      "properties": {
        "uri": {
          "type": "string",
          "description": "Gets or sets the uri of the runbook content."
        },
        "contentHash": {
          "$ref": "#/definitions/ContentHash",
          "description": "Gets or sets the hash."
        },
        "version": {
          "type": "string",
          "description": "Gets or sets the version of the content."
        }
      },
      "description": "Definition of the content link."
    },
    "RunbookDraft": {
      "properties": {
        "inEdit": {
          "type": "boolean",
          "description": "Gets or sets whether runbook is in edit mode."
        },
        "draftContentLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "Gets or sets the draft runbook content link."
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the creation time of the runbook draft.",
          "x-nullable": false
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the last modified time of the runbook draft.",
          "x-nullable": false
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/RunbookParameter"
          },
          "description": "Gets or sets the runbook draft parameters."
        },
        "outputTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets the runbook output types."
        }
      },
      "description": "Definition of the runbook type."
    },
    "RunbookProperties": {
      "properties": {
        "runbookType": {
          "type": "string",
          "description": "Gets or sets the type of the runbook.",
          "enum": [
            "Script",
            "Graph",
            "PowerShellWorkflow",
            "PowerShell",
            "GraphPowerShellWorkflow",
            "GraphPowerShell"
          ],
          "x-ms-enum": {
            "name": "RunbookTypeEnum",
            "modelAsString": true
          }
        },
        "publishContentLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "Gets or sets the published runbook content link."
        },
        "state": {
          "type": "string",
          "description": "Gets or sets the state of the runbook.",
          "enum": [
            "New",
            "Edit",
            "Published"
          ],
          "x-ms-enum": {
            "name": "RunbookState",
            "modelAsString": true
          }
        },
        "logVerbose": {
          "type": "boolean",
          "description": "Gets or sets verbose log option."
        },
        "logProgress": {
          "type": "boolean",
          "description": "Gets or sets progress log option."
        },
        "logActivityTrace": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the option to log activity trace of the runbook."
        },
        "jobCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the job count of the runbook."
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/RunbookParameter"
          },
          "description": "Gets or sets the runbook parameters."
        },
        "outputTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets the runbook output types."
        },
        "draft": {
          "$ref": "#/definitions/RunbookDraft",
          "description": "Gets or sets the draft runbook properties."
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets or sets the provisioning state of the runbook.",
          "enum": [
            "Succeeded"
          ],
          "x-ms-enum": {
            "name": "RunbookProvisioningState",
            "modelAsString": false
          }
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "Gets or sets the last modified by."
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the creation time.",
          "x-nullable": false
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the last modified time.",
          "x-nullable": false
        },
        "description": {
          "type": "string",
          "description": "Gets or sets the description."
        }
      },
      "description": "Definition of the runbook property type."
    },
    "Runbook": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/RunbookProperties",
          "x-ms-client-flatten": true,
          "description": "Gets or sets the runbook properties."
        },
        "etag": {
          "type": "string",
          "description": "Gets or sets the etag of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "description": "Definition of the runbook type."
    },
    "ModuleErrorInfo": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Gets or sets the error code."
        },
        "message": {
          "type": "string",
          "description": "Gets or sets the error message."
        }
      },
      "description": "Definition of the module error info type."
    },
    "ModuleProperties": {
      "properties": {
        "isGlobal": {
          "type": "boolean",
          "description": "Gets or sets the isGlobal flag of the module."
        },
        "version": {
          "type": "string",
          "description": "Gets or sets the version of the module."
        },
        "sizeInBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the size in bytes of the module."
        },
        "activityCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the activity count of the module."
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets or sets the provisioning state of the module.",
          "enum": [
            "Created",
            "Creating",
            "StartingImportModuleRunbook",
            "RunningImportModuleRunbook",
            "ContentRetrieved",
            "ContentDownloaded",
            "ContentValidated",
            "ConnectionTypeImported",
            "ContentStored",
            "ModuleDataStored",
            "ActivitiesStored",
            "ModuleImportRunbookComplete",
            "Succeeded",
            "Failed",
            "Cancelled",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ModuleProvisioningState",
            "modelAsString": false
          }
        },
        "contentLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "Gets or sets the contentLink of the module."
        },
        "error": {
          "$ref": "#/definitions/ModuleErrorInfo",
          "description": "Gets or sets the error info of the module."
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the creation time.",
          "x-nullable": false
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the last modified time.",
          "x-nullable": false
        },
        "description": {
          "type": "string",
          "description": "Gets or sets the description."
        }
      },
      "description": "Definition of the module property type."
    },
    "Module": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/ModuleProperties",
          "x-ms-client-flatten": true,
          "description": "Gets or sets the module properties."
        },
        "etag": {
          "type": "string",
          "description": "Gets or sets the etag of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "description": "Definition of the module type."
    },
    "ContentSource": {
      "properties": {
        "hash": {
          "$ref": "#/definitions/ContentHash",
          "description": "Gets or sets the hash."
        },
        "type": {
          "type": "string",
          "description": "Gets or sets the content source type.",
          "enum": [
            "embeddedContent",
            "uri"
          ],
          "x-ms-enum": {
            "name": "ContentSourceType",
            "modelAsString": true
          }
        },
        "value": {
          "type": "string",
          "description": "Gets or sets the value of the content. This is based on the content source type."
        },
        "version": {
          "type": "string",
          "description": "Gets or sets the version of the content."
        }
      },
      "description": "Definition of the content source."
    },
    "DscConfigurationParameter": {
      "properties": {
        "type": {
          "type": "string",
          "description": "Gets or sets the type of the parameter."
        },
        "isMandatory": {
          "type": "boolean",
          "description": "Gets or sets a Boolean value to indicate whether the parameter is madatory or not."
        },
        "position": {
          "type": "integer",
          "format": "int32",
          "description": "Get or sets the position of the parameter."
        },
        "defaultValue": {
          "type": "string",
          "description": "Gets or sets the default value of parameter."
        }
      },
      "description": "Definition of the configuration parameter type."
    },
    "DscConfigurationProperties": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Gets or sets the provisioning state of the configuration.",
          "enum": [
            "Succeeded"
          ],
          "x-ms-enum": {
            "name": "DscConfigurationProvisioningState",
            "modelAsString": false
          }
        },
        "jobCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the job count of the configuration."
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DscConfigurationParameter"
          },
          "description": "Gets or sets the configuration parameters."
        },
        "source": {
          "$ref": "#/definitions/ContentSource",
          "description": "Gets or sets the source."
        },
        "state": {
          "type": "string",
          "description": "Gets or sets the state of the configuration.",
          "enum": [
            "New",
            "Edit",
            "Published"
          ],
          "x-ms-enum": {
            "name": "DscConfigurationState",
            "modelAsString": true
          }
        },
        "logVerbose": {
          "type": "boolean",
          "description": "Gets or sets verbose log option."
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the creation time.",
          "x-nullable": false
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the last modified time.",
          "x-nullable": false
        },
        "description": {
          "type": "string",
          "description": "Gets or sets the description."
        }
      },
      "description": "Definition of the configuration property type."
    },
    "DscConfiguration": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DscConfigurationProperties",
          "x-ms-client-flatten": true,
          "description": "Gets or sets the configuration properties."
        },
        "etag": {
          "type": "string",
          "description": "Gets or sets the etag of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "description": "Definition of the configuration type."
    },
    "Sku": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the SKU name of the account.",
          "enum": [
            "Free",
            "Basic"
          ],
          "x-ms-enum": {
            "name": "SkuNameEnum",
            "modelAsString": true
          }
        },
        "family": {
          "type": "string",
          "description": "Gets or sets the SKU family."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the SKU capacity."
        }
      },
      "required": [
        "name"
      ],
      "description": "The account SKU."
    },
    "AutomationAccountProperties": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "Gets or sets the SKU of account."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "Gets or sets the last modified by."
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "Gets status of account.",
          "enum": [
            "Ok",
            "Unavailable",
            "Suspended"
          ],
          "x-ms-enum": {
            "name": "AutomationAccountState",
            "modelAsString": true
          }
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the creation time.",
          "x-nullable": false
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the last modified time.",
          "x-nullable": false
        },
        "description": {
          "type": "string",
          "description": "Gets or sets the description."
        }
      },
      "description": "Definition of the account property."
    },
    "AutomationAccount": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/AutomationAccountProperties",
          "x-ms-client-flatten": true,
          "description": "Gets or sets the automation account properties."
        },
        "etag": {
          "type": "string",
          "description": "Gets or sets the etag of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "description": "Definition of the automation account type."
    },
    "TrackedResource": {
      "description": "The resource model definition for a ARM tracked top level resource",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The Azure Region where the resource lives"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "description": "The core properties of ARM resources",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource Id for the resource"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource."
        }
      },
      "x-ms-azure-resource": true
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code",
          "type": "string"
        },
        "message": {
          "description": "Error message indicating why the operation failed.",
          "type": "string"
        }
      },
      "description": "Error response of an operation failure"
    },
    "DscNodeConfigurationCreateOrUpdateParameters": {
      "properties": {
        "source": {
          "$ref": "#/definitions/ContentSource",
          "description": "Gets or sets the source."
        },
        "name": {
          "type": "string",
          "description": "Name of the node configuration."
        },
        "configuration": {
          "$ref": "#/definitions/DscConfigurationAssociationProperty",
          "description": "Gets or sets the configuration of the node."
        },
        "newNodeConfigurationBuildVersionRequired": {
          "type": "boolean",
          "description": "If a new build version of NodeConfiguration is required."
        }
      },
      "required": [
        "source",
        "name",
        "configuration"
      ],
      "description": "The parameters supplied to the create or update node configuration operation."
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._]+$",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method",
      "description": "Name of an Azure Resource group."
    }
  },
  "x-internal-service-name": "Automation",
  "x-internal-toc-name": "Dsc Node Configuration",
  "x-internal-split-type": "Operation",
  "x-internal-operation-name": "Delete"
}
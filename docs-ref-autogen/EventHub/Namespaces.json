{
  "swagger": "2.0",
  "info": {
    "title": "EventHubManagementClient",
    "description": "Azure Event Hubs client",
    "version": "2015-08-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/CheckNameAvailability": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CheckNameAvailability",
        "description": "Check the give namespace name availability.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckNameAvailability"
            },
            "description": "Parameters to check availability of the given namespace name"
          }
        ],
        "responses": {
          "200": {
            "description": "check availability returned successfully.",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_List",
        "description": "Lists all the available namespaces within a subscription, irrespective of the resource groups.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespaces returned successfully.",
            "schema": {
              "$ref": "#/definitions/NamespaceListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListByResourceGroup",
        "description": "Lists the available namespaces within a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "description": "Name of the Resource group within the Azure subscription."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespaces returned successfully.",
            "schema": {
              "$ref": "#/definitions/NamespaceListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}": {
      "put": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CreateOrUpdate",
        "description": "Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "description": "Name of the Resource group within the Azure subscription."
          },
          {
            "$ref": "#/parameters/namespaceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Namespace"
            },
            "description": "Parameters for creating a namespace resource."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Namespace create request accepted.",
            "schema": {
              "$ref": "#/definitions/Namespace"
            }
          },
          "200": {
            "description": "Namespace successfuly created.",
            "schema": {
              "$ref": "#/definitions/Namespace"
            }
          },
          "202": {
            "description": "Namespace create or update request accepted."
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Delete",
        "description": "Deletes an existing namespace. This operation also removes all associated resources under the namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "description": "Name of the Resource group within the Azure subscription."
          },
          {
            "$ref": "#/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "200": {
            "description": "Namespace successfuly deleted."
          },
          "202": {
            "description": "Namespace delete request accepted."
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Get",
        "description": "Gets the description of the specified namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "description": "Name of the Resource group within the Azure subscription."
          },
          {
            "$ref": "#/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace returned successfully.",
            "schema": {
              "$ref": "#/definitions/Namespace"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Update",
        "description": "Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "description": "Name of the Resource group within the Azure subscription."
          },
          {
            "$ref": "#/parameters/namespaceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamespaceUpdateParameter"
            },
            "description": "Parameters for updating a namespace resource."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Namespace update request accepted.",
            "schema": {
              "$ref": "#/definitions/Namespace"
            }
          },
          "200": {
            "description": "Namespace successfuly updated.",
            "schema": {
              "$ref": "#/definitions/Namespace"
            }
          },
          "202": {
            "description": "Namespace create or update request accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListAuthorizationRules",
        "description": "Gets a list of authorization rules for a namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "description": "Name of the Resource group within the Azure subscription."
          },
          {
            "$ref": "#/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace authorization rule successfully returned.",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}": {
      "put": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CreateOrUpdateAuthorizationRule",
        "description": "Creates or updates an authorization rule for a namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "description": "Name of the Resource group within the Azure subscription."
          },
          {
            "$ref": "#/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/parameters/authorizationRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRule"
            },
            "description": "The shared access authorization rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace authorization rule created",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRule"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_DeleteAuthorizationRule",
        "description": "Deletes an authorization rule for a namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "description": "Name of the Resource group within the Azure subscription."
          },
          {
            "$ref": "#/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "200": {
            "description": "Namespace authorization rule successfully deleted."
          }
        }
      },
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_GetAuthorizationRule",
        "description": "Gets an authorization rule for a namespace by rule name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "description": "Name of the Resource group within the Azure subscription."
          },
          {
            "$ref": "#/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace authorization rule returned successfully.",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRule"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListKeys",
        "description": "Gets the primary and secondary connection strings for the namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "description": "Name of the Resource group within the Azure subscription."
          },
          {
            "$ref": "#/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Connection strings returned successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_RegenerateKeys",
        "description": "Regenerates the primary or secondary connection strings for the specified namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "description": "Name of the Resource group within the Azure subscription."
          },
          {
            "$ref": "#/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/parameters/authorizationRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateKeysParameters"
            },
            "description": "Parameters required to regenerate the connection string."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Connection strings regenerated successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "OperationListResult": {
      "description": "Result of the request to list EventHub operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "description": "List of EventHub operations supported by the Microsoft.EventHub resource provider.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of operation list results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Operation": {
      "description": "A EventHub REST API operation",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string",
          "readOnly": true
        },
        "display": {
          "description": "The object that represents the operation.",
          "properties": {
            "provider": {
              "description": "Service provider: Microsoft.EventHub",
              "type": "string",
              "readOnly": true
            },
            "resource": {
              "description": "Resource on which the operation is performed: Invoice, etc.",
              "type": "string",
              "readOnly": true
            },
            "operation": {
              "description": "Operation type: Read, write, delete, etc.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "TrackedResource": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Definition of Resource",
      "x-ms-azure-resource": true
    },
    "Resource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        }
      },
      "description": "The Resource definition",
      "x-ms-azure-resource": true
    },
    "NamespaceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Namespace"
          },
          "description": "Result of the List Namespace operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of namespaces."
        }
      },
      "description": "The response of the List Namespace operation."
    },
    "Namespace": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NamespaceProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "description": "Description of a namespace resource."
    },
    "NamespaceProperties": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Provisioning state of the namespace."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The time the namespace was created."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The time the namespace was updated."
        },
        "serviceBusEndpoint": {
          "type": "string",
          "readOnly": true,
          "description": "Endpoint you can use to perform Service Bus operations."
        }
      },
      "description": "Properties of the namespace."
    },
    "Sku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of this SKU.",
          "enum": [
            "Basic",
            "Standard"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": true
          }
        },
        "tier": {
          "type": "string",
          "description": "The billing tier of this particular SKU.",
          "enum": [
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": true
          }
        },
        "capacity": {
          "format": "int32",
          "type": "integer",
          "description": "The EventHubs throughput units."
        }
      },
      "required": [
        "tier"
      ],
      "description": "SKU of the namespace."
    },
    "SharedAccessAuthorizationRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedAccessAuthorizationRule"
          },
          "description": "Result of the List Authorization Rules operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains an incomplete list of Authorization Rules"
        }
      },
      "description": "The response from the List Namespace operation."
    },
    "SharedAccessAuthorizationRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SharedAccessAuthorizationRuleProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Description of a namespace authorization rule."
    },
    "SharedAccessAuthorizationRuleProperties": {
      "properties": {
        "rights": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Manage",
              "Send",
              "Listen"
            ],
            "x-ms-enum": {
              "name": "AccessRights",
              "modelAsString": false
            }
          },
          "description": "The rights associated with the rule."
        }
      },
      "required": [
        "rights"
      ],
      "description": "SharedAccessAuthorizationRule properties."
    },
    "ResourceListKeys": {
      "properties": {
        "primaryConnectionString": {
          "type": "string",
          "readOnly": true,
          "description": "Primary connection string of the created namespace authorization rule."
        },
        "secondaryConnectionString": {
          "type": "string",
          "readOnly": true,
          "description": "Secondary connection string of the created namespace authorization rule."
        },
        "primaryKey": {
          "type": "string",
          "readOnly": true,
          "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
        },
        "secondaryKey": {
          "type": "string",
          "readOnly": true,
          "description": "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
        },
        "keyName": {
          "type": "string",
          "readOnly": true,
          "description": "A string that describes the authorization rule."
        }
      },
      "description": "Namespace/EventHub Connection String"
    },
    "RegenerateKeysParameters": {
      "properties": {
        "policykey": {
          "type": "string",
          "description": "Key that needs to be regenerated.",
          "enum": [
            "PrimaryKey",
            "SecondaryKey"
          ],
          "x-ms-enum": {
            "name": "Policykey",
            "modelAsString": false
          }
        }
      },
      "description": "Parameters supplied to the Regenerate Authorization Rule operation."
    },
    "EventHubProperties": {
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Exact time the Event Hub was created."
        },
        "messageRetentionInDays": {
          "format": "int64",
          "type": "integer",
          "description": "Number of days to retain the events for this Event Hub."
        },
        "partitionCount": {
          "format": "int64",
          "type": "integer",
          "description": "Number of partitions created for the Event Hub."
        },
        "partitionIds": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "Current number of shards on the Event Hub."
        },
        "status": {
          "type": "string",
          "readOnly": true,
          "description": "Enumerates the possible values for the status of the Event Hub.",
          "enum": [
            "Active",
            "Disabled",
            "Restoring",
            "SendDisabled",
            "ReceiveDisabled",
            "Creating",
            "Deleting",
            "Renaming",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "EntityStatus",
            "modelAsString": false
          }
        },
        "updatedAt": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The exact time the message was updated."
        }
      },
      "description": "Description of a EventHub Properties."
    },
    "EventHub": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/EventHubProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Description of the Event Hub resource."
    },
    "EventHubListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventHub"
          },
          "description": "Result of the List Event Hubs operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of Event Hubs."
        }
      },
      "description": "The response of the List Event Hubs operation."
    },
    "ConsumerGroupProperties": {
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Exact time the message was created."
        },
        "eventHubPath": {
          "type": "string",
          "readOnly": true,
          "description": "The path of the Event Hub."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The exact time the message was updated."
        },
        "userMetadata": {
          "type": "string",
          "description": "Usermetadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored."
        }
      },
      "description": "Description of a Consumer Group properties."
    },
    "ConsumerGroup": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ConsumerGroupProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Description of the consumer group resource."
    },
    "ConsumerGroupListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsumerGroup"
          },
          "description": "Result of the List Consumer Group operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of Consumer Group"
        }
      },
      "description": "The response to the List Consumer Group operation."
    },
    "UnavailableReason": {
      "type": "string",
      "enum": [
        "None",
        "InvalidName",
        "SubscriptionIsDisabled",
        "NameInUse",
        "NameInLockdown",
        "TooManyNamespaceInCurrentSubscription"
      ],
      "x-ms-enum": {
        "name": "UnavailableReason",
        "modelAsString": false
      },
      "description": "Specifies the reason for the unavailability of the service."
    },
    "CheckNameAvailability": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The Name to check the namespce name availability"
        }
      },
      "required": [
        "name"
      ],
      "description": "Description of a Check Name availability request properties."
    },
    "CheckNameAvailabilityResult": {
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Value indicating namespace is availability, true if the namespace is available; otherwise, false."
        },
        "reason": {
          "$ref": "#/definitions/UnavailableReason",
          "description": "The reason for unavailability of a namespace."
        },
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "The detailed info regarding the reason associated with the namespace."
        }
      },
      "description": "Description of a Check Name availability request properties."
    },
    "NamespaceUpdateParameter": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The sku of the created namespace"
        }
      },
      "description": "Parameters supplied to the Patch Namespace operation."
    },
    "ErrorResponse": {
      "description": "Error reponse indicates EventHub service is not able to process the incoming request. The reason is provided in the error message.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code.",
          "type": "string"
        },
        "message": {
          "description": "Error message indicating why the operation failed.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API Version."
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method",
      "description": "Name of the Resource group within the Azure subscription."
    },
    "namespaceNameParameter": {
      "name": "namespaceName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 6,
      "maxLength": 50,
      "x-ms-parameter-location": "method",
      "description": "The namespace name"
    },
    "authorizationRuleNameParameter": {
      "name": "authorizationRuleName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "x-ms-parameter-location": "method",
      "description": "The authorizationrule name."
    },
    "eventHubNameParameter": {
      "name": "eventHubName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "x-ms-parameter-location": "method",
      "description": "The eventhub name"
    },
    "consumerGroupNameParameter": {
      "name": "consumerGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "x-ms-parameter-location": "method",
      "description": "The consumer group name"
    }
  }
}
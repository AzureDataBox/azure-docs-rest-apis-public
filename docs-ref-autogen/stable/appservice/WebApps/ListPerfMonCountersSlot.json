{
  "swagger": "2.0",
  "info": {
    "version": "2016-08-01",
    "title": "WebApps API Client"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/perfcounters": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets perfmon counters for web app.",
        "description": "Gets perfmon counters for web app.",
        "operationId": "WebApps_ListPerfMonCountersSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.",
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PerfMonCounterCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-internal-toc-name": "List Perf Mon Counters Slot"
      }
    }
  },
  "definitions": {
    "ApplicationLogsConfig": {
      "description": "Application logs configuration.",
      "type": "object",
      "properties": {
        "fileSystem": {
          "$ref": "#/definitions/FileSystemApplicationLogsConfig",
          "description": "Application logs to file system configuration."
        },
        "azureTableStorage": {
          "$ref": "#/definitions/AzureTableStorageApplicationLogsConfig",
          "description": "Application logs to azure table storage configuration."
        },
        "azureBlobStorage": {
          "$ref": "#/definitions/AzureBlobStorageApplicationLogsConfig",
          "description": "Application logs to blob storage configuration."
        }
      }
    },
    "AzureBlobStorageApplicationLogsConfig": {
      "description": "Application logs azure blob storage configuration.",
      "type": "object",
      "properties": {
        "level": {
          "description": "Log level.",
          "enum": [
            "Off",
            "Verbose",
            "Information",
            "Warning",
            "Error"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LogLevel",
            "modelAsString": false
          }
        },
        "sasUrl": {
          "description": "SAS url to a azure blob container with read/write/list/delete permissions.",
          "type": "string"
        },
        "retentionInDays": {
          "format": "int32",
          "description": "Retention in days.\nRemove blobs older than X days.\n0 or lower means no retention.",
          "type": "integer"
        }
      }
    },
    "AzureBlobStorageHttpLogsConfig": {
      "description": "Http logs to azure blob storage configuration.",
      "type": "object",
      "properties": {
        "sasUrl": {
          "description": "SAS url to a azure blob container with read/write/list/delete permissions.",
          "type": "string"
        },
        "retentionInDays": {
          "format": "int32",
          "description": "Retention in days.\nRemove blobs older than X days.\n0 or lower means no retention.",
          "type": "integer"
        },
        "enabled": {
          "description": "True if configuration is enabled, false if it is disabled and null if configuration is not set.",
          "type": "boolean"
        }
      }
    },
    "AzureTableStorageApplicationLogsConfig": {
      "description": "Application logs to Azure table storage configuration.",
      "required": [
        "sasUrl"
      ],
      "type": "object",
      "properties": {
        "level": {
          "description": "Log level.",
          "enum": [
            "Off",
            "Verbose",
            "Information",
            "Warning",
            "Error"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LogLevel",
            "modelAsString": false
          }
        },
        "sasUrl": {
          "description": "SAS URL to an Azure table with add/query/delete permissions.",
          "type": "string"
        }
      }
    },
    "BackupItem": {
      "description": "Backup description.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "BackupItem resource specific properties",
          "properties": {
            "id": {
              "format": "int32",
              "description": "Id of the backup.",
              "type": "integer",
              "readOnly": true,
              "x-ms-client-name": "BackupId"
            },
            "storageAccountUrl": {
              "description": "SAS URL for the storage account container which contains this backup.",
              "type": "string",
              "readOnly": true
            },
            "blobName": {
              "description": "Name of the blob which contains data for this backup.",
              "type": "string",
              "readOnly": true
            },
            "name": {
              "description": "Name of this backup.",
              "type": "string",
              "readOnly": true
            },
            "status": {
              "description": "Backup status.",
              "enum": [
                "InProgress",
                "Failed",
                "Succeeded",
                "TimedOut",
                "Created",
                "Skipped",
                "PartiallySucceeded",
                "DeleteInProgress",
                "DeleteFailed",
                "Deleted"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "BackupItemStatus",
                "modelAsString": false
              }
            },
            "sizeInBytes": {
              "format": "int64",
              "description": "Size of the backup in bytes.",
              "type": "integer",
              "readOnly": true
            },
            "created": {
              "format": "date-time",
              "description": "Timestamp of the backup creation.",
              "type": "string",
              "readOnly": true
            },
            "log": {
              "description": "Details regarding this backup. Might contain an error message.",
              "type": "string",
              "readOnly": true
            },
            "databases": {
              "description": "List of databases included in the backup.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatabaseBackupSetting"
              },
              "readOnly": true
            },
            "scheduled": {
              "description": "True if this backup has been created due to a schedule being triggered.",
              "type": "boolean",
              "readOnly": true
            },
            "lastRestoreTimeStamp": {
              "format": "date-time",
              "description": "Timestamp of a last restore operation which used this backup.",
              "type": "string",
              "readOnly": true
            },
            "finishedTimeStamp": {
              "format": "date-time",
              "description": "Timestamp when this backup finished.",
              "type": "string",
              "readOnly": true
            },
            "correlationId": {
              "description": "Unique correlation identifier. Please use this along with the timestamp while communicating with Azure support.",
              "type": "string",
              "readOnly": true
            },
            "websiteSizeInBytes": {
              "format": "int64",
              "description": "Size of the original web app which has been backed up.",
              "type": "integer",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "BackupItemCollection": {
      "description": "Collection of backup items.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackupItem"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "BackupRequest": {
      "description": "Description of a backup which will be performed.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "BackupRequest resource specific properties",
          "required": [
            "name",
            "storageAccountUrl"
          ],
          "properties": {
            "name": {
              "description": "Name of the backup.",
              "type": "string",
              "x-ms-client-name": "BackupRequestName"
            },
            "enabled": {
              "description": "True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled.",
              "type": "boolean"
            },
            "storageAccountUrl": {
              "description": "SAS URL to the container.",
              "type": "string"
            },
            "backupSchedule": {
              "$ref": "#/definitions/BackupSchedule",
              "description": "Schedule for the backup if it is executed periodically."
            },
            "databases": {
              "description": "Databases included in the backup.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatabaseBackupSetting"
              }
            },
            "type": {
              "description": "Type of the backup.",
              "enum": [
                "Default",
                "Clone",
                "Relocation",
                "Snapshot"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "BackupRestoreOperationType",
                "modelAsString": false
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "BackupSchedule": {
      "description": "Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.",
      "required": [
        "frequencyInterval",
        "frequencyUnit",
        "keepAtLeastOneBackup",
        "retentionPeriodInDays"
      ],
      "type": "object",
      "properties": {
        "frequencyInterval": {
          "format": "int32",
          "description": "How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)",
          "default": 7,
          "type": "integer"
        },
        "frequencyUnit": {
          "description": "The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)",
          "default": "Day",
          "enum": [
            "Day",
            "Hour"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "FrequencyUnit",
            "modelAsString": false
          }
        },
        "keepAtLeastOneBackup": {
          "description": "True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.",
          "default": true,
          "type": "boolean"
        },
        "retentionPeriodInDays": {
          "format": "int32",
          "description": "After how many days backups should be deleted.",
          "default": 30,
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "description": "When the schedule should start working.",
          "type": "string"
        },
        "lastExecutionTime": {
          "format": "date-time",
          "description": "Last time when this schedule was triggered.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ConnStringValueTypePair": {
      "description": "Database connection string value to type pair.",
      "required": [
        "value",
        "type"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Value of pair.",
          "type": "string"
        },
        "type": {
          "description": "Type of database.",
          "enum": [
            "MySql",
            "SQLServer",
            "SQLAzure",
            "Custom",
            "NotificationHub",
            "ServiceBus",
            "EventHub",
            "ApiHub",
            "DocDb",
            "RedisCache",
            "PostgreSQL"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ConnectionStringType",
            "modelAsString": false
          }
        }
      }
    },
    "ConnectionStringDictionary": {
      "description": "String dictionary resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Connection strings.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ConnStringValueTypePair"
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ContinuousWebJob": {
      "description": "Continuous Web Job Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ContinuousWebJob resource specific properties",
          "properties": {
            "status": {
              "description": "Job status.",
              "enum": [
                "Initializing",
                "Starting",
                "Running",
                "PendingRestart",
                "Stopped"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ContinuousWebJobStatus",
                "modelAsString": false
              }
            },
            "detailedStatus": {
              "description": "Detailed status.",
              "type": "string"
            },
            "logUrl": {
              "description": "Log URL.",
              "type": "string"
            },
            "name": {
              "description": "Job name. Used as job identifier in ARM resource URI.",
              "type": "string",
              "readOnly": true
            },
            "runCommand": {
              "description": "Run command.",
              "type": "string"
            },
            "url": {
              "description": "Job URL.",
              "type": "string"
            },
            "extraInfoUrl": {
              "description": "Extra Info URL.",
              "type": "string"
            },
            "jobType": {
              "description": "Job type.",
              "enum": [
                "Continuous",
                "Triggered"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "WebJobType",
                "modelAsString": false
              }
            },
            "error": {
              "description": "Error information.",
              "type": "string"
            },
            "usingSdk": {
              "description": "Using SDK?",
              "type": "boolean"
            },
            "settings": {
              "description": "Job settings.",
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ContinuousWebJobCollection": {
      "description": "Collection of Kudu continuous web job information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContinuousWebJob"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "CsmPublishingProfileOptions": {
      "description": "Publishing options for requested profile.",
      "type": "object",
      "properties": {
        "format": {
          "description": "Name of the format. Valid values are: \nFileZilla3\nWebDeploy -- default\nFtp",
          "enum": [
            "FileZilla3",
            "WebDeploy",
            "Ftp"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublishingProfileFormat",
            "modelAsString": true
          }
        }
      }
    },
    "CsmSlotEntity": {
      "description": "Deployment slot parameters.",
      "required": [
        "targetSlot",
        "preserveVnet"
      ],
      "type": "object",
      "properties": {
        "targetSlot": {
          "description": "Destination deployment slot during swap operation.",
          "type": "string"
        },
        "preserveVnet": {
          "description": "<code>true</code> to preserve Virtual Network to the slot during swap; otherwise, <code>false</code>.",
          "type": "boolean"
        }
      }
    },
    "CustomHostnameAnalysisResult": {
      "description": "Custom domain analysis.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "CustomHostnameAnalysisResult resource specific properties",
          "properties": {
            "isHostnameAlreadyVerified": {
              "description": "<code>true</code> if hostname is already verified; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "customDomainVerificationTest": {
              "description": "DNS verification test result.",
              "enum": [
                "Passed",
                "Failed",
                "Skipped"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "DnsVerificationTestResult",
                "modelAsString": false
              }
            },
            "customDomainVerificationFailureInfo": {
              "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ErrorEntity",
              "description": "Raw failure information if DNS verification fails.",
              "readOnly": true
            },
            "hasConflictOnScaleUnit": {
              "description": "<code>true</code> if there is a conflict on a scale unit; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "hasConflictAcrossSubscription": {
              "description": "<code>true</code> if htere is a conflict across subscriptions; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "conflictingAppResourceId": {
              "description": "Name of the conflicting app on scale unit if it's within the same subscription.",
              "type": "string",
              "readOnly": true
            },
            "cNameRecords": {
              "description": "CName records controller can see for this hostname.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "txtRecords": {
              "description": "TXT records controller can see for this hostname.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "aRecords": {
              "description": "A records controller can see for this hostname.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "alternateCNameRecords": {
              "description": "Alternate CName records controller can see for this hostname.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "alternateTxtRecords": {
              "description": "Alternate TXT records controller can see for this hostname.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DatabaseBackupSetting": {
      "description": "Database backup settings.",
      "required": [
        "databaseType"
      ],
      "type": "object",
      "properties": {
        "databaseType": {
          "description": "Database type (e.g. SqlAzure / MySql).",
          "enum": [
            "SqlAzure",
            "MySql",
            "LocalMySql",
            "PostgreSql"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DatabaseType",
            "modelAsString": true
          }
        },
        "name": {
          "type": "string"
        },
        "connectionStringName": {
          "description": "Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.\nThis is used during restore with overwrite connection strings options.",
          "type": "string"
        },
        "connectionString": {
          "description": "Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.",
          "type": "string"
        }
      }
    },
    "Deployment": {
      "description": "User crendentials used for publishing activity.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Deployment resource specific properties",
          "properties": {
            "id": {
              "description": "Identifier for deployment.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "status": {
              "format": "int32",
              "description": "Deployment status.",
              "type": "integer"
            },
            "message": {
              "description": "Details about deployment status.",
              "type": "string"
            },
            "author": {
              "description": "Who authored the deployment.",
              "type": "string"
            },
            "deployer": {
              "description": "Who performed the deployment.",
              "type": "string"
            },
            "authorEmail": {
              "description": "Author email.",
              "type": "string"
            },
            "startTime": {
              "format": "date-time",
              "description": "Start time.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "endTime": {
              "format": "date-time",
              "description": "End time.",
              "type": "string"
            },
            "active": {
              "description": "True if deployment is currently active, false if completed and null if not started.",
              "type": "boolean"
            },
            "details": {
              "description": "Details on deployment.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DeploymentCollection": {
      "description": "Collection of app deployments.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Deployment"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EnabledConfig": {
      "description": "Enabled configuration.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "True if configuration is enabled, false if it is disabled and null if configuration is not set.",
          "type": "boolean"
        }
      }
    },
    "FileSystemApplicationLogsConfig": {
      "description": "Application logs to file system configuration.",
      "type": "object",
      "properties": {
        "level": {
          "description": "Log level.",
          "default": "Off",
          "enum": [
            "Off",
            "Verbose",
            "Information",
            "Warning",
            "Error"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LogLevel",
            "modelAsString": false
          }
        }
      }
    },
    "FileSystemHttpLogsConfig": {
      "description": "Http logs to file system configuration.",
      "type": "object",
      "properties": {
        "retentionInMb": {
          "format": "int32",
          "description": "Maximum size in megabytes that http log files can use.\nWhen reached old log files will be removed to make space for new ones.\nValue can range between 25 and 100.",
          "maximum": 100,
          "minimum": 25,
          "type": "integer"
        },
        "retentionInDays": {
          "format": "int32",
          "description": "Retention in days.\nRemove files older than X days.\n0 or lower means no retention.",
          "type": "integer"
        },
        "enabled": {
          "description": "True if configuration is enabled, false if it is disabled and null if configuration is not set.",
          "type": "boolean"
        }
      }
    },
    "FunctionEnvelope": {
      "description": "Web Job Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "FunctionEnvelope resource specific properties",
          "properties": {
            "name": {
              "description": "Function name.",
              "type": "string",
              "readOnly": true
            },
            "functionAppId": {
              "description": "Function App ID.",
              "type": "string",
              "readOnly": true
            },
            "scriptRootPathHref": {
              "description": "Script root path URI.",
              "type": "string"
            },
            "scriptHref": {
              "description": "Script URI.",
              "type": "string"
            },
            "configHref": {
              "description": "Config URI.",
              "type": "string"
            },
            "secretsFileHref": {
              "description": "Secrets file URI.",
              "type": "string"
            },
            "href": {
              "description": "Function URI.",
              "type": "string"
            },
            "config": {
              "description": "Config information.",
              "type": "object"
            },
            "files": {
              "description": "File list.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "testData": {
              "description": "Test data used when testing via the Azure Portal.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "FunctionEnvelopeCollection": {
      "description": "Collection of Kudu function information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FunctionEnvelope"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "FunctionSecrets": {
      "description": "Function secrets.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "FunctionSecrets resource specific properties",
          "properties": {
            "key": {
              "description": "Secret key.",
              "type": "string"
            },
            "triggerUrl": {
              "description": "Trigger URL.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "HostNameBinding": {
      "description": "A hostname binding object.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "HostNameBinding resource specific properties",
          "properties": {
            "siteName": {
              "description": "App Service app name.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "domainId": {
              "description": "Fully qualified ARM domain resource URI.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "azureResourceName": {
              "description": "Azure resource name.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "azureResourceType": {
              "description": "Azure resource type.",
              "enum": [
                "Website",
                "TrafficManager"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AzureResourceType",
                "modelAsString": false
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "customHostNameDnsRecordType": {
              "description": "Custom DNS record type.",
              "enum": [
                "CName",
                "A"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "CustomHostNameDnsRecordType",
                "modelAsString": false
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "hostNameType": {
              "description": "Hostname type.",
              "enum": [
                "Verified",
                "Managed"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "HostNameType",
                "modelAsString": false
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "sslState": {
              "description": "SSL type",
              "enum": [
                "Disabled",
                "SniEnabled",
                "IpBasedEnabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SslState",
                "modelAsString": false
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "thumbprint": {
              "description": "SSL certificate thumbprint",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "virtualIP": {
              "description": "Virtual IP address assigned to the hostname if IP based SSL is enabled.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "HostNameBindingCollection": {
      "description": "Collection of hostname bindings.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HostNameBinding"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "HttpLogsConfig": {
      "description": "Http logs configuration.",
      "type": "object",
      "properties": {
        "fileSystem": {
          "$ref": "#/definitions/FileSystemHttpLogsConfig",
          "description": "Http logs to file system configuration."
        },
        "azureBlobStorage": {
          "$ref": "#/definitions/AzureBlobStorageHttpLogsConfig",
          "description": "Http logs to azure blob storage configuration."
        }
      }
    },
    "MSDeploy": {
      "description": "MSDeploy ARM PUT information",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/MSDeployCore",
          "description": "Core resource properties",
          "properties": {
            "addOnPackages": {
              "description": "List of Add-On packages. Add-On packages implicitly enable the Do Not Delete MSDeploy rule.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/MSDeployCore"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "MSDeployCore": {
      "description": "MSDeploy ARM PUT core information",
      "type": "object",
      "properties": {
        "packageUri": {
          "description": "Package URI",
          "type": "string"
        },
        "connectionString": {
          "description": "SQL Connection String",
          "type": "string"
        },
        "dbType": {
          "description": "Database Type",
          "type": "string"
        },
        "setParametersXmlFileUri": {
          "description": "URI of MSDeploy Parameters file. Must not be set if SetParameters is used.",
          "type": "string"
        },
        "setParameters": {
          "description": "MSDeploy Parameters. Must not be set if SetParametersXmlFileUri is used.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "skipAppData": {
          "description": "Controls whether the MSDeploy operation skips the App_Data directory.\nIf set to <code>true</code>, the existing App_Data directory on the destination\nwill not be deleted, and any App_Data directory in the source will be ignored.\nSetting is <code>false</code> by default.",
          "type": "boolean"
        },
        "appOffline": {
          "description": "Sets the AppOffline rule while the MSDeploy operation executes.\nSetting is <code>false</code> by default.",
          "type": "boolean"
        }
      }
    },
    "MSDeployLog": {
      "description": "MSDeploy log",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "MSDeployLog resource specific properties",
          "properties": {
            "entries": {
              "description": "List of log entry messages",
              "type": "array",
              "items": {
                "$ref": "#/definitions/MSDeployLogEntry"
              },
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "MSDeployLogEntry": {
      "description": "MSDeploy log entry",
      "type": "object",
      "properties": {
        "time": {
          "format": "date-time",
          "description": "Timestamp of log entry",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Log entry type",
          "enum": [
            "Message",
            "Warning",
            "Error"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "MSDeployLogEntryType",
            "modelAsString": false
          }
        },
        "message": {
          "description": "Log entry message",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "MSDeployStatus": {
      "description": "MSDeploy ARM response",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "MSDeployStatus resource specific properties",
          "properties": {
            "deployer": {
              "description": "Username of deployer",
              "type": "string",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state",
              "enum": [
                "accepted",
                "running",
                "succeeded",
                "failed",
                "canceled"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "MSDeployProvisioningState",
                "modelAsString": false
              }
            },
            "startTime": {
              "format": "date-time",
              "description": "Start time of deploy operation",
              "type": "string",
              "readOnly": true
            },
            "endTime": {
              "format": "date-time",
              "description": "End time of deploy operation",
              "type": "string",
              "readOnly": true
            },
            "complete": {
              "description": "Whether the deployment operation has completed",
              "type": "boolean",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "MigrateMySqlRequest": {
      "description": "MySQL migration request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "MigrateMySqlRequest resource specific properties",
          "required": [
            "connectionString",
            "migrationType"
          ],
          "properties": {
            "connectionString": {
              "description": "Connection string to the remote MySQL database.",
              "type": "string"
            },
            "migrationType": {
              "description": "The type of migration operation to be done",
              "enum": [
                "LocalToRemote",
                "RemoteToLocal"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "MySqlMigrationType",
                "modelAsString": false
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "MigrateMySqlStatus": {
      "description": "MySQL migration status.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "MigrateMySqlStatus resource specific properties",
          "properties": {
            "migrationOperationStatus": {
              "description": "Status of the migration task.",
              "enum": [
                "InProgress",
                "Failed",
                "Succeeded",
                "TimedOut",
                "Created"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "OperationStatus",
                "modelAsString": false
              }
            },
            "operationId": {
              "description": "Operation ID for the migration task.",
              "type": "string",
              "readOnly": true
            },
            "localMySqlEnabled": {
              "description": "True if the web app has in app MySql enabled",
              "type": "boolean",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "NetworkFeatures": {
      "description": "Full view of network features for an app (presently VNET integration and Hybrid Connections).",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "NetworkFeatures resource specific properties",
          "properties": {
            "virtualNetworkName": {
              "description": "The Virtual Network name.",
              "type": "string",
              "readOnly": true
            },
            "virtualNetworkConnection": {
              "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/VnetInfo",
              "description": "The Virtual Network summary view.",
              "readOnly": true
            },
            "hybridConnections": {
              "description": "The Hybrid Connections summary view.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/RelayServiceConnectionEntity"
              },
              "readOnly": true
            },
            "hybridConnectionsV2": {
              "description": "The Hybrid Connection V2 (Service Bus) view.",
              "type": "array",
              "items": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/HybridConnection"
              },
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "PerfMonCounterCollection": {
      "description": "Collection of performance monitor counters.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerfMonResponse"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PerfMonResponse": {
      "description": "Performance monitor API response.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The response code.",
          "type": "string"
        },
        "message": {
          "description": "The message.",
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/PerfMonSet",
          "description": "The performance monitor counters."
        }
      }
    },
    "PerfMonSample": {
      "description": "Performance monitor sample in a set.",
      "type": "object",
      "properties": {
        "time": {
          "format": "date-time",
          "description": "Point in time for which counter was measured.",
          "type": "string"
        },
        "instanceName": {
          "description": "Name of the server on which the measurement is made.",
          "type": "string"
        },
        "value": {
          "format": "double",
          "description": "Value of counter at a certain time.",
          "type": "number"
        },
        "coreCount": {
          "format": "int32",
          "description": "Core Count of worker. Not a data member",
          "type": "integer"
        }
      }
    },
    "PerfMonSet": {
      "description": "Metric information.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Unique key name of the counter.",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "Start time of the period.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "End time of the period.",
          "type": "string"
        },
        "timeGrain": {
          "description": "Presented time grain.",
          "type": "string"
        },
        "values": {
          "description": "Collection of workers that are active during this time.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerfMonSample"
          }
        }
      }
    },
    "PremierAddOn": {
      "description": "Premier add-on.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "PremierAddOn resource specific properties",
          "properties": {
            "sku": {
              "description": "Premier add on SKU.",
              "type": "string"
            },
            "product": {
              "description": "Premier add on Product.",
              "type": "string"
            },
            "vendor": {
              "description": "Premier add on Vendor.",
              "type": "string"
            },
            "name": {
              "description": "Premier add on Name.",
              "type": "string",
              "x-ms-client-name": "PremierAddOnName"
            },
            "location": {
              "description": "Premier add on Location.",
              "type": "string"
            },
            "tags": {
              "description": "Premier add on Tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "marketplacePublisher": {
              "description": "Premier add on Marketplace publisher.",
              "type": "string"
            },
            "marketplaceOffer": {
              "description": "Premier add on Marketplace offer.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ProcessInfo": {
      "description": "Process Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ProcessInfo resource specific properties",
          "properties": {
            "id": {
              "format": "int32",
              "description": "ARM Identifier for deployment.",
              "type": "integer",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "name": {
              "description": "Deployment name.",
              "type": "string"
            },
            "href": {
              "description": "HRef URI.",
              "type": "string"
            },
            "miniDump": {
              "description": "Minidump URI.",
              "type": "string"
            },
            "isProfileRunning": {
              "description": "Is profile running?",
              "type": "boolean"
            },
            "isIisProfileRunning": {
              "description": "Is the IIS Profile running?",
              "type": "boolean"
            },
            "iisProfileTimeoutInSeconds": {
              "format": "double",
              "description": "IIS Profile timeout (seconds).",
              "type": "number"
            },
            "parent": {
              "description": "Parent process.",
              "type": "string"
            },
            "children": {
              "description": "Child process list.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "threads": {
              "description": "Thread list.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessThreadInfo"
              }
            },
            "openFileHandles": {
              "description": "List of open files.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "modules": {
              "description": "List of modules.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessModuleInfo"
              }
            },
            "fileName": {
              "description": "File name of this process.",
              "type": "string"
            },
            "commandLine": {
              "description": "Command line.",
              "type": "string"
            },
            "userName": {
              "description": "User name.",
              "type": "string"
            },
            "handleCount": {
              "format": "int32",
              "description": "Handle count.",
              "type": "integer"
            },
            "moduleCount": {
              "format": "int32",
              "description": "Module count.",
              "type": "integer"
            },
            "threadCount": {
              "format": "int32",
              "description": "Thread count.",
              "type": "integer"
            },
            "startTime": {
              "format": "date-time",
              "description": "Start time.",
              "type": "string"
            },
            "totalProcessorTime": {
              "description": "Total CPU time.",
              "type": "string"
            },
            "userProcessorTime": {
              "description": "User CPU time.",
              "type": "string"
            },
            "privilegedProcessorTime": {
              "description": "Privileged CPU time.",
              "type": "string"
            },
            "workingSet64": {
              "format": "int64",
              "description": "Working set.",
              "type": "integer"
            },
            "peakWorkingSet64": {
              "format": "int64",
              "description": "Peak working set.",
              "type": "integer"
            },
            "privateMemorySize64": {
              "format": "int64",
              "description": "Private memory size.",
              "type": "integer"
            },
            "virtualMemorySize64": {
              "format": "int64",
              "description": "Virtual memory size.",
              "type": "integer"
            },
            "peakVirtualMemorySize64": {
              "format": "int64",
              "description": "Peak virtual memory usage.",
              "type": "integer"
            },
            "pagedSystemMemorySize64": {
              "format": "int64",
              "description": "Paged system memory.",
              "type": "integer"
            },
            "nonpagedSystemMemorySize64": {
              "format": "int64",
              "description": "Non-paged system memory.",
              "type": "integer"
            },
            "pagedMemorySize64": {
              "format": "int64",
              "description": "Paged memory.",
              "type": "integer"
            },
            "peakPagedMemorySize64": {
              "format": "int64",
              "description": "Peak paged memory.",
              "type": "integer"
            },
            "timeStamp": {
              "format": "date-time",
              "description": "Time stamp.",
              "type": "string"
            },
            "environmentVariables": {
              "description": "List of environment variables.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "isScmSite": {
              "description": "Is this the SCM site?",
              "type": "boolean"
            },
            "isWebJob": {
              "description": "Is this a Web Job?",
              "type": "boolean"
            },
            "description": {
              "description": "Description of process.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ProcessInfoCollection": {
      "description": "Collection of Kudu process information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessInfo"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ProcessModuleInfo": {
      "description": "Process Module Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ProcessModuleInfo resource specific properties",
          "properties": {
            "baseAddress": {
              "description": "Base address. Used as module identifier in ARM resource URI.",
              "type": "string"
            },
            "fileName": {
              "description": "File name.",
              "type": "string"
            },
            "href": {
              "description": "HRef URI.",
              "type": "string"
            },
            "filePath": {
              "description": "File path.",
              "type": "string"
            },
            "moduleMemorySize": {
              "format": "int32",
              "description": "Module memory size.",
              "type": "integer"
            },
            "fileVersion": {
              "description": "File version.",
              "type": "string"
            },
            "fileDescription": {
              "description": "File description.",
              "type": "string"
            },
            "product": {
              "description": "Product name.",
              "type": "string"
            },
            "productVersion": {
              "description": "Product version.",
              "type": "string"
            },
            "isDebug": {
              "description": "Is debug?",
              "type": "boolean"
            },
            "language": {
              "description": "Module language (locale).",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ProcessModuleInfoCollection": {
      "description": "Collection of Kudu thread information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessModuleInfo"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ProcessThreadInfo": {
      "description": "Process Thread Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ProcessThreadInfo resource specific properties",
          "properties": {
            "id": {
              "format": "int32",
              "description": "ARM Identifier for deployment.",
              "type": "integer"
            },
            "href": {
              "description": "HRef URI.",
              "type": "string"
            },
            "process": {
              "description": "Process URI.",
              "type": "string"
            },
            "startAddress": {
              "description": "Start address.",
              "type": "string"
            },
            "currentPriority": {
              "format": "int32",
              "description": "Current thread priority.",
              "type": "integer"
            },
            "priorityLevel": {
              "description": "Thread priority level.",
              "type": "string"
            },
            "basePriority": {
              "format": "int32",
              "description": "Base priority.",
              "type": "integer"
            },
            "startTime": {
              "format": "date-time",
              "description": "Start time.",
              "type": "string"
            },
            "totalProcessorTime": {
              "description": "Total processor time.",
              "type": "string"
            },
            "userProcessorTime": {
              "description": "User processor time.",
              "type": "string"
            },
            "priviledgedProcessorTime": {
              "description": "Priviledged processor time.",
              "type": "string"
            },
            "state": {
              "description": "Thread state.",
              "type": "string"
            },
            "waitReason": {
              "description": "Wait reason.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ProcessThreadInfoCollection": {
      "description": "Collection of Kudu thread information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessThreadInfo"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PublicCertificate": {
      "description": "Public certificate object",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "PublicCertificate resource specific properties",
          "properties": {
            "blob": {
              "format": "byte",
              "description": "Public Certificate byte array",
              "type": "string"
            },
            "publicCertificateLocation": {
              "description": "Public Certificate Location",
              "enum": [
                "CurrentUserMy",
                "LocalMachineMy",
                "Unknown"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PublicCertificateLocation",
                "modelAsString": false
              }
            },
            "thumbprint": {
              "description": "Certificate Thumbprint",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "PublicCertificateCollection": {
      "description": "Collection of public certificates",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PublicCertificate"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RelayServiceConnectionEntity": {
      "description": "Hybrid Connection for an App Service app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "RelayServiceConnectionEntity resource specific properties",
          "properties": {
            "entityName": {
              "type": "string"
            },
            "entityConnectionString": {
              "type": "string"
            },
            "resourceType": {
              "type": "string"
            },
            "resourceConnectionString": {
              "type": "string"
            },
            "hostname": {
              "type": "string"
            },
            "port": {
              "format": "int32",
              "type": "integer"
            },
            "biztalkUri": {
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "RestoreRequest": {
      "description": "Description of a restore request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "RestoreRequest resource specific properties",
          "required": [
            "storageAccountUrl",
            "overwrite"
          ],
          "properties": {
            "storageAccountUrl": {
              "description": "SAS URL to the container.",
              "type": "string"
            },
            "blobName": {
              "description": "Name of a blob which contains the backup.",
              "type": "string"
            },
            "overwrite": {
              "description": "<code>true</code> if the restore operation can overwrite target app; otherwise, <code>false</code>. <code>true</code> is needed if trying to restore over an existing app.",
              "type": "boolean"
            },
            "siteName": {
              "description": "Name of an app.",
              "type": "string"
            },
            "databases": {
              "description": "Collection of databases which should be restored. This list has to match the list of databases included in the backup.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatabaseBackupSetting"
              }
            },
            "ignoreConflictingHostNames": {
              "description": "Changes a logic when restoring an app with custom domains. <code>true</code> to remove custom domains automatically. If <code>false</code>, custom domains are added to \nthe app's object when it is being restored, but that might fail due to conflicts during the operation.",
              "default": false,
              "type": "boolean"
            },
            "ignoreDatabases": {
              "description": "Ignore the databases and only restore the site content",
              "default": false,
              "type": "boolean"
            },
            "appServicePlan": {
              "description": "Specify app service plan that will own restored site.",
              "type": "string"
            },
            "operationType": {
              "description": "Operation type.",
              "default": "Default",
              "enum": [
                "Default",
                "Clone",
                "Relocation",
                "Snapshot"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "BackupRestoreOperationType",
                "modelAsString": false
              }
            },
            "adjustConnectionStrings": {
              "description": "<code>true</code> if SiteConfig.ConnectionStrings should be set in new app; otherwise, <code>false</code>.",
              "type": "boolean"
            },
            "hostingEnvironment": {
              "description": "App Service Environment name, if needed (only when restoring an app to an App Service Environment).",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "RestoreResponse": {
      "description": "Response for an app restore request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "RestoreResponse resource specific properties",
          "properties": {
            "operationId": {
              "description": "When server starts the restore process, it will return an operation ID identifying that particular restore operation.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteAuthSettings": {
      "description": "Configuration settings for the Azure App Service Authentication / Authorization feature.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteAuthSettings resource specific properties",
          "properties": {
            "enabled": {
              "description": "<code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.",
              "type": "boolean"
            },
            "runtimeVersion": {
              "description": "The RuntimeVersion of the Authentication / Authorization feature in use for the current app.\nThe setting in this value can control the behavior of certain features in the Authentication / Authorization module.",
              "type": "string"
            },
            "unauthenticatedClientAction": {
              "description": "The action to take when an unauthenticated client attempts to access the app.",
              "enum": [
                "RedirectToLoginPage",
                "AllowAnonymous"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "UnauthenticatedClientAction",
                "modelAsString": false
              }
            },
            "tokenStoreEnabled": {
              "description": "<code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.\n The default is <code>false</code>.",
              "type": "boolean"
            },
            "allowedExternalRedirectUrls": {
              "description": "External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.\nThis is an advanced setting typically only needed by Windows Store application backends.\nNote that URLs within the current domain are always implicitly allowed.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "defaultProvider": {
              "description": "The default authentication provider to use when multiple providers are configured.\nThis setting is only needed if multiple providers are configured and the unauthenticated client\naction is set to \"RedirectToLoginPage\".",
              "enum": [
                "AzureActiveDirectory",
                "Facebook",
                "Google",
                "MicrosoftAccount",
                "Twitter"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "BuiltInAuthenticationProvider",
                "modelAsString": false
              }
            },
            "tokenRefreshExtensionHours": {
              "format": "double",
              "description": "The number of hours after session token expiration that a session token can be used to\ncall the token refresh API. The default is 72 hours.",
              "type": "number"
            },
            "clientId": {
              "description": "The Client ID of this relying party application, known as the client_id.\nThis setting is required for enabling OpenID Connection authentication with Azure Active Directory or \nother 3rd party OpenID Connect providers.\nMore information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
              "type": "string"
            },
            "clientSecret": {
              "description": "The Client Secret of this relying party application (in Azure Active Directory, this is also referred to as the Key).\nThis setting is optional. If no client secret is configured, the OpenID Connect implicit auth flow is used to authenticate end users.\nOtherwise, the OpenID Connect Authorization Code Flow is used to authenticate end users.\nMore information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
              "type": "string"
            },
            "issuer": {
              "description": "The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.\nWhen using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.\nThis URI is a case-sensitive identifier for the token issuer.\nMore information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html",
              "type": "string"
            },
            "allowedAudiences": {
              "description": "Allowed audience values to consider when validating JWTs issued by \nAzure Active Directory. Note that the <code>ClientID</code> value is always considered an\nallowed audience, regardless of this setting.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "additionalLoginParams": {
              "description": "Login parameters to send to the OpenID Connect authorization endpoint when\na user logs in. Each parameter must be in the form \"key=value\".",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "googleClientId": {
              "description": "The OpenID Connect Client ID for the Google web application.\nThis setting is required for enabling Google Sign-In.\nGoogle Sign-In documentation: https://developers.google.com/identity/sign-in/web/",
              "type": "string"
            },
            "googleClientSecret": {
              "description": "The client secret associated with the Google web application.\nThis setting is required for enabling Google Sign-In.\nGoogle Sign-In documentation: https://developers.google.com/identity/sign-in/web/",
              "type": "string"
            },
            "googleOAuthScopes": {
              "description": "The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication.\nThis setting is optional. If not specified, \"openid\", \"profile\", and \"email\" are used as default scopes.\nGoogle Sign-In documentation: https://developers.google.com/identity/sign-in/web/",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "facebookAppId": {
              "description": "The App ID of the Facebook app used for login.\nThis setting is required for enabling Facebook Login.\nFacebook Login documentation: https://developers.facebook.com/docs/facebook-login",
              "type": "string"
            },
            "facebookAppSecret": {
              "description": "The App Secret of the Facebook app used for Facebook Login.\nThis setting is required for enabling Facebook Login.\nFacebook Login documentation: https://developers.facebook.com/docs/facebook-login",
              "type": "string"
            },
            "facebookOAuthScopes": {
              "description": "The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication.\nThis setting is optional.\nFacebook Login documentation: https://developers.facebook.com/docs/facebook-login",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "twitterConsumerKey": {
              "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThis setting is required for enabling Twitter Sign-In.\nTwitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
              "type": "string"
            },
            "twitterConsumerSecret": {
              "description": "The OAuth 1.0a consumer secret of the Twitter application used for sign-in.\nThis setting is required for enabling Twitter Sign-In.\nTwitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
              "type": "string"
            },
            "microsoftAccountClientId": {
              "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThis setting is required for enabling Microsoft Account authentication.\nMicrosoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm",
              "type": "string"
            },
            "microsoftAccountClientSecret": {
              "description": "The OAuth 2.0 client secret that was created for the app used for authentication.\nThis setting is required for enabling Microsoft Account authentication.\nMicrosoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm",
              "type": "string"
            },
            "microsoftAccountOAuthScopes": {
              "description": "The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication.\nThis setting is optional. If not specified, \"wl.basic\" is used as the default scope.\nMicrosoft Account Scopes and permissions documentation: https://msdn.microsoft.com/en-us/library/dn631845.aspx",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteCloneability": {
      "description": "Represents whether or not an app is cloneable.",
      "type": "object",
      "properties": {
        "result": {
          "description": "Name of app.",
          "enum": [
            "Cloneable",
            "PartiallyCloneable",
            "NotCloneable"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CloneAbilityResult",
            "modelAsString": false
          }
        },
        "blockingFeatures": {
          "description": "List of features enabled on app that prevent cloning.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteCloneabilityCriterion"
          }
        },
        "unsupportedFeatures": {
          "description": "List of features enabled on app that are non-blocking but cannot be cloned. The app can still be cloned\nbut the features in this list will not be set up on cloned app.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteCloneabilityCriterion"
          }
        },
        "blockingCharacteristics": {
          "description": "List of blocking application characteristics.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteCloneabilityCriterion"
          }
        }
      }
    },
    "SiteCloneabilityCriterion": {
      "description": "An app cloneability criterion.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of criterion.",
          "type": "string"
        },
        "description": {
          "description": "Description of criterion.",
          "type": "string"
        }
      }
    },
    "SiteConfigResource": {
      "description": "Web app configuration ARM resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/SiteConfig",
          "description": "Core resource properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteConfigResourceCollection": {
      "description": "Collection of site configurations.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteConfigResource"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SiteConfigurationSnapshotInfo": {
      "description": "A snapshot of a web app configuration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteConfigurationSnapshotInfo resource specific properties",
          "properties": {
            "time": {
              "format": "date-time",
              "description": "The time the snapshot was taken.",
              "type": "string",
              "readOnly": true
            },
            "id": {
              "format": "int32",
              "description": "The id of the snapshot",
              "type": "integer",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteConfigurationSnapshotInfoCollection": {
      "description": "Collection of metadata for the app configuration snapshots that can be restored.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteConfigurationSnapshotInfo"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SiteExtensionInfo": {
      "description": "Site Extension Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteExtensionInfo resource specific properties",
          "properties": {
            "id": {
              "description": "Site extension ID.",
              "type": "string"
            },
            "title": {
              "description": "Site extension title.",
              "type": "string"
            },
            "type": {
              "description": "Site extension type.",
              "enum": [
                "Gallery",
                "WebRoot"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SiteExtensionType",
                "modelAsString": false
              }
            },
            "summary": {
              "description": "Summary description.",
              "type": "string"
            },
            "description": {
              "description": "Detailed description.",
              "type": "string"
            },
            "version": {
              "description": "Version information.",
              "type": "string"
            },
            "extensionUrl": {
              "description": "Extension URL.",
              "type": "string"
            },
            "projectUrl": {
              "description": "Project URL.",
              "type": "string"
            },
            "iconUrl": {
              "description": "Icon URL.",
              "type": "string"
            },
            "licenseUrl": {
              "description": "License URL.",
              "type": "string"
            },
            "feedUrl": {
              "description": "Feed URL.",
              "type": "string"
            },
            "authors": {
              "description": "List of authors.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "installationArgs": {
              "description": "Installer command line parameters.",
              "type": "string"
            },
            "publishedDateTime": {
              "format": "date-time",
              "description": "Published timestamp.",
              "type": "string"
            },
            "downloadCount": {
              "format": "int32",
              "description": "Count of downloads.",
              "type": "integer"
            },
            "localIsLatestVersion": {
              "description": "<code>true</code> if the local version is the latest version; <code>false</code> otherwise.",
              "type": "boolean"
            },
            "localPath": {
              "description": "Local path.",
              "type": "string"
            },
            "installedDateTime": {
              "format": "date-time",
              "description": "Installed timestamp.",
              "type": "string"
            },
            "provisioningState": {
              "description": "Provisioning state.",
              "type": "string"
            },
            "comment": {
              "description": "Site Extension comment.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteExtensionInfoCollection": {
      "description": "Collection of Kudu site extension information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteExtensionInfo"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SiteInstance": {
      "description": "Instance of an app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteInstance resource specific properties",
          "properties": {
            "name": {
              "description": "Name of instance.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteLogsConfig": {
      "description": "Configuration of App Service site logs.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteLogsConfig resource specific properties",
          "properties": {
            "applicationLogs": {
              "$ref": "#/definitions/ApplicationLogsConfig",
              "description": "Application logs configuration."
            },
            "httpLogs": {
              "$ref": "#/definitions/HttpLogsConfig",
              "description": "HTTP logs configuration."
            },
            "failedRequestsTracing": {
              "$ref": "#/definitions/EnabledConfig",
              "description": "Failed requests tracing configuration."
            },
            "detailedErrorMessages": {
              "$ref": "#/definitions/EnabledConfig",
              "description": "Detailed error messages configuration."
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SitePatchResource": {
      "description": "ARM resource for a site.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SitePatchResource resource specific properties",
          "properties": {
            "state": {
              "description": "Current state of the app.",
              "type": "string",
              "readOnly": true
            },
            "hostNames": {
              "description": "Hostnames associated with the app.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "repositorySiteName": {
              "description": "Name of the repository site.",
              "type": "string",
              "readOnly": true
            },
            "usageState": {
              "description": "State indicating whether the app has exceeded its quota usage. Read-only.",
              "enum": [
                "Normal",
                "Exceeded"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "UsageState",
                "modelAsString": false
              }
            },
            "enabled": {
              "description": "<code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to false disables the app (takes the app offline).",
              "type": "boolean"
            },
            "enabledHostNames": {
              "description": "Enabled hostnames for the app.Hostnames need to be assigned (see HostNames) AND enabled. Otherwise,\nthe app is not served on those hostnames.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "availabilityState": {
              "description": "Management information availability state for the app.",
              "enum": [
                "Normal",
                "Limited",
                "DisasterRecoveryMode"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "SiteAvailabilityState",
                "modelAsString": false
              }
            },
            "hostNameSslStates": {
              "description": "Hostname SSL states are used to manage the SSL bindings for app's hostnames.",
              "type": "array",
              "items": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/HostNameSslState"
              }
            },
            "serverFarmId": {
              "description": "Resource ID of the associated App Service plan, formatted as: \"/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}\".",
              "type": "string"
            },
            "reserved": {
              "description": "<code>true</code> if reserved; otherwise, <code>false</code>.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "lastModifiedTimeUtc": {
              "format": "date-time",
              "description": "Last time the app was modified, in UTC. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "siteConfig": {
              "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/SiteConfig",
              "description": "Configuration of the app."
            },
            "trafficManagerHostNames": {
              "description": "Azure Traffic Manager hostnames associated with the app. Read-only.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "scmSiteAlsoStopped": {
              "description": "<code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise, <code>false</code>. The default is <code>false</code>.",
              "default": false,
              "type": "boolean"
            },
            "targetSwapSlot": {
              "description": "Specifies which deployment slot this app will swap into. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "hostingEnvironmentProfile": {
              "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/HostingEnvironmentProfile",
              "description": "App Service Environment to use for the app.",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "clientAffinityEnabled": {
              "description": "<code>true</code> to enable client affinity; <code>false</code> to stop sending session affinity cookies, which route client requests in the same session to the same instance. Default is <code>true</code>.",
              "type": "boolean"
            },
            "clientCertEnabled": {
              "description": "<code>true</code> to enable client certificate authentication (TLS mutual authentication); otherwise, <code>false</code>. Default is <code>false</code>.",
              "type": "boolean"
            },
            "hostNamesDisabled": {
              "description": "<code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.\n If <code>true</code>, the app is only accessible via API management process.",
              "type": "boolean"
            },
            "outboundIpAddresses": {
              "description": "List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from tenants that site can be hosted with current settings. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "possibleOutboundIpAddresses": {
              "description": "List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from all tenants. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "containerSize": {
              "format": "int32",
              "description": "Size of the function container.",
              "type": "integer"
            },
            "dailyMemoryTimeQuota": {
              "format": "int32",
              "description": "Maximum allowed daily memory-time quota (applicable on dynamic apps only).",
              "type": "integer"
            },
            "suspendedTill": {
              "format": "date-time",
              "description": "App suspended till in case memory-time quota is exceeded.",
              "type": "string",
              "readOnly": true
            },
            "maxNumberOfWorkers": {
              "format": "int32",
              "description": "Maximum number of workers.\nThis only applies to Functions container.",
              "type": "integer",
              "readOnly": true
            },
            "cloningInfo": {
              "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/CloningInfo",
              "description": "If specified during app creation, the app is cloned from a source app.",
              "x-ms-mutability": [
                "create"
              ]
            },
            "snapshotInfo": {
              "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/SnapshotRecoveryRequest",
              "description": "If specified during app creation, the app is created from a previous snapshot.",
              "x-ms-mutability": [
                "create"
              ]
            },
            "resourceGroup": {
              "description": "Name of the resource group the app belongs to. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "isDefaultContainer": {
              "description": "<code>true</code> if the app is a default container; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "defaultHostName": {
              "description": "Default hostname of the app. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "slotSwapStatus": {
              "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/SlotSwapStatus",
              "description": "Status of the last deployment slot swap operation.",
              "readOnly": true
            },
            "httpsOnly": {
              "description": "HttpsOnly: configures a web site to accept only https requests. Issues redirect for\nhttp requests",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SitePhpErrorLogFlag": {
      "description": "Used for getting PHP error logging flag.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SitePhpErrorLogFlag resource specific properties",
          "properties": {
            "localLogErrors": {
              "description": "Local log_errors setting.",
              "type": "string"
            },
            "masterLogErrors": {
              "description": "Master log_errors setting.",
              "type": "string"
            },
            "localLogErrorsMaxLength": {
              "description": "Local log_errors_max_len setting.",
              "type": "string"
            },
            "masterLogErrorsMaxLength": {
              "description": "Master log_errors_max_len setting.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteSourceControl": {
      "description": "Source control configuration for an app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteSourceControl resource specific properties",
          "properties": {
            "repoUrl": {
              "description": "Repository or source control URL.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "branch": {
              "description": "Name of branch to use for deployment.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "isManualIntegration": {
              "description": "<code>true</code> to limit to manual integration; <code>false</code> to enable continuous integration (which configures webhooks into online repos like GitHub).",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "deploymentRollbackEnabled": {
              "description": "<code>true</code> to enable deployment rollback; otherwise, <code>false</code>.",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "isMercurial": {
              "description": "<code>true</code> for a Mercurial repository; <code>false</code> for a Git repository.",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SlotConfigNames": {
      "description": "Names for connection strings and application settings to be marked as sticky to the deployment slot and not moved during a swap operation.\nThis is valid for all deployment slots in an app.",
      "type": "object",
      "properties": {
        "connectionStringNames": {
          "description": "List of connection string names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "appSettingNames": {
          "description": "List of application settings names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SlotConfigNamesResource": {
      "description": "Slot Config names azure resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/SlotConfigNames",
          "description": "Core resource properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "SlotDifference": {
      "description": "A setting difference between two deployment slots of an app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SlotDifference resource specific properties",
          "properties": {
            "type": {
              "description": "Type of the difference: Information, Warning or Error.",
              "type": "string",
              "readOnly": true
            },
            "settingType": {
              "description": "The type of the setting: General, AppSetting or ConnectionString.",
              "type": "string",
              "readOnly": true
            },
            "diffRule": {
              "description": "Rule that describes how to process the setting difference during a slot swap.",
              "type": "string",
              "readOnly": true
            },
            "settingName": {
              "description": "Name of the setting.",
              "type": "string",
              "readOnly": true
            },
            "valueInCurrentSlot": {
              "description": "Value of the setting in the current slot.",
              "type": "string",
              "readOnly": true
            },
            "valueInTargetSlot": {
              "description": "Value of the setting in the target slot.",
              "type": "string",
              "readOnly": true
            },
            "description": {
              "description": "Description of the setting difference.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SlotDifferenceCollection": {
      "description": "Collection of slot differences.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SlotDifference"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Snapshot": {
      "description": "A snapshot of an app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Snapshot resource specific properties",
          "properties": {
            "time": {
              "description": "The time the snapshot was taken.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SnapshotCollection": {
      "description": "Collection of snapshots which can be used to revert an app to a previous time.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Snapshot"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "StorageMigrationOptions": {
      "description": "Options for app content migration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "StorageMigrationOptions resource specific properties",
          "required": [
            "azurefilesConnectionString",
            "azurefilesShare"
          ],
          "properties": {
            "azurefilesConnectionString": {
              "description": "AzureFiles connection string.",
              "type": "string",
              "x-ms-mutability": [
                "create"
              ]
            },
            "azurefilesShare": {
              "description": "AzureFiles share.",
              "type": "string",
              "x-ms-mutability": [
                "create"
              ]
            },
            "switchSiteAfterMigration": {
              "description": "<code>true</code>if the app should be switched over; otherwise, <code>false</code>.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create"
              ]
            },
            "blockWriteAccessToSite": {
              "description": "<code>true</code> if the app should be read only during copy operation; otherwise, <code>false</code>.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StorageMigrationResponse": {
      "description": "Response for a migration of app content request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "StorageMigrationResponse resource specific properties",
          "properties": {
            "operationId": {
              "description": "When server starts the migration process, it will return an operation ID identifying that particular migration operation.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StringDictionary": {
      "description": "String dictionary resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Settings.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "TriggeredJobHistory": {
      "description": "Triggered Web Job History. List of Triggered Web Job Run Information elements.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "TriggeredJobHistory resource specific properties",
          "properties": {
            "triggeredJobRuns": {
              "description": "List of triggered web job runs.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TriggeredJobRun"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "TriggeredJobHistoryCollection": {
      "description": "Collection of Kudu continuous web job information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TriggeredJobHistory"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TriggeredJobRun": {
      "description": "Triggered Web Job Run Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "TriggeredJobRun resource specific properties",
          "properties": {
            "id": {
              "description": "Job ID.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "name": {
              "description": "Job name.",
              "type": "string",
              "readOnly": true
            },
            "status": {
              "description": "Job status.",
              "enum": [
                "Success",
                "Failed",
                "Error"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "TriggeredWebJobStatus",
                "modelAsString": false
              }
            },
            "startTime": {
              "format": "date-time",
              "description": "Start time.",
              "type": "string"
            },
            "endTime": {
              "format": "date-time",
              "description": "End time.",
              "type": "string"
            },
            "duration": {
              "description": "Job duration.",
              "type": "string"
            },
            "outputUrl": {
              "description": "Output URL.",
              "type": "string"
            },
            "errorUrl": {
              "description": "Error URL.",
              "type": "string"
            },
            "url": {
              "description": "Job URL.",
              "type": "string"
            },
            "jobName": {
              "description": "Job name.",
              "type": "string"
            },
            "trigger": {
              "description": "Job trigger.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "TriggeredWebJob": {
      "description": "Triggered Web Job Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "TriggeredWebJob resource specific properties",
          "properties": {
            "latestRun": {
              "$ref": "#/definitions/TriggeredJobRun",
              "description": "Latest job run information."
            },
            "historyUrl": {
              "description": "History URL.",
              "type": "string"
            },
            "schedulerLogsUrl": {
              "description": "Scheduler Logs URL.",
              "type": "string"
            },
            "name": {
              "description": "Job name. Used as job identifier in ARM resource URI.",
              "type": "string",
              "readOnly": true
            },
            "runCommand": {
              "description": "Run command.",
              "type": "string"
            },
            "url": {
              "description": "Job URL.",
              "type": "string"
            },
            "extraInfoUrl": {
              "description": "Extra Info URL.",
              "type": "string"
            },
            "jobType": {
              "description": "Job type.",
              "enum": [
                "Continuous",
                "Triggered"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "WebJobType",
                "modelAsString": false
              }
            },
            "error": {
              "description": "Error information.",
              "type": "string"
            },
            "usingSdk": {
              "description": "Using SDK?",
              "type": "boolean"
            },
            "settings": {
              "description": "Job settings.",
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "TriggeredWebJobCollection": {
      "description": "Collection of Kudu continuous web job information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TriggeredWebJob"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WebAppInstanceCollection": {
      "description": "Collection of app instances.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteInstance"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WebJob": {
      "description": "Web Job Information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "WebJob resource specific properties",
          "properties": {
            "name": {
              "description": "Job name. Used as job identifier in ARM resource URI.",
              "type": "string",
              "readOnly": true
            },
            "runCommand": {
              "description": "Run command.",
              "type": "string"
            },
            "url": {
              "description": "Job URL.",
              "type": "string"
            },
            "extraInfoUrl": {
              "description": "Extra Info URL.",
              "type": "string"
            },
            "jobType": {
              "description": "Job type.",
              "enum": [
                "Continuous",
                "Triggered"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "WebJobType",
                "modelAsString": false
              }
            },
            "error": {
              "description": "Error information.",
              "type": "string"
            },
            "usingSdk": {
              "description": "Using SDK?",
              "type": "boolean"
            },
            "settings": {
              "description": "Job settings.",
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "WebJobCollection": {
      "description": "Collection of Kudu web job information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebJob"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
      "required": true,
      "type": "string"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "Name of the resource group to which the resource belongs.",
      "required": true,
      "type": "string",
      "maxLength": 90,
      "minLength": 1,
      "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
      "x-ms-parameter-location": "method"
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "API Version",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "x-internal-service-name": "App Service",
  "x-internal-toc-name": "Web Apps",
  "x-internal-split-type": "Operation",
  "x-internal-operation-name": "List Perf Mon Counters Slot"
}
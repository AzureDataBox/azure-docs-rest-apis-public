{
  "swagger": "2.0",
  "info": {
    "title": "ApiManagementClient",
    "description": "Use these REST APIs for performing operations on User entity in Azure API Management deployment. The User entity in API Management represents the developers that call the APIs of the products to which they are subscribed.",
    "version": "2018-01-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/identities": {
      "get": {
        "tags": [
          "UserIdentities"
        ],
        "operationId": "UserIdentities_List",
        "description": "Lists all user identities.",
        "x-ms-examples": {
          "ApiManagementListUsersIdentities": {
            "$ref": "#/definitions/ApiManagementListUsersIdentities"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/UserIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "responses": {
          "200": {
            "description": "Lists of User Identities.",
            "schema": {
              "$ref": "#/definitions/UserIdentityCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-internal-toc-name": "List"
      }
    }
  },
  "definitions": {
    "GenerateSsoUrlResult": {
      "properties": {
        "value": {
          "type": "string",
          "description": "Redirect Url containing the SSO URL value."
        }
      },
      "description": "Generate SSO Url operations response details."
    },
    "UserCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserContract"
          },
          "description": "Page values."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Users list representation."
    },
    "UserContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UserContractProperties",
          "description": "User entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./apimanagement.json#/definitions/Resource"
        }
      ],
      "description": "User details."
    },
    "UserContractProperties": {
      "properties": {
        "firstName": {
          "type": "string",
          "description": "First name."
        },
        "lastName": {
          "type": "string",
          "description": "Last name."
        },
        "email": {
          "type": "string",
          "description": "Email address."
        },
        "registrationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date of user registration. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "groups": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./apimgroups.json#/definitions/GroupContractProperties"
          },
          "description": "Collection of groups user is part of."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/UserEntityBaseParameters"
        }
      ],
      "description": "User profile."
    },
    "UserCreateParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UserCreateParameterProperties",
          "description": "User entity create contract properties."
        }
      },
      "description": "User create details."
    },
    "UserCreateParameterProperties": {
      "properties": {
        "email": {
          "type": "string",
          "description": "Email address. Must not be empty and must be unique within the service instance.",
          "minLength": 1,
          "maxLength": 254
        },
        "firstName": {
          "type": "string",
          "description": "First name.",
          "minLength": 1,
          "maxLength": 100
        },
        "lastName": {
          "type": "string",
          "description": "Last name.",
          "minLength": 1,
          "maxLength": 100
        },
        "password": {
          "type": "string",
          "description": "User Password. If no value is provided, a default password is generated."
        },
        "confirmation": {
          "type": "string",
          "description": "Determines the type of confirmation e-mail that will be sent to the newly created user.",
          "enum": [
            "signup",
            "invite"
          ],
          "x-ms-enum": {
            "name": "Confirmation",
            "modelAsString": true,
            "values": [
              {
                "value": "signup",
                "description": "Send an e-mail to the user confirming they have successfully signed up."
              },
              {
                "value": "invite",
                "description": "Send an e-mail inviting the user to sign-up and complete registration."
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/UserEntityBaseParameters"
        }
      ],
      "required": [
        "email",
        "firstName",
        "lastName"
      ],
      "description": "Parameters supplied to the Create User operation."
    },
    "UserEntityBaseParameters": {
      "properties": {
        "state": {
          "type": "string",
          "description": "Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active.",
          "enum": [
            "active",
            "blocked",
            "pending",
            "deleted"
          ],
          "default": "active",
          "x-ms-enum": {
            "name": "UserState",
            "modelAsString": true,
            "values": [
              {
                "value": "active",
                "description": "User state is active."
              },
              {
                "value": "blocked",
                "description": "User is blocked. Blocked users cannot authenticate at developer portal or call API."
              },
              {
                "value": "pending",
                "description": "User account is pending. Requires identity confirmation before it can be made active."
              },
              {
                "value": "deleted",
                "description": "User account is closed. All identities and related entities are removed."
              }
            ]
          }
        },
        "note": {
          "type": "string",
          "description": "Optional note about a user set by the administrator."
        },
        "identities": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserIdentityContract"
          },
          "description": "Collection of user identities."
        }
      },
      "description": "User Entity Base Parameters set."
    },
    "UserIdentityCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserIdentityContract"
          },
          "description": "User Identity values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "List of Users Identity list representation."
    },
    "UserIdentityContract": {
      "properties": {
        "provider": {
          "type": "string",
          "description": "Identity provider name."
        },
        "id": {
          "type": "string",
          "description": "Identifier value within provider."
        }
      },
      "description": "User identity details."
    },
    "UserTokenParameters": {
      "properties": {
        "keyType": {
          "type": "string",
          "description": "The Key to be used to generate token for user.",
          "enum": [
            "primary",
            "secondary"
          ],
          "default": "primary",
          "x-ms-enum": {
            "name": "KeyType",
            "modelAsString": false
          }
        },
        "expiry": {
          "type": "string",
          "format": "date-time",
          "description": "The Expiry time of the Token. Maximum token expiry time is set to 30 days. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        }
      },
      "required": [
        "keyType",
        "expiry"
      ],
      "description": "Parameters supplied to the Get User Token operation."
    },
    "UserTokenResult": {
      "properties": {
        "value": {
          "type": "string",
          "description": "Shared Access Authorization token for the User."
        }
      },
      "description": "Get User Token response details."
    },
    "UserUpdateParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UserUpdateParametersProperties",
          "description": "User entity update contract properties."
        }
      },
      "description": "User update parameters."
    },
    "UserUpdateParametersProperties": {
      "properties": {
        "email": {
          "type": "string",
          "description": "Email address. Must not be empty and must be unique within the service instance.",
          "minLength": 1,
          "maxLength": 254
        },
        "password": {
          "type": "string",
          "description": "User Password."
        },
        "firstName": {
          "type": "string",
          "description": "First name.",
          "minLength": 1,
          "maxLength": 100
        },
        "lastName": {
          "type": "string",
          "description": "Last name.",
          "minLength": 1,
          "maxLength": 100
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/UserEntityBaseParameters"
        }
      ],
      "description": "Parameters supplied to the Update User operation."
    },
    "ApiManagementListUsers": {
      "parameters": {
        "resourceGroupName": "rg1",
        "serviceName": "apimService1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid"
      },
      "responses": {
        "200": {
          "body": {
            "value": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/1",
                "type": "Microsoft.ApiManagement/service/users",
                "name": "1",
                "properties": {
                  "firstName": "Administrator",
                  "lastName": "",
                  "email": "admin@live.com",
                  "state": "active",
                  "registrationDate": "2015-09-22T01:57:39.677Z",
                  "identities": [
                    {
                      "provider": "Azure",
                      "id": "admin@live.com"
                    }
                  ]
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/56eaec62baf08b06e46d27fd",
                "type": "Microsoft.ApiManagement/service/users",
                "name": "56eaec62baf08b06e46d27fd",
                "properties": {
                  "firstName": "foo",
                  "lastName": "bar",
                  "email": "foo.bar.83@gmail.com",
                  "state": "active",
                  "registrationDate": "2016-03-17T17:41:56.327Z",
                  "identities": [
                    {
                      "provider": "Basic",
                      "id": "foo.bar.83@gmail.com"
                    }
                  ]
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/5931a75ae4bbd512a88c680b",
                "type": "Microsoft.ApiManagement/service/users",
                "name": "5931a75ae4bbd512a88c680b",
                "properties": {
                  "firstName": "foo",
                  "lastName": "bar",
                  "email": "foobar@outlook.com",
                  "state": "active",
                  "registrationDate": "2017-06-02T17:58:50.357Z",
                  "identities": [
                    {
                      "provider": "Microsoft",
                      "id": "*************"
                    }
                  ]
                }
              }
            ],
            "nextLink": ""
          }
        }
      }
    },
    "ApiManagementHeadUser": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "uid": "5931a75ae4bbd512a88c680b"
      },
      "responses": {
        "200": {
          "headers": {
            "etag": "AAAAAAAAAAa="
          }
        }
      }
    },
    "ApiManagementGetUser": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "uid": "5931a75ae4bbd512a88c680b"
      },
      "responses": {
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/5931a75ae4bbd512a88c680b",
            "type": "Microsoft.ApiManagement/service/users",
            "name": "5931a75ae4bbd512a88c680b",
            "properties": {
              "firstName": "foo",
              "lastName": "bar",
              "email": "foobar@outlook.com",
              "state": "active",
              "registrationDate": "2017-06-02T17:58:50.357Z",
              "identities": [
                {
                  "provider": "Microsoft",
                  "id": "*************"
                }
              ]
            }
          }
        }
      }
    },
    "ApiManagementCreateUserBasic": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "uid": "5931a75ae4bbd512288c680b",
        "parameters": {
          "properties": {
            "firstName": "foo",
            "lastName": "bar",
            "email": "foobar@outlook.com",
            "confirmation": "signup"
          }
        }
      },
      "responses": {
        "201": {
          "body": {
            "id": "/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/5931a75ae4bbd512288c680b",
            "type": "Microsoft.ApiManagement/service/users",
            "name": "5931a75ae4bbd512288c680b",
            "properties": {
              "firstName": "foo",
              "lastName": "bar",
              "email": "foobar@outlook.com",
              "state": "active",
              "registrationDate": "2018-01-07T21:21:29.16Z",
              "groups": [],
              "identities": [
                {
                  "provider": "Basic",
                  "id": "foobar@outlook.com"
                }
              ]
            }
          }
        },
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/5931a75ae4bbd512288c680b",
            "type": "Microsoft.ApiManagement/service/users",
            "name": "5931a75ae4bbd512288c680b",
            "properties": {
              "firstName": "foo",
              "lastName": "bar",
              "email": "foobar@outlook.com",
              "state": "active",
              "registrationDate": "2018-01-07T21:21:29.16Z",
              "groups": [],
              "identities": [
                {
                  "provider": "Basic",
                  "id": "foobar@outlook.com"
                }
              ]
            }
          }
        }
      }
    },
    "ApiManagementUpdateUserBasic": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "uid": "5931a75ae4bbd512288c680b",
        "If-Match": "*",
        "parameters": {
          "properties": {
            "firstName": "foo",
            "lastName": "bar",
            "email": "foobar@outlook.com"
          }
        }
      },
      "responses": {
        "204": {}
      }
    },
    "ApiManagementDeleteUser": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "uid": "5931a75ae4bbd512288c680b",
        "If-Match": "*"
      },
      "responses": {
        "200": {},
        "204": {}
      }
    },
    "ApiManagementUsersGenerateSsoUrl": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "uid": "57127d485157a511ace86ae7"
      },
      "responses": {
        "200": {
          "body": {
            "value": "https://apimService1.portal.azure-api.net/signin-sso?token=57127d485157a511ace86ae7%26201706051624%267VY18MlwAom***********2bYr2bDQHg21OzQsNakExQ%3d%3d"
          }
        }
      }
    },
    "ApiManagementListUserGroups": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "uid": "57681833a40f7eb6c49f6acf"
      },
      "responses": {
        "200": {
          "body": {
            "value": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/57681833a40f7eb6c49f6acf/groups/5600b57e7e8880006a020002",
                "type": "Microsoft.ApiManagement/service/users/groups",
                "name": "5600b57e7e8880006a020002",
                "properties": {
                  "displayName": "Developers",
                  "description": "Developers is a built-in group. Its membership is managed by the system. Signed-in users fall into this group.",
                  "builtIn": true,
                  "type": "system"
                }
              }
            ],
            "nextLink": ""
          }
        }
      }
    },
    "ApiManagementListUserSubscriptions": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "uid": "57681833a40f7eb6c49f6acf"
      },
      "responses": {
        "200": {
          "body": {
            "value": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/57681833a40f7eb6c49f6acf/subscriptions/57681850a40f7eb6c49f6ae3",
                "type": "Microsoft.ApiManagement/service/users/subscriptions",
                "name": "57681850a40f7eb6c49f6ae3",
                "properties": {
                  "userId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/57681833a40f7eb6c49f6acf",
                  "productId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/products/5768181ea40f7eb6c49f6ac7",
                  "displayName": "57681850a40f7eb6c49f6ae5",
                  "state": "active",
                  "createdDate": "2016-06-20T16:22:39.547Z",
                  "startDate": "2016-06-20T00:00:00Z",
                  "primaryKey": "57681850a40f7eb6c49f6ae4",
                  "secondaryKey": "bbd884a96b3c41b49f34422dac74b345"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/57681833a40f7eb6c49f6acf/subscriptions/57681850a40f7eb6c49f6b2b",
                "type": "Microsoft.ApiManagement/service/users/subscriptions",
                "name": "57681850a40f7eb6c49f6b2b",
                "properties": {
                  "userId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/57681833a40f7eb6c49f6acf",
                  "productId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/products/5768181ea40f7eb6c49f6ac7",
                  "displayName": "57681850a40f7eb6c49f6b2d",
                  "state": "active",
                  "createdDate": "2016-06-20T16:22:41.103Z",
                  "startDate": "2016-06-20T00:00:00Z",
                  "primaryKey": "57681850a40f7eb6c49f6b2c",
                  "secondaryKey": "125f565d276647dc825d7f25ea40ee57"
                }
              }
            ],
            "nextLink": ""
          }
        }
      }
    },
    "ApiManagementListUsersIdentities": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "uid": "57f2af53bb17172280f44057"
      },
      "responses": {
        "200": {
          "body": {
            "value": [
              {
                "provider": "Microsoft",
                "id": "086cf9********55ab"
              }
            ],
            "count": 1,
            "nextLink": ""
          }
        }
      }
    },
    "ApiManagementUsersGetToken": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "uid": "57f2af53bb17172280f44057",
        "parameters": {
          "keyType": "primary",
          "expiry": "2017-05-13T10:39:35Z"
        }
      },
      "responses": {
        "200": {
          "body": {
            "value": "57f2af53bb17172280f44057&201705131039&***************************/tJVExvjA=="
          }
        }
      }
    }
  },
  "parameters": {
    "UserIdParameter": {
      "name": "uid",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "User identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "pattern": "(^[\\w]+$)|(^[\\w][\\w\\-]+[\\w]$)",
      "x-ms-parameter-location": "method"
    }
  },
  "x-internal-service-name": "API Management",
  "x-internal-toc-name": "User Identities",
  "x-internal-split-type": "Operation",
  "x-internal-operation-name": "List"
}
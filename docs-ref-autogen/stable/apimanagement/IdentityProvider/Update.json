{
  "swagger": "2.0",
  "info": {
    "title": "ApiManagementClient",
    "description": "Use these REST APIs for performing operations on Identity Provider entity associated with your Azure API Management deployment. Setting up an external Identity Provider for authentication can help you manage the developer portal logins using the OAuth2 flow.",
    "version": "2018-01-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}": {
      "patch": {
        "tags": [
          "IdentityProviders"
        ],
        "operationId": "IdentityProvider_Update",
        "description": "Updates an existing IdentityProvider configuration.",
        "x-ms-examples": {
          "ApiManagementUpdateIdentityProvider": {
            "$ref": "#/definitions/ApiManagementUpdateIdentityProvider"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/IdentityProviderNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentityProviderUpdateParameters"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The existing identity provider configuration was successfully updated."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-internal-toc-name": "Update"
      }
    }
  },
  "definitions": {
    "IdentityProviderContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IdentityProviderContractProperties",
          "description": "Identity Provider contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./apimanagement.json#/definitions/Resource"
        }
      ],
      "description": "Identity Provider details."
    },
    "IdentityProviderContractProperties": {
      "properties": {
        "clientId": {
          "type": "string",
          "description": "Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.",
          "minLength": 1
        },
        "clientSecret": {
          "type": "string",
          "description": "Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft.",
          "minLength": 1
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/IdentityProviderBaseParameters"
        }
      ],
      "required": [
        "clientId",
        "clientSecret"
      ],
      "description": "The external Identity Providers like Facebook, Google, Microsoft, Twitter or Azure Active Directory which can be used to enable access to the API Management service developer portal for all users."
    },
    "IdentityProviderList": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityProviderContract"
          },
          "description": "Identity Provider configuration values."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "List of all the Identity Providers configured on the service instance."
    },
    "IdentityProviderUpdateParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IdentityProviderUpdateProperties",
          "description": "Identity Provider update properties."
        }
      },
      "description": "Parameters supplied to update Identity Provider"
    },
    "IdentityProviderUpdateProperties": {
      "properties": {
        "clientId": {
          "type": "string",
          "description": "Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.",
          "minLength": 1
        },
        "clientSecret": {
          "type": "string",
          "description": "Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft.",
          "minLength": 1
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/IdentityProviderBaseParameters"
        }
      ],
      "description": "Parameters supplied to the Update Identity Provider operation."
    },
    "IdentityProviderBaseParameters": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "facebook",
            "google",
            "microsoft",
            "twitter",
            "aad",
            "aadB2C"
          ],
          "x-ms-enum": {
            "name": "IdentityProviderType",
            "modelAsString": true,
            "values": [
              {
                "value": "facebook",
                "description": "Facebook as Identity provider."
              },
              {
                "value": "google",
                "description": "Google as Identity provider."
              },
              {
                "value": "microsoft",
                "description": "Microsoft Live as Identity provider."
              },
              {
                "value": "twitter",
                "description": "Twitter as Identity provider."
              },
              {
                "value": "aad",
                "description": "Azure Active Directory as Identity provider."
              },
              {
                "value": "aadB2C",
                "description": "Azure Active Directory B2C as Identity provider."
              }
            ]
          },
          "description": "Identity Provider Type identifier."
        },
        "allowedTenants": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 32,
          "description": "List of Allowed Tenants when configuring Azure Active Directory login."
        },
        "signupPolicyName": {
          "type": "string",
          "description": "Signup Policy Name. Only applies to AAD B2C Identity Provider.",
          "minLength": 1
        },
        "signinPolicyName": {
          "type": "string",
          "description": "Signin Policy Name. Only applies to AAD B2C Identity Provider.",
          "minLength": 1
        },
        "profileEditingPolicyName": {
          "type": "string",
          "description": "Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.",
          "minLength": 1
        },
        "passwordResetPolicyName": {
          "type": "string",
          "description": "Password Reset Policy Name. Only applies to AAD B2C Identity Provider.",
          "minLength": 1
        }
      },
      "description": "Identity Provider Base Parameter Properties."
    },
    "ApiManagementListIdentityProviders": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid"
      },
      "responses": {
        "200": {
          "body": {
            "value": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/identityProviders/Google",
                "type": "Microsoft.ApiManagement/service/identityProviders",
                "name": "Google",
                "properties": {
                  "clientId": "googleId",
                  "clientSecret": "googlesecret",
                  "type": "google"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/identityProviders/Aad",
                "type": "Microsoft.ApiManagement/service/identityProviders",
                "name": "Aad",
                "properties": {
                  "clientId": "aadapplicationid",
                  "clientSecret": "aadapplicationkey",
                  "type": "aad",
                  "allowedTenants": [
                    "samiraad.onmicrosoft.com"
                  ]
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/identityProviders/AadB2C",
                "type": "Microsoft.ApiManagement/service/identityProviders",
                "name": "AadB2C",
                "properties": {
                  "clientId": "aadb2clientId",
                  "clientSecret": "aadb2cClientKey",
                  "type": "aadB2C",
                  "allowedTenants": [
                    "samirtestbc.onmicrosoft.com"
                  ],
                  "signupPolicyName": "B2C_1_Signup_Default",
                  "signinPolicyName": "B2C_1_Signin_Default"
                }
              }
            ],
            "nextLink": ""
          }
        }
      }
    },
    "ApiManagementHeadIdentityProvider": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "identityProviderName": "aadB2C"
      },
      "responses": {
        "200": {
          "headers": {
            "etag": "AAAAAAAAAAa="
          }
        }
      }
    },
    "ApiManagementGetIdentityProvider": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "identityProviderName": "aadB2C"
      },
      "responses": {
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/identityProviders/aadB2C",
            "type": "Microsoft.ApiManagement/service/identityProviders",
            "name": "aadB2C",
            "properties": {
              "clientId": "315c8e2b-29fc-413d-822f-4efab7f43c42",
              "clientSecret": "SnE4laLjmxc2QKWTPoRxOiwvSnnwMCFN+jLYDpBCUXw=",
              "type": "aadB2C",
              "allowedTenants": [
                "samirtestbc.onmicrosoft.com"
              ],
              "signupPolicyName": "B2C_1_Signup_Default",
              "signinPolicyName": "B2C_1_signup-policy"
            }
          }
        }
      }
    },
    "ApiManagementCreateIdentityProvider": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "identityProviderName": "facebook",
        "parameters": {
          "properties": {
            "clientId": "facebookid",
            "clientSecret": "facebookapplicationsecret"
          }
        }
      },
      "responses": {
        "201": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/identityProviders/Facebook",
            "type": "Microsoft.ApiManagement/service/identityProviders",
            "name": "Facebook",
            "properties": {
              "clientId": "facebookid",
              "clientSecret": "facebookapplicationsecret",
              "type": "facebook"
            }
          }
        },
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/identityProviders/Facebook",
            "type": "Microsoft.ApiManagement/service/identityProviders",
            "name": "Facebook",
            "properties": {
              "clientId": "facebookid",
              "clientSecret": "facebookapplicationsecret",
              "type": "facebook"
            }
          }
        }
      }
    },
    "ApiManagementUpdateIdentityProvider": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "identityProviderName": "facebook",
        "If-Match": "*",
        "parameters": {
          "properties": {
            "clientId": "updatedfacebookid",
            "clientSecret": "updatedfacebooksecret"
          }
        }
      },
      "responses": {
        "204": {}
      }
    },
    "ApiManagementDeleteIdentityProvider": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "identityProviderName": "aad",
        "If-Match": "*"
      },
      "responses": {
        "200": {},
        "204": {}
      }
    }
  },
  "parameters": {
    "IdentityProviderNameParameter": {
      "name": "identityProviderName",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "facebook",
        "google",
        "microsoft",
        "twitter",
        "aad",
        "aadB2C"
      ],
      "x-ms-enum": {
        "name": "IdentityProviderType",
        "modelAsString": true,
        "values": [
          {
            "value": "facebook",
            "description": "Facebook as Identity provider."
          },
          {
            "value": "google",
            "description": "Google as Identity provider."
          },
          {
            "value": "microsoft",
            "description": "Microsoft Live as Identity provider."
          },
          {
            "value": "twitter",
            "description": "Twitter as Identity provider."
          },
          {
            "value": "aad",
            "description": "Azure Active Directory as Identity provider."
          },
          {
            "value": "aadB2C",
            "description": "Azure Active Directory B2C as Identity provider."
          }
        ]
      },
      "description": "Identity Provider Type identifier.",
      "x-ms-parameter-location": "method"
    }
  },
  "x-internal-service-name": "API Management",
  "x-internal-toc-name": "Identity Provider",
  "x-internal-split-type": "Operation",
  "x-internal-operation-name": "Update"
}
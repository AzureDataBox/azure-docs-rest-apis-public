{
  "swagger": "2.0",
  "info": {
    "title": "ApiManagementClient",
    "description": "Use these REST APIs for performing operations on API entity and their Operations associated with your Azure API Management deployment.",
    "version": "2018-01-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/schemas/{schemaId}": {
      "put": {
        "tags": [
          "ApiSchema"
        ],
        "operationId": "ApiSchema_CreateOrUpdate",
        "description": "Creates or updates schema configuration for the API.",
        "x-ms-examples": {
          "ApiManagementCreateApiSchema": {
            "$ref": "#/definitions/ApiManagementCreateApiSchema"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/SchemaIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SchemaContract"
            },
            "required": true,
            "description": "The schema contents to apply."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Api schema configuration was successfully created.",
            "schema": {
              "$ref": "#/definitions/SchemaContract"
            }
          },
          "200": {
            "description": "Api schema configuration of the tenant was successfully updated.",
            "schema": {
              "$ref": "#/definitions/SchemaContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-internal-toc-name": "Create Or Update"
      }
    }
  },
  "x-ms-paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}?export=true": {
      "get": {
        "tags": [
          "Apis"
        ],
        "operationId": "ApiExport_Get",
        "description": "Gets the details of the API specified by its identifier in the format specified to the Storage Blob with SAS Key valid for 5 minutes.",
        "x-ms-examples": {
          "ApiManagementGetApiExportInOpenApi2dot0": {
            "$ref": "#/definitions/ApiManagementGetApiExportInOpenApi2dot0"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "swagger-link",
              "wadl-link",
              "wsdl-link"
            ],
            "x-ms-enum": {
              "name": "ExportFormat",
              "modelAsString": true,
              "values": [
                {
                  "value": "swagger-link",
                  "description": "Export the Api Definition in OpenApi Specification 2.0 format to the Storage Blob.",
                  "name": "Swagger"
                },
                {
                  "value": "wsdl-link",
                  "description": "Export the Api Definition in WSDL Schema to Storage Blob. This is only supported for APIs of Type `soap`",
                  "name": "Wsdl"
                },
                {
                  "value": "wadl-link",
                  "description": "Export the Api Definition in WADL Schema to Storage Blob.",
                  "name": "Wadl"
                }
              ]
            },
            "description": "Format in which to export the Api Details to the Storage Blob with Sas Key valid for 5 minutes."
          },
          {
            "name": "export",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "true"
            ],
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ExportApi"
            },
            "description": "Query parameter required to export the API details."
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response contains a stream with a full set of API metadata and includes API entity with an embedded array of operation entities.",
            "schema": {
              "$ref": "#/definitions/ApiExportResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApiExportResult": {
      "properties": {
        "link": {
          "type": "string",
          "description": "Link to the Storage Blob containing the result of the export operation. The Blob Uri is only valid for 5 minutes."
        }
      },
      "description": "API Export result Blob Uri."
    },
    "ApiCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiContract"
          },
          "description": "Page values.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "Paged Api list representation."
    },
    "ApiContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApiContractProperties",
          "description": "Api entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./apimanagement.json#/definitions/Resource"
        }
      ],
      "description": "API details."
    },
    "ApiCreateOrUpdateParameter": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApiCreateOrUpdateProperties",
          "description": "Api entity create of update properties."
        }
      },
      "description": "API Create or Update Parameters."
    },
    "ApiCreateOrUpdateProperties": {
      "properties": {
        "contentValue": {
          "type": "string",
          "description": "Content value when Importing an API."
        },
        "contentFormat": {
          "type": "string",
          "description": "Format of the Content in which the API is getting imported.",
          "enum": [
            "wadl-xml",
            "wadl-link-json",
            "swagger-json",
            "swagger-link-json",
            "wsdl",
            "wsdl-link"
          ],
          "x-ms-enum": {
            "name": "ContentFormat",
            "modelAsString": true,
            "values": [
              {
                "value": "wadl-xml",
                "description": "The contents are inline and Content type is a WADL document."
              },
              {
                "value": "wadl-link-json",
                "description": "The WADL document is hosted on a publicly accessible internet address."
              },
              {
                "value": "swagger-json",
                "description": "The contents are inline and Content Type is a OpenApi 2.0 Document."
              },
              {
                "value": "swagger-link-json",
                "description": "The Open Api 2.0 document is hosted on a publicly accessible internet address."
              },
              {
                "value": "wsdl",
                "description": "The contents are inline and the document is a WSDL/Soap document."
              },
              {
                "value": "wsdl-link",
                "description": "The WSDL document is hosted on a publicly accessible internet address."
              }
            ]
          }
        },
        "wsdlSelector": {
          "type": "object",
          "description": "Criteria to limit import of WSDL to a subset of the document.",
          "properties": {
            "wsdlServiceName": {
              "type": "string",
              "description": "Name of service to import from WSDL"
            },
            "wsdlEndpointName": {
              "type": "string",
              "description": "Name of endpoint(port) to import from WSDL"
            }
          }
        },
        "apiType": {
          "type": "string",
          "description": "Type of Api to create. \n * `http` creates a SOAP to REST API \n * `soap` creates a SOAP pass-through API .",
          "enum": [
            "http",
            "soap"
          ],
          "x-ms-client-name": "SoapApiType",
          "x-ms-enum": {
            "name": "SoapApiType",
            "modelAsString": true,
            "values": [
              {
                "value": "http",
                "description": "Imports a SOAP API having a RESTful front end.",
                "name": "SoapToRest"
              },
              {
                "value": "soap",
                "description": "Imports the Soap API having a SOAP front end.",
                "name": "SoapPassThrough"
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApiContractProperties"
        }
      ],
      "description": "Api Create or Update Properties."
    },
    "ApiContractProperties": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "API name.",
          "minLength": 1,
          "maxLength": 300
        },
        "serviceUrl": {
          "type": "string",
          "description": "Absolute URL of the backend service implementing this API.",
          "minLength": 0,
          "maxLength": 2000
        },
        "path": {
          "type": "string",
          "description": "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.",
          "minLength": 0,
          "maxLength": 400
        },
        "protocols": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "http",
              "https"
            ],
            "x-ms-enum": {
              "name": "Protocol",
              "modelAsString": false
            }
          },
          "description": "Describes on which protocols the operations in this API can be invoked."
        },
        "apiVersionSet": {
          "$ref": "#/definitions/ApiVersionSetContractDetails"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApiEntityBaseContract"
        }
      ],
      "required": [
        "path"
      ],
      "description": "Api Entity Properties"
    },
    "ApiUpdateContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApiContractUpdateProperties",
          "description": "Properties of the API entity that can be updated."
        }
      },
      "description": "API update contract details."
    },
    "ApiContractUpdateProperties": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "API name.",
          "minLength": 1,
          "maxLength": 300
        },
        "serviceUrl": {
          "type": "string",
          "description": "Absolute URL of the backend service implementing this API.",
          "minLength": 1,
          "maxLength": 2000
        },
        "path": {
          "type": "string",
          "description": "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.",
          "minLength": 0,
          "maxLength": 400
        },
        "protocols": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "http",
              "https"
            ],
            "x-ms-enum": {
              "name": "Protocol",
              "modelAsString": false
            }
          },
          "description": "Describes on which protocols the operations in this API can be invoked."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApiEntityBaseContract"
        }
      ],
      "description": "API update contract properties."
    },
    "ApiEntityBaseContract": {
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the API. May include HTML formatting tags."
        },
        "authenticationSettings": {
          "$ref": "#/definitions/AuthenticationSettingsContract",
          "description": "Collection of authentication settings included into this API."
        },
        "subscriptionKeyParameterNames": {
          "$ref": "#/definitions/SubscriptionKeyParameterNamesContract",
          "description": "Protocols over which API is made available."
        },
        "type": {
          "type": "string",
          "description": "Type of API.",
          "enum": [
            "http",
            "soap"
          ],
          "x-ms-client-name": "ApiType",
          "x-ms-enum": {
            "name": "ApiType",
            "modelAsString": true
          }
        },
        "apiRevision": {
          "type": "string",
          "description": "Describes the Revision of the Api. If no value is provided, default revision 1 is created",
          "minLength": 1,
          "maxLength": 100
        },
        "apiVersion": {
          "type": "string",
          "description": "Indicates the Version identifier of the API if the API is versioned",
          "maxLength": 100
        },
        "isCurrent": {
          "type": "boolean",
          "description": "Indicates if API revision is current api revision.",
          "readOnly": true
        },
        "isOnline": {
          "type": "boolean",
          "description": "Indicates if API revision is accessible via the gateway.",
          "readOnly": true
        },
        "apiVersionSetId": {
          "type": "string",
          "description": "A resource identifier for the related ApiVersionSet."
        }
      },
      "description": "API base contract details."
    },
    "ApiRevisionCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiRevisionContract"
          },
          "description": "Page values.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "Paged Api Revision list representation."
    },
    "ApiRevisionContract": {
      "properties": {
        "apiId": {
          "type": "string",
          "readOnly": true,
          "description": "Identifier of the API Revision."
        },
        "apiRevision": {
          "type": "string",
          "minLength": 1,
          "maxLength": 100,
          "readOnly": true,
          "description": "Revision number of API."
        },
        "createdDateTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The time the API Revision was created. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard."
        },
        "updatedDateTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The time the API Revision were updated. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard."
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "maxLength": 256,
          "description": "Description of the API Revision."
        },
        "privateUrl": {
          "type": "string",
          "readOnly": true,
          "description": "Gateway URL for accessing the non-current API Revision."
        },
        "isOnline": {
          "type": "boolean",
          "readOnly": true,
          "description": "Indicates if API revision is the current api revision."
        },
        "isCurrent": {
          "type": "boolean",
          "readOnly": true,
          "description": "Indicates if API revision is accessible via the gateway."
        }
      },
      "description": "Summary of revision metadata."
    },
    "ApiRevisionInfoContract": {
      "description": "Object used to create an API Revision or Version based on an existing API Revision",
      "properties": {
        "sourceApiId": {
          "type": "string",
          "description": "Resource identifier of API to be used to create the revision from."
        },
        "apiVersionName": {
          "type": "string",
          "maxLength": 100,
          "description": "Version identifier for the new API Version."
        },
        "apiRevisionDescription": {
          "type": "string",
          "maxLength": 256,
          "description": "Description of new API Revision."
        },
        "apiVersionSet": {
          "description": "Version set details",
          "$ref": "#/definitions/ApiVersionSetContractDetails"
        }
      }
    },
    "ApiVersionSetContractDetails": {
      "description": "An API Version Set contains the common configuration for a set of API Versions relating ",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier for existing API Version Set. Omit this value to create a new Version Set."
        },
        "description": {
          "type": "string",
          "description": "Description of API Version Set."
        },
        "versioningScheme": {
          "type": "string",
          "description": "An value that determines where the API Version identifer will be located in a HTTP request.",
          "enum": [
            "Segment",
            "Query",
            "Header"
          ]
        },
        "versionQueryName": {
          "type": "string",
          "description": "Name of query parameter that indicates the API Version if versioningScheme is set to `query`."
        },
        "versionHeaderName": {
          "type": "string",
          "description": "Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`."
        }
      }
    },
    "ApiReleaseCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiReleaseContract"
          },
          "description": "Page values.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "Paged Api Revision list representation."
    },
    "ApiReleaseContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApiReleaseContractProperties",
          "description": "Properties of the Api Release Contract."
        }
      },
      "allOf": [
        {
          "$ref": "./apimanagement.json#/definitions/Resource"
        }
      ],
      "description": "Api Release details."
    },
    "ApiReleaseContractProperties": {
      "description": "API Release details",
      "properties": {
        "apiId": {
          "type": "string",
          "description": "Identifier of the API the release belongs to."
        },
        "createdDateTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The time the API was released. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard."
        },
        "updatedDateTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The time the API release was updated."
        },
        "notes": {
          "type": "string",
          "description": "Release Notes"
        }
      }
    },
    "AuthenticationSettingsContract": {
      "properties": {
        "oAuth2": {
          "$ref": "#/definitions/OAuth2AuthenticationSettingsContract",
          "description": "OAuth2 Authentication settings"
        }
      },
      "description": "API Authentication Settings."
    },
    "OAuth2AuthenticationSettingsContract": {
      "properties": {
        "authorizationServerId": {
          "type": "string",
          "description": "OAuth authorization server identifier."
        },
        "scope": {
          "type": "string",
          "description": "operations scope."
        }
      },
      "description": "API OAuth2 Authentication settings details."
    },
    "OperationCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationContract"
          },
          "description": "Page values.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "Paged Operation list representation."
    },
    "OperationContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OperationContractProperties",
          "description": "Properties of the Operation Contract."
        }
      },
      "allOf": [
        {
          "$ref": "./apimanagement.json#/definitions/Resource"
        }
      ],
      "description": "Api Operation details."
    },
    "OperationContractProperties": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Operation Name.",
          "minLength": 1,
          "maxLength": 300
        },
        "method": {
          "type": "string",
          "description": "A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.",
          "externalDocs": {
            "description": "As defined by RFC.",
            "url": "http://www.rfc-editor.org/rfc/rfc7230.txt"
          }
        },
        "urlTemplate": {
          "type": "string",
          "description": "Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}",
          "minLength": 1,
          "maxLength": 1000
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OperationEntityBaseContract"
        }
      ],
      "required": [
        "displayName",
        "method",
        "urlTemplate"
      ],
      "description": "Operation Contract Properties"
    },
    "OperationUpdateContractProperties": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Operation Name.",
          "minLength": 1,
          "maxLength": 300
        },
        "method": {
          "type": "string",
          "description": "A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.",
          "externalDocs": {
            "description": "As defined by RFC.",
            "url": "http://www.rfc-editor.org/rfc/rfc7230.txt"
          }
        },
        "urlTemplate": {
          "type": "string",
          "description": "Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}",
          "minLength": 1,
          "maxLength": 1000
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OperationEntityBaseContract"
        }
      ],
      "description": "Operation Update Contract Properties."
    },
    "OperationEntityBaseContract": {
      "properties": {
        "templateParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterContract"
          },
          "description": "Collection of URL template parameters."
        },
        "description": {
          "type": "string",
          "description": "Description of the operation. May include HTML formatting tags.",
          "maxLength": 1000
        },
        "request": {
          "$ref": "#/definitions/RequestContract",
          "description": "An entity containing request details."
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseContract"
          },
          "description": "Array of Operation responses."
        },
        "policies": {
          "type": "string",
          "description": "Operation Policies"
        }
      },
      "description": "Api Operation Entity Base Contract details."
    },
    "OperationUpdateContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OperationUpdateContractProperties",
          "description": "Properties of the API Operation entity that can be updated."
        }
      },
      "description": "Api Operation Update Contract details."
    },
    "ParameterContract": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Parameter name."
        },
        "description": {
          "type": "string",
          "description": "Parameter description."
        },
        "type": {
          "type": "string",
          "description": "Parameter type."
        },
        "defaultValue": {
          "type": "string",
          "description": "Default parameter value."
        },
        "required": {
          "type": "boolean",
          "description": "whether parameter is required or not."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Parameter values."
        }
      },
      "required": [
        "name",
        "type"
      ],
      "description": "Operation parameters details."
    },
    "RepresentationContract": {
      "properties": {
        "contentType": {
          "type": "string",
          "description": "Specifies a registered or custom content type for this representation, e.g. application/xml."
        },
        "sample": {
          "type": "string",
          "description": "An example of the representation."
        },
        "schemaId": {
          "type": "string",
          "description": "Schema identifier. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'."
        },
        "typeName": {
          "type": "string",
          "description": "Type name defined by the schema. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'."
        },
        "formParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterContract"
          },
          "description": "Collection of form parameters. Required if 'contentType' value is either 'application/x-www-form-urlencoded' or 'multipart/form-data'.."
        }
      },
      "required": [
        "contentType"
      ],
      "description": "Operation request/response representation details."
    },
    "RequestContract": {
      "properties": {
        "description": {
          "type": "string",
          "description": "Operation request description."
        },
        "queryParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterContract"
          },
          "description": "Collection of operation request query parameters."
        },
        "headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterContract"
          },
          "description": "Collection of operation request headers."
        },
        "representations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RepresentationContract"
          },
          "description": "Collection of operation request representations."
        }
      },
      "description": "Operation request details."
    },
    "ResponseContract": {
      "properties": {
        "statusCode": {
          "type": "integer",
          "format": "int32",
          "description": "Operation response HTTP status code."
        },
        "description": {
          "type": "string",
          "description": "Operation response description."
        },
        "representations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RepresentationContract"
          },
          "description": "Collection of operation response representations."
        },
        "headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterContract"
          },
          "description": "Collection of operation response headers."
        }
      },
      "required": [
        "statusCode"
      ],
      "description": "Operation response details."
    },
    "SubscriptionKeyParameterNamesContract": {
      "properties": {
        "header": {
          "type": "string",
          "description": "Subscription key header name."
        },
        "query": {
          "type": "string",
          "description": "Subscription key query string parameter name."
        }
      },
      "description": "Subscription key parameter names details.",
      "example": {
        "subscriptionKeyParameterNames": {
          "query": "customQueryParameterName",
          "header": "customHeaderParameterName"
        }
      }
    },
    "SchemaCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchemaContract"
          },
          "description": "Api Schema Contract value.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "The response of the list schema operation."
    },
    "SchemaContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SchemaContractProperties",
          "description": "Properties of the Schema."
        }
      },
      "allOf": [
        {
          "$ref": "./apimanagement.json#/definitions/Resource"
        }
      ],
      "description": "Schema Contract details."
    },
    "SchemaContractProperties": {
      "properties": {
        "contentType": {
          "type": "string",
          "description": "Must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media type of the schema document (e.g. application/json, application/xml)."
        },
        "document": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SchemaDocumentProperties",
          "description": "Properties of the Schema Document."
        }
      },
      "required": [
        "contentType"
      ],
      "description": "Schema contract Properties."
    },
    "SchemaDocumentProperties": {
      "properties": {
        "value": {
          "type": "string",
          "description": "Json escaped string defining the document representing the Schema."
        }
      },
      "description": "Schema Document Properties."
    },
    "IssueCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IssueContract"
          },
          "description": "Issue values.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "Paged Issue list representation."
    },
    "IssueContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IssueContractProperties",
          "description": "Properties of the Issue."
        }
      },
      "allOf": [
        {
          "$ref": "./apimanagement.json#/definitions/Resource"
        }
      ],
      "description": "Issue Contract details."
    },
    "IssueContractProperties": {
      "properties": {
        "title": {
          "type": "string",
          "description": "The issue title."
        },
        "description": {
          "type": "string",
          "description": "Text describing the issue."
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time when the issue was created."
        },
        "state": {
          "type": "string",
          "description": "Status of the issue.",
          "enum": [
            "proposed",
            "open",
            "removed",
            "resolved",
            "closed"
          ],
          "x-ms-enum": {
            "name": "State",
            "modelAsString": true,
            "values": [
              {
                "value": "proposed",
                "description": "The issue is proposed."
              },
              {
                "value": "open",
                "description": "The issue is opened."
              },
              {
                "value": "removed",
                "description": "The issue was removed."
              },
              {
                "value": "resolved",
                "description": "The issue is now resolved."
              },
              {
                "value": "closed",
                "description": "The issue was closed."
              }
            ]
          }
        },
        "userId": {
          "type": "string",
          "description": "A resource identifier for the user created the issue."
        },
        "apiId": {
          "type": "string",
          "description": "A resource identifier for the API the issue was created for."
        }
      },
      "required": [
        "title",
        "description",
        "userId"
      ],
      "description": "Issue contract Properties."
    },
    "IssueCommentCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IssueCommentContract"
          },
          "description": "Issue Comment values.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "Paged Issue Comment list representation."
    },
    "IssueCommentContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IssueCommentContractProperties",
          "description": "Properties of the Issue Comment."
        }
      },
      "allOf": [
        {
          "$ref": "./apimanagement.json#/definitions/Resource"
        }
      ],
      "description": "Issue Comment Contract details."
    },
    "IssueCommentContractProperties": {
      "properties": {
        "text": {
          "type": "string",
          "description": "Comment text."
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time when the comment was created."
        },
        "userId": {
          "type": "string",
          "description": "A resource identifier for the user who left the comment."
        }
      },
      "required": [
        "text",
        "userId"
      ],
      "description": "Issue Comment contract Properties."
    },
    "IssueAttachmentCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IssueAttachmentContract"
          },
          "description": "Issue Attachment values.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "Paged Issue Attachment list representation."
    },
    "IssueAttachmentContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IssueAttachmentContractProperties",
          "description": "Properties of the Issue Attachment."
        }
      },
      "allOf": [
        {
          "$ref": "./apimanagement.json#/definitions/Resource"
        }
      ],
      "description": "Issue Attachment Contract details."
    },
    "IssueAttachmentContractProperties": {
      "properties": {
        "title": {
          "type": "string",
          "description": "Filename by which the binary data will be saved."
        },
        "contentFormat": {
          "type": "string",
          "description": "Either 'link' if content is provided via an HTTP link or the MIME type of the Base64-encoded binary data provided in the 'content' property."
        },
        "content": {
          "type": "string",
          "description": "An HTTP link or Base64-encoded binary data."
        }
      },
      "required": [
        "title",
        "contentFormat",
        "content"
      ],
      "description": "Issue Attachment contract Properties."
    },
    "ApiManagementListApis": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid"
      },
      "responses": {
        "200": {
          "body": {
            "value": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/a1",
                "type": "Microsoft.ApiManagement/service/apis",
                "name": "a1",
                "properties": {
                  "displayName": "api1",
                  "apiRevision": "1",
                  "serviceUrl": "http://echoapi.cloudapp.net/api",
                  "path": "api1",
                  "protocols": [
                    "https"
                  ],
                  "isCurrent": true,
                  "apiVersionSetId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/api-version-sets/c48f96c9-1385-4e2d-b410-5ab591ce0fc4"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/5a73933b8f27f7cc82a2d533",
                "type": "Microsoft.ApiManagement/service/apis",
                "name": "5a73933b8f27f7cc82a2d533",
                "properties": {
                  "displayName": "api1",
                  "apiRevision": "1",
                  "serviceUrl": "http://echoapi.cloudapp.net/api",
                  "path": "api1",
                  "protocols": [
                    "https"
                  ],
                  "isCurrent": true,
                  "apiVersion": "v1",
                  "apiVersionSetId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/api-version-sets/c48f96c9-1385-4e2d-b410-5ab591ce0fc4"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/echo-api",
                "type": "Microsoft.ApiManagement/service/apis",
                "name": "echo-api",
                "properties": {
                  "displayName": "Echo API",
                  "apiRevision": "1",
                  "serviceUrl": "http://echoapi.cloudapp.net/api",
                  "path": "echo",
                  "protocols": [
                    "https"
                  ],
                  "isCurrent": true
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/5a7390baa5816a110435aee0",
                "type": "Microsoft.ApiManagement/service/apis",
                "name": "5a7390baa5816a110435aee0",
                "properties": {
                  "displayName": "Swagger Petstore Extensive",
                  "apiRevision": "1",
                  "description": "A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification",
                  "serviceUrl": "http://petstore.swagger.wordnik.com/api",
                  "path": "vvv",
                  "protocols": [
                    "https"
                  ],
                  "isCurrent": true
                }
              }
            ],
            "nextLink": ""
          }
        }
      }
    },
    "ApiManagementHeadApi": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "57d1f7558aa04f15146d9d8a"
      },
      "responses": {
        "200": {
          "headers": {
            "etag": "AAAAAAAAAAa="
          }
        }
      }
    },
    "ApiManagementGetApiContract": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "57d1f7558aa04f15146d9d8a"
      },
      "responses": {
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d1f7558aa04f15146d9d8a",
            "type": "Microsoft.ApiManagement/service/apis",
            "name": "57d1f7558aa04f15146d9d8a",
            "properties": {
              "displayName": "Service",
              "apiRevision": "1",
              "serviceUrl": "https://api.plexonline.com/DataSource/Service.asmx",
              "path": "schulte",
              "protocols": [
                "https"
              ],
              "subscriptionKeyParameterNames": {
                "header": "Ocp-Apim-Subscription-Key",
                "query": "subscription-key"
              },
              "type": "soap",
              "isCurrent": true,
              "isOnline": true
            }
          }
        }
      }
    },
    "ApiManagementCreateApiUsingSwaggerImport": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "petstore",
        "parameters": {
          "properties": {
            "contentFormat": "swagger-link-json",
            "contentValue": "http://petstore.swagger.io/v2/swagger.json",
            "path": "petstore"
          }
        }
      },
      "responses": {
        "201": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/petstoreapi",
            "type": "Microsoft.ApiManagement/service/apis",
            "name": "petstoreapi",
            "properties": {
              "displayName": "Swagger Petstore",
              "apiRevision": "1",
              "description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
              "serviceUrl": "http://petstore.swagger.io/v2",
              "path": "petstore",
              "protocols": [
                "http"
              ],
              "subscriptionKeyParameterNames": {
                "header": "Ocp-Apim-Subscription-Key",
                "query": "subscription-key"
              },
              "isCurrent": true
            }
          }
        },
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/petstoreapi",
            "type": "Microsoft.ApiManagement/service/apis",
            "name": "petstoreapi",
            "properties": {
              "displayName": "Swagger Petstore",
              "apiRevision": "1",
              "description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
              "serviceUrl": "http://petstore.swagger.io/v2",
              "path": "petstore",
              "protocols": [
                "http"
              ],
              "subscriptionKeyParameterNames": {
                "header": "Ocp-Apim-Subscription-Key",
                "query": "subscription-key"
              },
              "isCurrent": true
            }
          }
        }
      }
    },
    "ApiManagementCreateApiUsingWadlImport": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "petstore",
        "parameters": {
          "properties": {
            "contentFormat": "wadl-link-json",
            "contentValue": "https://developer.cisco.com/media/wae-release-6-2-api-reference/wae-collector-rest-api/application.wadl",
            "path": "collector"
          }
        }
      },
      "responses": {
        "201": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/collectorwadl",
            "type": "Microsoft.ApiManagement/service/apis",
            "name": "collectorwadl",
            "properties": {
              "displayName": "http://localhost:8080/collector-northbound",
              "apiRevision": "1",
              "description": "",
              "serviceUrl": "http://localhost:8080/collector-northbound",
              "path": "collector",
              "protocols": [
                "https"
              ],
              "subscriptionKeyParameterNames": {
                "header": "Ocp-Apim-Subscription-Key",
                "query": "subscription-key"
              },
              "isCurrent": true
            }
          }
        },
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/collectorwadl",
            "type": "Microsoft.ApiManagement/service/apis",
            "name": "collectorwadl",
            "properties": {
              "displayName": "http://localhost:8080/collector-northbound",
              "apiRevision": "1",
              "description": "",
              "serviceUrl": "http://localhost:8080/collector-northbound",
              "path": "collector",
              "protocols": [
                "https"
              ],
              "subscriptionKeyParameterNames": {
                "header": "Ocp-Apim-Subscription-Key",
                "query": "subscription-key"
              },
              "isCurrent": true
            }
          }
        }
      }
    },
    "ApiManagementCreateSoapToRestApiUsingWsdlImport": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "soapApi",
        "parameters": {
          "properties": {
            "contentFormat": "wsdl-link",
            "contentValue": "http://www.webservicex.net/CurrencyConvertor.asmx?WSDL",
            "path": "currency",
            "wsdlSelector": {
              "wsdlServiceName": "CurrencyConvertor",
              "wsdlEndpointName": "CurrencyConvertorSoap"
            }
          }
        }
      },
      "responses": {
        "201": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/soapApi",
            "type": "Microsoft.ApiManagement/service/apis",
            "name": "soapApi",
            "properties": {
              "displayName": "CurrencyConvertor",
              "apiRevision": "1",
              "serviceUrl": "http://www.webservicex.net",
              "path": "currency",
              "protocols": [
                "https"
              ],
              "subscriptionKeyParameterNames": {
                "header": "Ocp-Apim-Subscription-Key",
                "query": "subscription-key"
              },
              "isCurrent": true
            }
          }
        },
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/soapApi",
            "type": "Microsoft.ApiManagement/service/apis",
            "name": "soapApi",
            "properties": {
              "displayName": "CurrencyConvertor",
              "apiRevision": "1",
              "serviceUrl": "http://www.webservicex.net",
              "path": "currency",
              "protocols": [
                "https"
              ],
              "subscriptionKeyParameterNames": {
                "header": "Ocp-Apim-Subscription-Key",
                "query": "subscription-key"
              },
              "isCurrent": true
            }
          }
        }
      }
    },
    "ApiManagementCreateSoapPassThroughApiUsingWsdlImport": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "soapApi",
        "parameters": {
          "properties": {
            "contentFormat": "wsdl-link",
            "contentValue": "http://www.webservicex.net/CurrencyConvertor.asmx?WSDL",
            "path": "currency",
            "apiType": "soap",
            "wsdlSelector": {
              "wsdlServiceName": "CurrencyConvertor",
              "wsdlEndpointName": "CurrencyConvertorSoap"
            }
          }
        }
      },
      "responses": {
        "201": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/soapApi",
            "type": "Microsoft.ApiManagement/service/apis",
            "name": "soapApi",
            "properties": {
              "displayName": "CurrencyConvertor",
              "apiRevision": "1",
              "serviceUrl": "http://www.webservicex.net",
              "path": "currency",
              "protocols": [
                "https"
              ],
              "subscriptionKeyParameterNames": {
                "header": "Ocp-Apim-Subscription-Key",
                "query": "subscription-key"
              },
              "type": "soap",
              "isCurrent": true
            }
          }
        },
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/soapApi",
            "type": "Microsoft.ApiManagement/service/apis",
            "name": "soapApi",
            "properties": {
              "displayName": "CurrencyConvertor",
              "apiRevision": "1",
              "serviceUrl": "http://www.webservicex.net",
              "path": "currency",
              "protocols": [
                "https"
              ],
              "subscriptionKeyParameterNames": {
                "header": "Ocp-Apim-Subscription-Key",
                "query": "subscription-key"
              },
              "type": "soap",
              "isCurrent": true
            }
          }
        }
      }
    },
    "ApiManagementCreateApi": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "tempgroup",
        "parameters": {
          "properties": {
            "description": "apidescription5200",
            "authenticationSettings": {
              "oAuth2": {
                "authorizationServerId": "authorizationServerId2283",
                "scope": "oauth2scope2580"
              }
            },
            "subscriptionKeyParameterNames": {
              "header": "header4520",
              "query": "query3037"
            },
            "displayName": "apiname1463",
            "serviceUrl": "http://newechoapi.cloudapp.net/api",
            "path": "newapiPath",
            "protocols": [
              "https",
              "http"
            ]
          }
        }
      },
      "responses": {
        "201": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/apiid9419",
            "type": "Microsoft.ApiManagement/service/apis",
            "name": "apiid9419",
            "properties": {
              "displayName": "apiname1463",
              "apiRevision": "1",
              "description": "apidescription5200",
              "serviceUrl": "http://newechoapi.cloudapp.net/api",
              "path": "newapiPath",
              "protocols": [
                "http",
                "https"
              ],
              "authenticationSettings": {
                "oAuth2": {
                  "authorizationServerId": "authorizationServerId2283",
                  "scope": "oauth2scope2580"
                }
              },
              "subscriptionKeyParameterNames": {
                "header": "header4520",
                "query": "query3037"
              },
              "isCurrent": true,
              "isOnline": true
            }
          }
        },
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/apiid9419",
            "type": "Microsoft.ApiManagement/service/apis",
            "name": "apiid9419",
            "properties": {
              "displayName": "apiname1463",
              "apiRevision": "1",
              "description": "apidescription5200",
              "serviceUrl": "http://newechoapi.cloudapp.net/api",
              "path": "newapiPath",
              "protocols": [
                "http",
                "https"
              ],
              "authenticationSettings": {
                "oAuth2": {
                  "authorizationServerId": "authorizationServerId2283",
                  "scope": "oauth2scope2580"
                }
              },
              "subscriptionKeyParameterNames": {
                "header": "header4520",
                "query": "query3037"
              },
              "isCurrent": true,
              "isOnline": true
            }
          }
        }
      }
    },
    "ApiManagementCreateApiRevision": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "5a838fd48f33670ed070d77c;rev=4",
        "parameters": {
          "properties": {
            "displayName": "Swagger Petstore V2",
            "description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
            "serviceUrl": "http://petstore.swagger.io/v4",
            "path": "petstore2",
            "protocols": [
              "https"
            ],
            "subscriptionKeyParameterNames": {
              "header": "Ocp-Apim-Subscription-Key",
              "query": "subscription-key"
            },
            "isCurrent": false
          }
        }
      },
      "responses": {
        "201": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/5a838fd48f33670ed070d77c;rev=4",
            "type": "Microsoft.ApiManagement/service/apis",
            "name": "5a838fd48f33670ed070d77c;rev=4",
            "properties": {
              "displayName": "Swagger Petstore 2",
              "apiRevision": "4",
              "description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
              "serviceUrl": "http://petstore.swagger.io/v4",
              "path": "petstore2",
              "protocols": [
                "https"
              ],
              "subscriptionKeyParameterNames": {
                "header": "Ocp-Apim-Subscription-Key",
                "query": "subscription-key"
              }
            }
          }
        },
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/5a838fd48f33670ed070d77c;rev=4",
            "type": "Microsoft.ApiManagement/service/apis",
            "name": "5a838fd48f33670ed070d77c;rev=4",
            "properties": {
              "displayName": "Swagger Petstore 2",
              "apiRevision": "4",
              "description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
              "serviceUrl": "http://petstore.swagger.io/v4",
              "path": "petstore2",
              "protocols": [
                "https"
              ],
              "subscriptionKeyParameterNames": {
                "header": "Ocp-Apim-Subscription-Key",
                "query": "subscription-key"
              }
            }
          }
        }
      }
    },
    "ApiManagementUpdateApi": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "echo-api",
        "If-Match": "*",
        "parameters": {
          "properties": {
            "displayName": "Echo API New",
            "serviceUrl": "http://echoapi.cloudapp.net/api2",
            "path": "newecho"
          }
        }
      },
      "responses": {
        "204": {}
      }
    },
    "ApiManagementDeleteApi": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "echo-api",
        "If-Match": "*"
      },
      "responses": {
        "200": {},
        "204": {}
      }
    },
    "ApiManagementListApiRevisions": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "57d2ef278aa04f0888cba3f3"
      },
      "responses": {
        "200": {
          "body": {
            "value": [
              {
                "apiId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/a1;rev=1",
                "apiRevision": "1",
                "createdDateTime": "2018-02-01T22:21:20.467Z",
                "updatedDateTime": "2018-02-01T22:21:20.467Z",
                "isOnline": true,
                "isCurrent": true
              }
            ],
            "nextLink": ""
          }
        }
      }
    },
    "ApiManagementListApiReleases": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "a1"
      },
      "responses": {
        "200": {
          "body": {
            "value": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/a1/releases/5a7cb545298324c53224a799",
                "type": "Microsoft.ApiManagement/service/apis/releases",
                "name": "5a7cb545298324c53224a799",
                "properties": {
                  "createdDateTime": "2018-02-08T20:38:29.173Z",
                  "updatedDateTime": "2018-02-08T20:38:29.173Z",
                  "notes": "yahoo"
                }
              }
            ],
            "nextLink": ""
          }
        }
      }
    },
    "ApiManagementHeadApiRelease": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "a1",
        "releaseId": "5a7cb545298324c53224a799"
      },
      "responses": {
        "200": {
          "headers": {
            "etag": "AAAAAAAAAAa="
          }
        }
      }
    },
    "ApiManagementGetApiRelease": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "a1",
        "releaseId": "5a7cb545298324c53224a799"
      },
      "responses": {
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/a1/releases/5a7cb545298324c53224a799",
            "type": "Microsoft.ApiManagement/service/apis/releases",
            "name": "5a7cb545298324c53224a799",
            "properties": {
              "apiId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/a1",
              "createdDateTime": "2018-02-08T20:38:29.173Z",
              "updatedDateTime": "2018-02-08T20:38:29.173Z",
              "notes": "yahoo"
            }
          }
        }
      }
    },
    "ApiManagementCreateApiRelease": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "a1",
        "releaseId": "testrev",
        "parameters": {
          "properties": {
            "apiId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/a1",
            "notes": "yahooagain"
          }
        }
      },
      "responses": {
        "201": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/a1/releases/testrev",
            "type": "Microsoft.ApiManagement/service/apis/releases",
            "name": "testrev",
            "properties": {
              "apiId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/a1",
              "createdDateTime": "2018-02-08T20:52:00.65Z",
              "updatedDateTime": "2018-02-08T20:52:00.65Z",
              "notes": "yahooagain"
            }
          }
        },
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/a1/releases/testrev",
            "type": "Microsoft.ApiManagement/service/apis/releases",
            "name": "testrev",
            "properties": {
              "apiId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/a1",
              "createdDateTime": "2018-02-08T20:52:00.65Z",
              "updatedDateTime": "2018-02-08T20:52:00.65Z",
              "notes": "yahooagain"
            }
          }
        }
      }
    },
    "ApiManagementUpdateApiRelease": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "a1",
        "releaseId": "testrev",
        "If-Match": "*",
        "parameters": {
          "properties": {
            "apiId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/a1",
            "notes": "yahooagain"
          }
        }
      },
      "responses": {
        "204": {}
      }
    },
    "ApiManagementDeleteApiRelease": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "5a5fcc09124a7fa9b89f2f1d",
        "releaseId": "testrev",
        "If-Match": "*"
      },
      "responses": {
        "200": {},
        "204": {}
      }
    },
    "ApiManagementListApiOperations": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "57d2ef278aa04f0888cba3f3",
        "operationId": "57d2ef278aa04f0ad01d6cdc"
      },
      "responses": {
        "200": {
          "body": {
            "value": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d2ef278aa04f0888cba3f3/operations/57d2ef278aa04f0ad01d6cdc",
                "type": "Microsoft.ApiManagement/service/apis/operations",
                "name": "57d2ef278aa04f0ad01d6cdc",
                "properties": {
                  "displayName": "CancelOrder",
                  "method": "POST",
                  "urlTemplate": "/?soapAction=http://tempuri.org/IFazioService/CancelOrder"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d2ef278aa04f0888cba3f3/operations/57d2ef278aa04f0ad01d6cda",
                "type": "Microsoft.ApiManagement/service/apis/operations",
                "name": "57d2ef278aa04f0ad01d6cda",
                "properties": {
                  "displayName": "GetMostRecentOrder",
                  "method": "POST",
                  "urlTemplate": "/?soapAction=http://tempuri.org/IFazioService/GetMostRecentOrder"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d2ef278aa04f0888cba3f3/operations/57d2ef278aa04f0ad01d6cd9",
                "type": "Microsoft.ApiManagement/service/apis/operations",
                "name": "57d2ef278aa04f0ad01d6cd9",
                "properties": {
                  "displayName": "GetOpenOrders",
                  "method": "POST",
                  "urlTemplate": "/?soapAction=http://tempuri.org/IFazioService/GetOpenOrders"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d2ef278aa04f0888cba3f3/operations/57d2ef278aa04f0ad01d6cdb",
                "type": "Microsoft.ApiManagement/service/apis/operations",
                "name": "57d2ef278aa04f0ad01d6cdb",
                "properties": {
                  "displayName": "GetOrder",
                  "method": "POST",
                  "urlTemplate": "/?soapAction=http://tempuri.org/IFazioService/GetOrder"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d2ef278aa04f0888cba3f3/operations/57d2ef278aa04f0ad01d6cd8",
                "type": "Microsoft.ApiManagement/service/apis/operations",
                "name": "57d2ef278aa04f0ad01d6cd8",
                "properties": {
                  "displayName": "submitOrder",
                  "method": "POST",
                  "urlTemplate": "/?soapAction=http://tempuri.org/IFazioService/submitOrder"
                }
              }
            ],
            "nextLink": ""
          }
        }
      }
    },
    "ApiManagementHeadApiOperation": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "57d2ef278aa04f0888cba3f3",
        "operationId": "57d2ef278aa04f0ad01d6cdc"
      },
      "responses": {
        "200": {
          "headers": {
            "etag": "AAAAAAAAAAa="
          }
        }
      }
    },
    "ApiManagementGetApiOperation": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "57d2ef278aa04f0888cba3f3",
        "operationId": "57d2ef278aa04f0ad01d6cdc"
      },
      "responses": {
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d2ef278aa04f0888cba3f3/operations/57d2ef278aa04f0ad01d6cdc",
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "name": "57d2ef278aa04f0ad01d6cdc",
            "properties": {
              "displayName": "CancelOrder",
              "method": "POST",
              "urlTemplate": "/?soapAction=http://tempuri.org/IFazioService/CancelOrder",
              "templateParameters": [],
              "request": {
                "description": "IFazioService_CancelOrder_InputMessage",
                "queryParameters": [],
                "headers": [],
                "representations": [
                  {
                    "contentType": "text/xml",
                    "sample": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n  <Body>\r\n    <CancelOrder xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://tempuri.org/\">\r\n      <orderId>1</orderId>\r\n    </CancelOrder>\r\n  </Body>\r\n</Envelope>",
                    "schemaId": "6980a395-f08b-4a59-8295-1440cbd909b8",
                    "typeName": "CancelOrder"
                  }
                ]
              },
              "responses": [
                {
                  "statusCode": 200,
                  "description": "IFazioService_CancelOrder_OutputMessage",
                  "representations": [
                    {
                      "contentType": "text/xml",
                      "sample": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n  <Body>\r\n    <CancelOrderResponse xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://tempuri.org/\">\r\n      <CancelOrderResult>1</CancelOrderResult>\r\n    </CancelOrderResponse>\r\n  </Body>\r\n</Envelope>",
                      "schemaId": "6980a395-f08b-4a59-8295-1440cbd909b8",
                      "typeName": "CancelOrderResponse"
                    }
                  ],
                  "headers": []
                }
              ]
            }
          }
        }
      }
    },
    "ApiManagementCreateApiOperation": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "PetStoreTemplate2",
        "operationId": "newoperations",
        "parameters": {
          "name": "newoperation",
          "properties": {
            "displayName": "createUser2",
            "method": "POST",
            "urlTemplate": "/user1",
            "templateParameters": [],
            "description": "This can only be done by the logged in user.",
            "request": {
              "description": "Created user object",
              "queryParameters": [],
              "headers": [],
              "representations": [
                {
                  "contentType": "application/json",
                  "schemaId": "592f6c1d0af5840ca8897f0c",
                  "typeName": "User"
                }
              ]
            },
            "responses": [
              {
                "statusCode": 200,
                "description": "successful operation",
                "representations": [
                  {
                    "contentType": "application/xml"
                  },
                  {
                    "contentType": "application/json"
                  }
                ],
                "headers": []
              }
            ]
          }
        }
      },
      "responses": {
        "201": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/PetStoreTemplate2/operations/newoperations",
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "name": "newoperations",
            "properties": {
              "displayName": "createUser2",
              "method": "POST",
              "urlTemplate": "/user1",
              "templateParameters": [],
              "description": "This can only be done by the logged in user.",
              "request": {
                "description": "Created user object",
                "queryParameters": [],
                "headers": [],
                "representations": [
                  {
                    "contentType": "application/json",
                    "schemaId": "592f6c1d0af5840ca8897f0c",
                    "typeName": "User"
                  }
                ]
              },
              "responses": [
                {
                  "statusCode": 200,
                  "description": "successful operation",
                  "representations": [
                    {
                      "contentType": "application/xml"
                    },
                    {
                      "contentType": "application/json"
                    }
                  ],
                  "headers": []
                }
              ]
            }
          }
        },
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/PetStoreTemplate2/operations/newoperations",
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "name": "newoperations",
            "properties": {
              "displayName": "createUser2",
              "method": "POST",
              "urlTemplate": "/user1",
              "templateParameters": [],
              "description": "This can only be done by the logged in user.",
              "request": {
                "description": "Created user object",
                "queryParameters": [],
                "headers": [],
                "representations": [
                  {
                    "contentType": "application/json",
                    "schemaId": "592f6c1d0af5840ca8897f0c",
                    "typeName": "User"
                  }
                ]
              },
              "responses": [
                {
                  "statusCode": 200,
                  "description": "successful operation",
                  "representations": [
                    {
                      "contentType": "application/xml"
                    },
                    {
                      "contentType": "application/json"
                    }
                  ],
                  "headers": []
                }
              ]
            }
          }
        }
      }
    },
    "ApiManagementUpdateApiOperation": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "echo-api",
        "operationId": "operationId",
        "If-Match": "*",
        "parameters": {
          "properties": {
            "displayName": "Retrieve resource",
            "method": "GET",
            "urlTemplate": "/resource",
            "templateParameters": [],
            "request": {
              "queryParameters": [
                {
                  "name": "param1",
                  "description": "A sample parameter that is required and has a default value of \"sample\".",
                  "type": "string",
                  "defaultValue": "sample",
                  "required": true,
                  "values": [
                    "sample"
                  ]
                }
              ]
            },
            "responses": [
              {
                "statusCode": 200,
                "description": "Returned in all cases.",
                "representations": [],
                "headers": []
              },
              {
                "statusCode": 500,
                "description": "Server Error.",
                "representations": [],
                "headers": []
              }
            ]
          }
        }
      },
      "responses": {
        "204": {}
      }
    },
    "ApiManagementDeleteApiOperation": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "57d2ef278aa04f0888cba3f3",
        "operationId": "57d2ef278aa04f0ad01d6cdc",
        "If-Match": "*"
      },
      "responses": {
        "200": {},
        "204": {}
      }
    },
    "ApiManagementListApiOperationPolicies": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "599e2953193c3c0bd0b3e2fa",
        "operationId": "599e29ab193c3c0bd0b3e2fb"
      },
      "responses": {
        "200": {
          "body": {
            "value": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/599e2953193c3c0bd0b3e2fa/operations/599e29ab193c3c0bd0b3e2fb/policies/policy",
                "type": "Microsoft.ApiManagement/service/apis/operations/policies",
                "name": "policy",
                "properties": {
                  "policyContent": "<!--\r\n    IMPORTANT:\r\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n    - Only the <forward-request> policy element can appear within the <backend> section element.\r\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n    - To add a policy position the cursor at the desired insertion point and click on the round button associated with the policy.\r\n    - To remove a policy, delete the corresponding policy statement from the policy document.\r\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\r\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\r\n    - Policies are applied in the order of their appearance, from the top down.\r\n-->\r\n<policies>\r\n  <inbound>\r\n    <validate-jwt header-name=\"dd\">\r\n      <required-claims>\r\n        <claim name=\"bla\" separator=\"\">\r\n          <value>xxx</value>\r\n        </claim>\r\n      </required-claims>\r\n    </validate-jwt>\r\n    <base />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n</policies>"
                }
              }
            ],
            "nextLink": ""
          }
        }
      }
    },
    "ApiManagementHeadApiOperationPolicy": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "5600b539c53f5b0062040001",
        "operationId": "5600b53ac53f5b0062080006",
        "policyId": "policy"
      },
      "responses": {
        "200": {
          "headers": {
            "etag": "AAAAAAAAAAa="
          }
        }
      }
    },
    "ApiManagementGetApiOperationPolicy": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "5600b539c53f5b0062040001",
        "operationId": "5600b53ac53f5b0062080006",
        "policyId": "policy"
      },
      "responses": {
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/5600b539c53f5b0062040001/operations/5600b53ac53f5b0062080006/policies/policy",
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "name": "policy",
            "properties": {
              "policyContent": "<policies>\r\n  <inbound>\r\n    <base />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n    <set-header name=\"X-My-Sample\" exists-action=\"override\">\r\n      <value>This is a sample</value>\r\n      <!-- for multiple headers with the same name add additional value elements -->\r\n    </set-header>\r\n    <jsonp callback-parameter-name=\"ProcessResponse\" />\r\n  </outbound>\r\n</policies>"
            }
          }
        }
      }
    },
    "ApiManagementCreateApiOperationPolicy": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "5600b57e7e8880006a040001",
        "operationId": "5600b57e7e8880006a080001",
        "policyId": "policy",
        "If-Match": "*",
        "parameters": {
          "properties": {
            "contentFormat": "xml",
            "policyContent": "<policies> <inbound /> <backend>    <forward-request />  </backend>  <outbound /></policies>"
          }
        }
      },
      "responses": {
        "201": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/5600b57e7e8880006a040001/operations/5600b57e7e8880006a080001/policies/policy",
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "name": "policy",
            "properties": {
              "policyContent": "<policies>\r\n  <inbound />\r\n  <backend>\r\n    <forward-request />\r\n  </backend>\r\n  <outbound />\r\n</policies>"
            }
          }
        },
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/5600b57e7e8880006a040001/operations/5600b57e7e8880006a080001/policies/policy",
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "name": "policy",
            "properties": {
              "policyContent": "<policies>\r\n  <inbound />\r\n  <backend>\r\n    <forward-request />\r\n  </backend>\r\n  <outbound />\r\n</policies>"
            }
          }
        }
      }
    },
    "ApiManagementDeleteOperationPolicy": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "testapi",
        "operationId": "testoperation",
        "policyId": "policy",
        "If-Match": "*"
      },
      "responses": {
        "200": {},
        "204": {}
      }
    },
    "ApiManagementGetProductsForApi": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "57d2ef278aa04f0888cba3f3"
      },
      "responses": {
        "200": {
          "body": {
            "value": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/products/5600b539c53f5b0062060002",
                "type": "Microsoft.ApiManagement/service/apis/products",
                "name": "5600b539c53f5b0062060002",
                "properties": {
                  "displayName": "Unlimited",
                  "description": "Subscribers have completely unlimited access to the API. Administrator approval is required.",
                  "subscriptionRequired": true,
                  "approvalRequired": true,
                  "subscriptionsLimit": 1,
                  "state": "published"
                }
              }
            ],
            "nextLink": ""
          }
        }
      }
    },
    "ApiManagementListApiPolicies": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "5600b59475ff190048040001"
      },
      "responses": {
        "200": {
          "body": {
            "value": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/5600b59475ff190048040001/policies/policy",
                "type": "Microsoft.ApiManagement/service/apis/policies",
                "name": "policy",
                "properties": {
                  "policyContent": "<!--\r\n    IMPORTANT:\r\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n    - Only the <forward-request> policy element can appear within the <backend> section element.\r\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n    - To add a policy position the cursor at the desired insertion point and click on the round button associated with the policy.\r\n    - To remove a policy, delete the corresponding policy statement from the policy document.\r\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\r\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\r\n    - Policies are applied in the order of their appearance, from the top down.\r\n-->\r\n<policies>\r\n  <inbound>\r\n    <quota-by-key calls=\"5\" bandwidth=\"2\" renewal-period=\"&#x9;P3Y6M4DT12H30M5S\" counter-key=\"ba\" />\r\n    <base />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <log-to-eventhub logger-id=\"apimService1\" partition-key=\"@(context.Subscription.Id)\">\r\n@{\r\n\tRandom Random = new Random();\r\n\t\t\t\tconst string Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz \";                \r\n                return string.Join(\",\", DateTime.UtcNow, new string(\r\n                    Enumerable.Repeat(Chars, Random.Next(2150400))\r\n                              .Select(s =&gt; s[Random.Next(s.Length)])\r\n                              .ToArray()));\r\n          }                           \r\n                        </log-to-eventhub>\r\n    <base />\r\n  </outbound>\r\n</policies>"
                }
              }
            ],
            "nextLink": ""
          }
        }
      }
    },
    "ApiManagementHeadApiPolicy": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "57d1f7558aa04f15146d9d8a",
        "policyId": "policy"
      },
      "responses": {
        "200": {
          "headers": {
            "etag": "AAAAAAAAAAa="
          }
        }
      }
    },
    "ApiManagementGetApiPolicy": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "5600b59475ff190048040001",
        "policyId": "policy"
      },
      "responses": {
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/5600b59475ff190048040001/policies/policy",
            "type": "Microsoft.ApiManagement/service/apis/policies",
            "name": "policy",
            "properties": {
              "policyContent": "<!--\r\n    IMPORTANT:\r\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n    - Only the <forward-request> policy element can appear within the <backend> section element.\r\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n    - To add a policy position the cursor at the desired insertion point and click on the round button associated with the policy.\r\n    - To remove a policy, delete the corresponding policy statement from the policy document.\r\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\r\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\r\n    - Policies are applied in the order of their appearance, from the top down.\r\n-->\r\n<policies>\r\n  <inbound>\r\n    <quota-by-key calls=\"5\" bandwidth=\"2\" renewal-period=\"&#x9;P3Y6M4DT12H30M5S\" counter-key=\"ba\" />\r\n    <base />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <log-to-eventhub logger-id=\"apimService1\" partition-key=\"@(context.Subscription.Id)\">\r\n@{\r\n\tRandom Random = new Random();\r\n\t\t\t\tconst string Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz \";                \r\n                return string.Join(\",\", DateTime.UtcNow, new string(\r\n                    Enumerable.Repeat(Chars, Random.Next(2150400))\r\n                              .Select(s =&gt; s[Random.Next(s.Length)])\r\n                              .ToArray()));\r\n          }                           \r\n                        </log-to-eventhub>\r\n    <base />\r\n  </outbound>\r\n</policies>"
            }
          }
        }
      }
    },
    "ApiManagementCreateApiPolicy": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "5600b57e7e8880006a040001",
        "policyId": "policy",
        "If-Match": "*",
        "parameters": {
          "properties": {
            "contentFormat": "xml",
            "policyContent": "<policies> <inbound /> <backend>    <forward-request />  </backend>  <outbound /></policies>"
          }
        }
      },
      "responses": {
        "201": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/5600b57e7e8880006a040001/policies/policy",
            "type": "Microsoft.ApiManagement/service/apis/policies",
            "name": "policy",
            "properties": {
              "policyContent": "<policies>\r\n  <inbound />\r\n  <backend>\r\n    <forward-request />\r\n  </backend>\r\n  <outbound />\r\n</policies>"
            }
          }
        },
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/5600b57e7e8880006a040001/policies/policy",
            "type": "Microsoft.ApiManagement/service/apis/policies",
            "name": "policy",
            "properties": {
              "policyContent": "<policies>\r\n  <inbound />\r\n  <backend>\r\n    <forward-request />\r\n  </backend>\r\n  <outbound />\r\n</policies>"
            }
          }
        }
      }
    },
    "ApiManagementCreateApiPolicyNonXmlEncoded": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "5600b57e7e8880006a040001",
        "policyId": "policy",
        "If-Match": "*",
        "parameters": {
          "properties": {
            "policyContent": "<policies>\r\n     <inbound>\r\n     <base />\r\n  <set-header name=\"newvalue\" exists-action=\"override\">\r\n   <value>\"@(context.Request.Headers.FirstOrDefault(h => h.Ke==\"Via\"))\" </value>\r\n    </set-header>\r\n  </inbound>\r\n      </policies>",
            "contentFormat": "rawxml"
          }
        }
      },
      "responses": {
        "201": {
          "body": {
            "id": "/subscriptions/4c1a3bc6-89f9-46fe-a175-5d8984b25095/resourcegroups/Api-DF-West-US/providers/Microsoft.ApiManagement/service/samirmsiservice2/apis/echo-api/operations/create-resource/policies/policy",
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "name": "policy",
            "properties": {
              "policyContent": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <set-header name=\"newvalue\" exists-action=\"override\">\r\n      <value>\"@(context.Request.Headers.FirstOrDefault(h =&gt; h.Ke==\"Via\"))\" </value>\r\n    </set-header>\r\n  </inbound>\r\n</policies>"
            }
          }
        },
        "200": {
          "body": {
            "id": "/subscriptions/4c1a3bc6-89f9-46fe-a175-5d8984b25095/resourcegroups/Api-DF-West-US/providers/Microsoft.ApiManagement/service/samirmsiservice2/apis/echo-api/operations/create-resource/policies/policy",
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "name": "policy",
            "properties": {
              "policyContent": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <set-header name=\"newvalue\" exists-action=\"override\">\r\n      <value>\"@(context.Request.Headers.FirstOrDefault(h =&gt; h.Ke==\"Via\"))\" </value>\r\n    </set-header>\r\n  </inbound>\r\n</policies>"
            }
          }
        }
      }
    },
    "ApiManagementDeleteApiPolicy": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "loggerId",
        "policyId": "policy",
        "If-Match": "*"
      },
      "responses": {
        "200": {},
        "204": {}
      }
    },
    "ApiManagementListApiSchemas": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "59d5b28d1f7fab116c282650"
      },
      "responses": {
        "200": {
          "body": {
            "value": [
              {
                "id": "/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/59d5b28d1f7fab116c282650/schemas/59d5b28e1f7fab116402044e",
                "type": "Microsoft.ApiManagement/service/apis/schemas",
                "name": "59d5b28e1f7fab116402044e",
                "properties": {
                  "contentType": "application/vnd.ms-azure-apim.swagger.definitions+json"
                }
              }
            ],
            "nextLink": ""
          }
        }
      }
    },
    "ApiManagementHeadApiSchema": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "57d1f7558aa04f15146d9d8a",
        "schemaId": "ec12520d-9d48-4e7b-8f39-698ca2ac63f1"
      },
      "responses": {
        "200": {
          "headers": {
            "etag": "AAAAAAAAAAa="
          }
        }
      }
    },
    "ApiManagementGetApiSchema": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "59d6bb8f1f7fab13dc67ec9b",
        "schemaId": "ec12520d-9d48-4e7b-8f39-698ca2ac63f1"
      },
      "responses": {
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/59d6bb8f1f7fab13dc67ec9b/schemas/ec12520d-9d48-4e7b-8f39-698ca2ac63f1",
            "type": "Microsoft.ApiManagement/service/apis/schemas",
            "name": "ec12520d-9d48-4e7b-8f39-698ca2ac63f1",
            "properties": {
              "contentType": "application/vnd.ms-azure-apim.xsd+xml",
              "document": {
                "value": "<s:schema elementFormDefault=\"qualified\" targetNamespace=\"http://ws.cdyne.com/WeatherWS/\" xmlns:tns=\"http://ws.cdyne.com/WeatherWS/\" xmlns:s=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://schemas.xmlsoap.org/wsdl/soap12/\" xmlns:mime=\"http://schemas.xmlsoap.org/wsdl/mime/\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:tm=\"http://microsoft.com/wsdl/mime/textMatching/\" xmlns:http=\"http://schemas.xmlsoap.org/wsdl/http/\" xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:apim-wsdltns=\"http://ws.cdyne.com/WeatherWS/\">\r\n  <s:element name=\"GetWeatherInformation\">\r\n    <s:complexType />\r\n  </s:element>\r\n  <s:element name=\"GetWeatherInformationResponse\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"GetWeatherInformationResult\" type=\"tns:ArrayOfWeatherDescription\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:complexType name=\"ArrayOfWeatherDescription\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"unbounded\" name=\"WeatherDescription\" type=\"tns:WeatherDescription\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"WeatherDescription\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"WeatherID\" type=\"s:short\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Description\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"PictureURL\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:element name=\"GetCityForecastByZIP\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ZIP\" type=\"s:string\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:element name=\"GetCityForecastByZIPResponse\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"GetCityForecastByZIPResult\" type=\"tns:ForecastReturn\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:complexType name=\"ForecastReturn\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Success\" type=\"s:boolean\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ResponseText\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"State\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"City\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"WeatherStationCity\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ForecastResult\" type=\"tns:ArrayOfForecast\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"ArrayOfForecast\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"unbounded\" name=\"Forecast\" nillable=\"true\" type=\"tns:Forecast\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"Forecast\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Date\" type=\"s:dateTime\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"WeatherID\" type=\"s:short\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Desciption\" type=\"s:string\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Temperatures\" type=\"tns:temp\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"ProbabilityOfPrecipiation\" type=\"tns:POP\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"temp\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"MorningLow\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"DaytimeHigh\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"POP\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Nighttime\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Daytime\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:element name=\"GetCityWeatherByZIP\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ZIP\" type=\"s:string\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:element name=\"GetCityWeatherByZIPResponse\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"GetCityWeatherByZIPResult\" type=\"tns:WeatherReturn\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:complexType name=\"WeatherReturn\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Success\" type=\"s:boolean\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ResponseText\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"State\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"City\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"WeatherStationCity\" type=\"s:string\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"WeatherID\" type=\"s:short\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Description\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Temperature\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"RelativeHumidity\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Wind\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Pressure\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Visibility\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"WindChill\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Remarks\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:element name=\"ArrayOfWeatherDescription\" nillable=\"true\" type=\"tns:ArrayOfWeatherDescription\" />\r\n  <s:element name=\"ForecastReturn\" nillable=\"true\" type=\"tns:ForecastReturn\" />\r\n  <s:element name=\"WeatherReturn\" type=\"tns:WeatherReturn\" />\r\n</s:schema>"
              }
            }
          }
        }
      }
    },
    "ApiManagementCreateApiSchema": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "59d6bb8f1f7fab13dc67ec9b",
        "schemaId": "ec12520d-9d48-4e7b-8f39-698ca2ac63f1",
        "parameters": {
          "properties": {
            "contentType": "application/vnd.ms-azure-apim.xsd+xml",
            "document": {
              "value": "<s:schema elementFormDefault=\"qualified\" targetNamespace=\"http://ws.cdyne.com/WeatherWS/\" xmlns:tns=\"http://ws.cdyne.com/WeatherWS/\" xmlns:s=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://schemas.xmlsoap.org/wsdl/soap12/\" xmlns:mime=\"http://schemas.xmlsoap.org/wsdl/mime/\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:tm=\"http://microsoft.com/wsdl/mime/textMatching/\" xmlns:http=\"http://schemas.xmlsoap.org/wsdl/http/\" xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:apim-wsdltns=\"http://ws.cdyne.com/WeatherWS/\">\r\n  <s:element name=\"GetWeatherInformation\">\r\n    <s:complexType />\r\n  </s:element>\r\n  <s:element name=\"GetWeatherInformationResponse\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"GetWeatherInformationResult\" type=\"tns:ArrayOfWeatherDescription\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:complexType name=\"ArrayOfWeatherDescription\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"unbounded\" name=\"WeatherDescription\" type=\"tns:WeatherDescription\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"WeatherDescription\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"WeatherID\" type=\"s:short\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Description\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"PictureURL\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:element name=\"GetCityForecastByZIP\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ZIP\" type=\"s:string\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:element name=\"GetCityForecastByZIPResponse\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"GetCityForecastByZIPResult\" type=\"tns:ForecastReturn\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:complexType name=\"ForecastReturn\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Success\" type=\"s:boolean\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ResponseText\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"State\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"City\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"WeatherStationCity\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ForecastResult\" type=\"tns:ArrayOfForecast\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"ArrayOfForecast\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"unbounded\" name=\"Forecast\" nillable=\"true\" type=\"tns:Forecast\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"Forecast\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Date\" type=\"s:dateTime\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"WeatherID\" type=\"s:short\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Desciption\" type=\"s:string\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Temperatures\" type=\"tns:temp\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"ProbabilityOfPrecipiation\" type=\"tns:POP\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"temp\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"MorningLow\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"DaytimeHigh\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"POP\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Nighttime\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Daytime\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:element name=\"GetCityWeatherByZIP\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ZIP\" type=\"s:string\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:element name=\"GetCityWeatherByZIPResponse\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"GetCityWeatherByZIPResult\" type=\"tns:WeatherReturn\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:complexType name=\"WeatherReturn\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Success\" type=\"s:boolean\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ResponseText\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"State\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"City\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"WeatherStationCity\" type=\"s:string\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"WeatherID\" type=\"s:short\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Description\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Temperature\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"RelativeHumidity\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Wind\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Pressure\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Visibility\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"WindChill\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Remarks\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:element name=\"ArrayOfWeatherDescription\" nillable=\"true\" type=\"tns:ArrayOfWeatherDescription\" />\r\n  <s:element name=\"ForecastReturn\" nillable=\"true\" type=\"tns:ForecastReturn\" />\r\n  <s:element name=\"WeatherReturn\" type=\"tns:WeatherReturn\" />\r\n</s:schema>"
            }
          }
        }
      },
      "responses": {
        "201": {
          "body": {
            "id": "/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/59d6bb8f1f7fab13dc67ec9b/schemas/ec12520d-9d48-4e7b-8f39-698ca2ac63f1",
            "type": "Microsoft.ApiManagement/service/apis/schemas",
            "name": "ec12520d-9d48-4e7b-8f39-698ca2ac63f1",
            "properties": {
              "contentType": "application/vnd.ms-azure-apim.xsd+xml",
              "document": {
                "value": "<s:schema elementFormDefault=\"qualified\" targetNamespace=\"http://ws.cdyne.com/WeatherWS/\" xmlns:tns=\"http://ws.cdyne.com/WeatherWS/\" xmlns:s=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://schemas.xmlsoap.org/wsdl/soap12/\" xmlns:mime=\"http://schemas.xmlsoap.org/wsdl/mime/\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:tm=\"http://microsoft.com/wsdl/mime/textMatching/\" xmlns:http=\"http://schemas.xmlsoap.org/wsdl/http/\" xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:apim-wsdltns=\"http://ws.cdyne.com/WeatherWS/\">\r\n  <s:element name=\"GetWeatherInformation\">\r\n    <s:complexType />\r\n  </s:element>\r\n  <s:element name=\"GetWeatherInformationResponse\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"GetWeatherInformationResult\" type=\"tns:ArrayOfWeatherDescription\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:complexType name=\"ArrayOfWeatherDescription\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"unbounded\" name=\"WeatherDescription\" type=\"tns:WeatherDescription\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"WeatherDescription\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"WeatherID\" type=\"s:short\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Description\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"PictureURL\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:element name=\"GetCityForecastByZIP\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ZIP\" type=\"s:string\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:element name=\"GetCityForecastByZIPResponse\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"GetCityForecastByZIPResult\" type=\"tns:ForecastReturn\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:complexType name=\"ForecastReturn\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Success\" type=\"s:boolean\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ResponseText\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"State\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"City\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"WeatherStationCity\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ForecastResult\" type=\"tns:ArrayOfForecast\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"ArrayOfForecast\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"unbounded\" name=\"Forecast\" nillable=\"true\" type=\"tns:Forecast\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"Forecast\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Date\" type=\"s:dateTime\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"WeatherID\" type=\"s:short\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Desciption\" type=\"s:string\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Temperatures\" type=\"tns:temp\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"ProbabilityOfPrecipiation\" type=\"tns:POP\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"temp\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"MorningLow\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"DaytimeHigh\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"POP\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Nighttime\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Daytime\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:element name=\"GetCityWeatherByZIP\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ZIP\" type=\"s:string\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:element name=\"GetCityWeatherByZIPResponse\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"GetCityWeatherByZIPResult\" type=\"tns:WeatherReturn\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:complexType name=\"WeatherReturn\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Success\" type=\"s:boolean\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ResponseText\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"State\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"City\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"WeatherStationCity\" type=\"s:string\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"WeatherID\" type=\"s:short\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Description\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Temperature\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"RelativeHumidity\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Wind\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Pressure\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Visibility\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"WindChill\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Remarks\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:element name=\"ArrayOfWeatherDescription\" nillable=\"true\" type=\"tns:ArrayOfWeatherDescription\" />\r\n  <s:element name=\"ForecastReturn\" nillable=\"true\" type=\"tns:ForecastReturn\" />\r\n  <s:element name=\"WeatherReturn\" type=\"tns:WeatherReturn\" />\r\n</s:schema>"
              }
            }
          }
        },
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/59d6bb8f1f7fab13dc67ec9b/schemas/ec12520d-9d48-4e7b-8f39-698ca2ac63f1",
            "type": "Microsoft.ApiManagement/service/apis/schemas",
            "name": "ec12520d-9d48-4e7b-8f39-698ca2ac63f1",
            "properties": {
              "contentType": "application/vnd.ms-azure-apim.xsd+xml",
              "document": {
                "value": "<s:schema elementFormDefault=\"qualified\" targetNamespace=\"http://ws.cdyne.com/WeatherWS/\" xmlns:tns=\"http://ws.cdyne.com/WeatherWS/\" xmlns:s=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://schemas.xmlsoap.org/wsdl/soap12/\" xmlns:mime=\"http://schemas.xmlsoap.org/wsdl/mime/\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:tm=\"http://microsoft.com/wsdl/mime/textMatching/\" xmlns:http=\"http://schemas.xmlsoap.org/wsdl/http/\" xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:apim-wsdltns=\"http://ws.cdyne.com/WeatherWS/\">\r\n  <s:element name=\"GetWeatherInformation\">\r\n    <s:complexType />\r\n  </s:element>\r\n  <s:element name=\"GetWeatherInformationResponse\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"GetWeatherInformationResult\" type=\"tns:ArrayOfWeatherDescription\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:complexType name=\"ArrayOfWeatherDescription\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"unbounded\" name=\"WeatherDescription\" type=\"tns:WeatherDescription\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"WeatherDescription\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"WeatherID\" type=\"s:short\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Description\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"PictureURL\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:element name=\"GetCityForecastByZIP\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ZIP\" type=\"s:string\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:element name=\"GetCityForecastByZIPResponse\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"GetCityForecastByZIPResult\" type=\"tns:ForecastReturn\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:complexType name=\"ForecastReturn\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Success\" type=\"s:boolean\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ResponseText\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"State\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"City\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"WeatherStationCity\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ForecastResult\" type=\"tns:ArrayOfForecast\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"ArrayOfForecast\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"unbounded\" name=\"Forecast\" nillable=\"true\" type=\"tns:Forecast\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"Forecast\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Date\" type=\"s:dateTime\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"WeatherID\" type=\"s:short\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Desciption\" type=\"s:string\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Temperatures\" type=\"tns:temp\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"ProbabilityOfPrecipiation\" type=\"tns:POP\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"temp\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"MorningLow\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"DaytimeHigh\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"POP\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Nighttime\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Daytime\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:element name=\"GetCityWeatherByZIP\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ZIP\" type=\"s:string\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:element name=\"GetCityWeatherByZIPResponse\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"GetCityWeatherByZIPResult\" type=\"tns:WeatherReturn\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:complexType name=\"WeatherReturn\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Success\" type=\"s:boolean\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ResponseText\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"State\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"City\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"WeatherStationCity\" type=\"s:string\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"WeatherID\" type=\"s:short\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Description\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Temperature\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"RelativeHumidity\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Wind\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Pressure\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Visibility\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"WindChill\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Remarks\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:element name=\"ArrayOfWeatherDescription\" nillable=\"true\" type=\"tns:ArrayOfWeatherDescription\" />\r\n  <s:element name=\"ForecastReturn\" nillable=\"true\" type=\"tns:ForecastReturn\" />\r\n  <s:element name=\"WeatherReturn\" type=\"tns:WeatherReturn\" />\r\n</s:schema>"
              }
            }
          }
        }
      }
    },
    "ApiManagementDeleteApiSchema": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "59d5b28d1f7fab116c282650",
        "schemaId": "59d5b28e1f7fab116402044e",
        "If-Match": "*"
      },
      "responses": {
        "200": {},
        "204": {}
      }
    },
    "ApiManagementListApisByTags": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid"
      },
      "responses": {
        "200": {
          "body": {
            "value": [
              {
                "tag": {
                  "id": "/tags/apitag123",
                  "name": "awesomeTag"
                },
                "api": {
                  "id": "/apis/echo-api",
                  "name": "Echo API",
                  "apiRevision": "1",
                  "serviceUrl": "http://echoapi.cloudapp.net/api",
                  "path": "echo",
                  "isCurrent": true
                }
              }
            ],
            "count": 1
          }
        }
      }
    },
    "ApiManagementListApiDiagnostics": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "57d1f7558aa04f15146d9d8a"
      },
      "responses": {
        "200": {
          "body": {
            "value": [
              {
                "id": "/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d1f7558aa04f15146d9d8a/diagnostics/default",
                "type": "Microsoft.ApiManagement/service/apis/diagnostics",
                "name": "default",
                "properties": {
                  "enabled": false
                }
              }
            ],
            "nextLink": ""
          }
        }
      }
    },
    "ApiManagementHeadApiDiagnostic": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "diagnosticId": "default",
        "apiId": "57d1f7558aa04f15146d9d8a"
      },
      "responses": {
        "200": {
          "headers": {
            "etag": "AAAAAAAAAAa="
          }
        }
      }
    },
    "ApiManagementGetApiDiagnostic": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "diagnosticId": "default",
        "apiId": "57d1f7558aa04f15146d9d8a"
      },
      "responses": {
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d1f7558aa04f15146d9d8a/diagnostics/default",
            "type": "Microsoft.ApiManagement/service/apis/diagnostics",
            "name": "default",
            "properties": {
              "enabled": false
            }
          }
        }
      }
    },
    "ApiManagementCreateApiDiagnostic": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "diagnosticId": "default",
        "apiId": "57d1f7558aa04f15146d9d8a",
        "parameters": {
          "properties": {
            "enabled": true
          }
        }
      },
      "responses": {
        "201": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d1f7558aa04f15146d9d8a/diagnostics/default",
            "type": "Microsoft.ApiManagement/service/apis/diagnostics",
            "name": "default",
            "properties": {
              "enabled": true
            }
          }
        },
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d1f7558aa04f15146d9d8a/diagnostics/default",
            "type": "Microsoft.ApiManagement/service/apis/diagnostics",
            "name": "default",
            "properties": {
              "enabled": true
            }
          }
        }
      }
    },
    "ApiManagementUpdateApiDiagnostic": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "diagnosticId": "default",
        "apiId": "57d1f7558aa04f15146d9d8a",
        "If-Match": "*",
        "parameters": {
          "properties": {
            "enabled": false
          }
        }
      },
      "responses": {
        "204": {}
      }
    },
    "ApiManagementDeleteApiDiagnostic": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "diagnosticId": "default",
        "apiId": "57d1f7558aa04f15146d9d8a",
        "If-Match": "*"
      },
      "responses": {
        "204": {},
        "200": {}
      }
    },
    "ApiManagementListApiDiagnosticLoggers": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "diagnosticId": "default",
        "apiId": "57d1f7558aa04f15146d9d8a"
      },
      "responses": {
        "200": {
          "body": {
            "value": [
              {
                "id": "/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d1f7558aa04f15146d9d8a/diagnostics/default/loggers/applicationinsights",
                "type": "Microsoft.ApiManagement/service/apis/diagnostics/loggers",
                "name": "applicationinsights",
                "properties": {
                  "loggerType": "applicationInsights",
                  "description": null,
                  "credentials": {
                    "instrumentationKey": "{{5a.......2a}}"
                  },
                  "isBuffered": false
                }
              }
            ],
            "nextLink": ""
          }
        }
      }
    },
    "ApiManagementHeadApiDiagnosticLogger": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "diagnosticId": "default",
        "loggerid": "templateLogger",
        "apiId": "57d1f7558aa04f15146d9d8a"
      },
      "responses": {
        "204": {},
        "404": {}
      }
    },
    "ApiManagementCreateApiDiagnosticLogger": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "diagnosticId": "default",
        "loggerid": "applicationinsights",
        "apiId": "57d1f7558aa04f15146d9d8a",
        "parameters": {}
      },
      "responses": {
        "201": {
          "body": {
            "id": "/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d1f7558aa04f15146d9d8a/diagnostics/default/loggers/applicationinsights",
            "type": "Microsoft.ApiManagement/service/apis/diagnostics/loggers",
            "name": "applicationinsights",
            "properties": {
              "loggerType": "applicationInsights",
              "description": null,
              "credentials": {
                "instrumentationKey": "{{5a.......2a}}"
              },
              "isBuffered": false
            }
          }
        },
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d1f7558aa04f15146d9d8a/diagnostics/default/loggers/applicationinsights",
            "type": "Microsoft.ApiManagement/service/apis/diagnostics/loggers",
            "name": "applicationinsights",
            "properties": {
              "loggerType": "applicationInsights",
              "description": null,
              "credentials": {
                "instrumentationKey": "{{5a.......2a}}"
              },
              "isBuffered": false
            }
          }
        }
      }
    },
    "ApiManagementDeleteApiDiagnosticLogger": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "diagnosticId": "default",
        "loggerid": "applicationinsights",
        "apiId": "57d1f7558aa04f15146d9d8a",
        "parameters": {}
      },
      "responses": {
        "204": {},
        "200": {}
      }
    },
    "ApiManagementListApiIssues": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2017-03-01",
        "subscriptionId": "subid",
        "apiId": "57d1f7558aa04f15146d9d8a"
      },
      "responses": {
        "200": {
          "body": {
            "value": [
              {
                "id": "/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d1f7558aa04f15146d9d8a/issues/57d2ef278aa04f0ad01d6cdc",
                "type": "Microsoft.ApiManagement/service/apis/issues",
                "name": "57d2ef278aa04f0ad01d6cdc",
                "properties": {
                  "title": "New API issue",
                  "description": "New API issue description",
                  "createdDate": "2018-02-01T22:21:20.467Z",
                  "state": "open",
                  "userId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/1",
                  "apiId": "/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d1f7558aa04f15146d9d8a"
                }
              }
            ],
            "nextLink": ""
          }
        }
      }
    },
    "ApiManagementHeadApiIssue": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2017-03-01",
        "subscriptionId": "subid",
        "apiId": "57d2ef278aa04f0888cba3f3",
        "issueId": "57d2ef278aa04f0ad01d6cdc"
      },
      "responses": {
        "200": {
          "headers": {
            "etag": "AAAAAAAAAAa="
          }
        }
      }
    },
    "ApiManagementGetApiIssue": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2017-03-01",
        "subscriptionId": "subid",
        "apiId": "57d2ef278aa04f0888cba3f3",
        "issueId": "57d2ef278aa04f0ad01d6cdc"
      },
      "responses": {
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d1f7558aa04f15146d9d8a/issues/57d2ef278aa04f0ad01d6cdc",
            "type": "Microsoft.ApiManagement/service/apis/issues",
            "name": "57d2ef278aa04f0ad01d6cdc",
            "properties": {
              "title": "New API issue",
              "description": "New API issue description",
              "createdDate": "2018-02-01T22:21:20.467Z",
              "state": "open",
              "userId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/1",
              "apiId": "/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d1f7558aa04f15146d9d8a"
            }
          }
        }
      }
    },
    "ApiManagementCreateApiIssue": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2017-03-01",
        "subscriptionId": "subid",
        "issueId": "57d2ef278aa04f0ad01d6cdc",
        "apiId": "57d1f7558aa04f15146d9d8a",
        "parameters": {
          "properties": {
            "title": "New API issue",
            "description": "New API issue description",
            "createdDate": "2018-02-01T22:21:20.467Z",
            "state": "open",
            "userId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/1"
          }
        }
      },
      "responses": {
        "201": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d1f7558aa04f15146d9d8a/issues/57d2ef278aa04f0ad01d6cdc",
            "type": "Microsoft.ApiManagement/service/apis/issues",
            "name": "57d2ef278aa04f0ad01d6cdc",
            "properties": {
              "title": "New API issue",
              "description": "New API issue description",
              "createdDate": "2018-02-01T22:21:20.467Z",
              "state": "open",
              "userId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/1"
            }
          }
        },
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d1f7558aa04f15146d9d8a/issues/57d2ef278aa04f0ad01d6cdc",
            "type": "Microsoft.ApiManagement/service/apis/issues",
            "name": "57d2ef278aa04f0ad01d6cdc",
            "properties": {
              "title": "New API issue",
              "description": "New API issue description",
              "createdDate": "2018-02-01T22:21:20.467Z",
              "state": "open",
              "userId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/1"
            }
          }
        }
      }
    },
    "ApiManagementDeleteApiIssue": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2017-03-01",
        "subscriptionId": "subid",
        "issueId": "57d2ef278aa04f0ad01d6cdc",
        "apiId": "57d1f7558aa04f15146d9d8a",
        "If-Match": "*"
      },
      "responses": {
        "204": {}
      }
    },
    "ApiManagementListApiIssueComments": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2017-03-01",
        "subscriptionId": "subid",
        "apiId": "57d1f7558aa04f15146d9d8a",
        "issueId": "57d2ef278aa04f0ad01d6cdc"
      },
      "responses": {
        "200": {
          "body": {
            "value": [
              {
                "id": "/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d1f7558aa04f15146d9d8a/issues/57d2ef278aa04f0ad01d6cdc/comments/599e29ab193c3c0bd0b3e2fb",
                "type": "Microsoft.ApiManagement/service/apis/issues/comments",
                "name": "599e29ab193c3c0bd0b3e2fb",
                "properties": {
                  "text": "Issue comment.",
                  "createdDate": "2018-02-01T22:21:20.467Z",
                  "userId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/1"
                }
              }
            ],
            "nextLink": ""
          }
        }
      }
    },
    "ApiManagementHeadApiIssueComment": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2017-03-01",
        "subscriptionId": "subid",
        "apiId": "57d2ef278aa04f0888cba3f3",
        "issueId": "57d2ef278aa04f0ad01d6cdc",
        "commentId": "599e29ab193c3c0bd0b3e2fb"
      },
      "responses": {
        "200": {
          "headers": {
            "etag": "AAAAAAAAAAa="
          }
        }
      }
    },
    "ApiManagementGetApiIssueComment": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2017-03-01",
        "subscriptionId": "subid",
        "apiId": "57d2ef278aa04f0888cba3f3",
        "issueId": "57d2ef278aa04f0ad01d6cdc",
        "commentId": "599e29ab193c3c0bd0b3e2fb"
      },
      "responses": {
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d1f7558aa04f15146d9d8a/issues/57d2ef278aa04f0ad01d6cdc/comments/599e29ab193c3c0bd0b3e2fb",
            "type": "Microsoft.ApiManagement/service/apis/issues/comments",
            "name": "599e29ab193c3c0bd0b3e2fb",
            "properties": {
              "text": "Issue comment.",
              "createdDate": "2018-02-01T22:21:20.467Z",
              "userId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/1"
            }
          }
        }
      }
    },
    "ApiManagementCreateApiIssueComment": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2017-03-01",
        "subscriptionId": "subid",
        "issueId": "57d2ef278aa04f0ad01d6cdc",
        "apiId": "57d1f7558aa04f15146d9d8a",
        "commentId": "599e29ab193c3c0bd0b3e2fb",
        "parameters": {
          "properties": {
            "text": "Issue comment.",
            "createdDate": "2018-02-01T22:21:20.467Z",
            "userId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/1"
          }
        }
      },
      "responses": {
        "201": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d1f7558aa04f15146d9d8a/issues/57d2ef278aa04f0ad01d6cdc/comments/599e29ab193c3c0bd0b3e2fb",
            "type": "Microsoft.ApiManagement/service/apis/issues/comments",
            "name": "599e29ab193c3c0bd0b3e2fb",
            "properties": {
              "text": "Issue comment.",
              "createdDate": "2018-02-01T22:21:20.467Z",
              "userId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/1"
            }
          }
        },
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d1f7558aa04f15146d9d8a/issues/57d2ef278aa04f0ad01d6cdc/comments/599e29ab193c3c0bd0b3e2fb",
            "type": "Microsoft.ApiManagement/service/apis/issues/comments",
            "name": "599e29ab193c3c0bd0b3e2fb",
            "properties": {
              "text": "Issue comment.",
              "createdDate": "2018-02-01T22:21:20.467Z",
              "userId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/users/1"
            }
          }
        }
      }
    },
    "ApiManagementDeleteApiIssueComment": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2017-03-01",
        "subscriptionId": "subid",
        "issueId": "57d2ef278aa04f0ad01d6cdc",
        "apiId": "57d1f7558aa04f15146d9d8a",
        "commentId": "599e29ab193c3c0bd0b3e2fb",
        "If-Match": "*"
      },
      "responses": {
        "204": {}
      }
    },
    "ApiManagementListApiIssueAttachments": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2017-03-01",
        "subscriptionId": "subid",
        "apiId": "57d1f7558aa04f15146d9d8a",
        "issueId": "57d2ef278aa04f0ad01d6cdc"
      },
      "responses": {
        "200": {
          "body": {
            "value": [
              {
                "id": "/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d1f7558aa04f15146d9d8a/issues/57d2ef278aa04f0ad01d6cdc/attachments/57d2ef278aa04f0888cba3f3",
                "type": "Microsoft.ApiManagement/service/apis/issues/attachments",
                "name": "57d2ef278aa04f0888cba3f3",
                "properties": {
                  "title": "Issue attachment.",
                  "contentFormat": "link",
                  "content": "https://.../image.jpg"
                }
              }
            ],
            "nextLink": ""
          }
        }
      }
    },
    "ApiManagementHeadApiIssueAttachment": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2017-03-01",
        "subscriptionId": "subid",
        "apiId": "57d2ef278aa04f0888cba3f3",
        "issueId": "57d2ef278aa04f0ad01d6cdc",
        "attachmentId": "57d2ef278aa04f0888cba3f3"
      },
      "responses": {
        "200": {
          "headers": {
            "etag": "AAAAAAAAAAa="
          }
        }
      }
    },
    "ApiManagementGetApiIssueAttachment": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2017-03-01",
        "subscriptionId": "subid",
        "apiId": "57d2ef278aa04f0888cba3f3",
        "issueId": "57d2ef278aa04f0ad01d6cdc",
        "attachmentId": "57d2ef278aa04f0888cba3f3"
      },
      "responses": {
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d1f7558aa04f15146d9d8a/issues/57d2ef278aa04f0ad01d6cdc/attachments/57d2ef278aa04f0888cba3f3",
            "type": "Microsoft.ApiManagement/service/apis/issues/attachments",
            "name": "57d2ef278aa04f0888cba3f3",
            "properties": {
              "title": "Issue attachment.",
              "contentFormat": "link",
              "content": "https://.../image.jpg"
            }
          }
        }
      }
    },
    "ApiManagementCreateApiIssueAttachment": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2017-03-01",
        "subscriptionId": "subid",
        "issueId": "57d2ef278aa04f0ad01d6cdc",
        "apiId": "57d1f7558aa04f15146d9d8a",
        "attachmentId": "57d2ef278aa04f0888cba3f3",
        "parameters": {
          "properties": {
            "title": "Issue attachment.",
            "contentFormat": "image/jpeg",
            "content": "IEJhc2U2NA=="
          }
        }
      },
      "responses": {
        "201": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d1f7558aa04f15146d9d8a/issues/57d2ef278aa04f0ad01d6cdc/attachments/57d2ef278aa04f0888cba3f3",
            "type": "Microsoft.ApiManagement/service/apis/issues/attachments",
            "name": "57d2ef278aa04f0888cba3f3",
            "properties": {
              "title": "Issue attachment.",
              "contentFormat": "link",
              "content": "https://.../image.jpg"
            }
          }
        },
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/57d1f7558aa04f15146d9d8a/issues/57d2ef278aa04f0ad01d6cdc/attachments/57d2ef278aa04f0888cba3f3",
            "type": "Microsoft.ApiManagement/service/apis/issues/attachments",
            "name": "57d2ef278aa04f0888cba3f3",
            "properties": {
              "title": "Issue attachment.",
              "contentFormat": "link",
              "content": "https://.../image.jpg"
            }
          }
        }
      }
    },
    "ApiManagementDeleteApiIssueAttachment": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2017-03-01",
        "subscriptionId": "subid",
        "issueId": "57d2ef278aa04f0ad01d6cdc",
        "apiId": "57d1f7558aa04f15146d9d8a",
        "attachmentId": "57d2ef278aa04f0888cba3f3",
        "If-Match": "*"
      },
      "responses": {
        "204": {}
      }
    },
    "ApiManagementGetApiExportInOpenApi2dot0": {
      "parameters": {
        "serviceName": "apimService1",
        "resourceGroupName": "rg1",
        "api-version": "2018-01-01",
        "subscriptionId": "subid",
        "apiId": "echo-api",
        "format": "swagger-link",
        "export": "true"
      },
      "responses": {
        "200": {
          "body": {
            "link": "https://apimgmtstaobxxxxxxx.blob.core.windows.net/api-export/Echo API.json?sv=2015-07-08&sr=b&sig=xxxxxxxxxx%3D&se=2017-09-08T21:54:08Z&sp=r"
          }
        }
      }
    }
  },
  "parameters": {
    "ApiIdParameter": {
      "name": "apiId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "API identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "pattern": "(^[\\w]+$)|(^[\\w][\\w\\-]+[\\w]$)",
      "x-ms-parameter-location": "method"
    },
    "ApiIdRevParameter": {
      "name": "apiId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
      "minLength": 1,
      "maxLength": 256,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Operation identifier within an API. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "pattern": "(^[\\w]+$)|(^[\\w][\\w\\-]+[\\w]$)",
      "x-ms-parameter-location": "method"
    },
    "SchemaIdParameter": {
      "name": "schemaId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Schema identifier within an API. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "pattern": "(^[\\w]+$)|(^[\\w][\\w\\-]+[\\w]$)",
      "x-ms-parameter-location": "method"
    },
    "ReleaseIdParameter": {
      "name": "releaseId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Release identifier within an API. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "pattern": "(^[\\w]+$)|(^[\\w][\\w\\-]+[\\w]$)",
      "x-ms-parameter-location": "method"
    },
    "IssueIdParameter": {
      "name": "issueId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Issue identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 256,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "CommentIdParameter": {
      "name": "commentId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Comment identifier within an Issue. Must be unique in the current Issue.",
      "minLength": 1,
      "maxLength": 256,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "AttachmentIdParameter": {
      "name": "attachmentId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Attachment identifier within an Issue. Must be unique in the current Issue.",
      "minLength": 1,
      "maxLength": 256,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    }
  },
  "x-internal-service-name": "API Management",
  "x-internal-toc-name": "Api Schema",
  "x-internal-split-type": "Operation",
  "x-internal-operation-name": "Create Or Update"
}
{
  "swagger": "2.0",
  "info": {
    "title": "NetworkManagementClient",
    "description": "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.",
    "version": "2018-02-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {},
  "definitions": {
    "RouteFilterRulePropertiesFormat": {
      "required": [
        "access",
        "routeFilterRuleType",
        "communities"
      ],
      "properties": {
        "access": {
          "type": "string",
          "description": "The access type of the rule. Valid values are: 'Allow', 'Deny'",
          "enum": [
            "Allow",
            "Deny"
          ],
          "x-ms-enum": {
            "name": "Access",
            "modelAsString": true
          }
        },
        "routeFilterRuleType": {
          "type": "string",
          "description": "The rule type of the rule. Valid value is: 'Community'",
          "enum": [
            "Community"
          ],
          "x-ms-enum": {
            "name": "RouteFilterRuleType",
            "modelAsString": true
          }
        },
        "communities": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'."
        }
      },
      "description": "Route Filter Rule Resource"
    },
    "RouteFilterRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RouteFilterRulePropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Route Filter Rule Resource"
    },
    "PatchRouteFilterRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RouteFilterRulePropertiesFormat"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Route Filter Rule Resource"
    },
    "RouteFilterPropertiesFormat": {
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteFilterRule"
          },
          "description": "Collection of RouteFilterRules contained within a route filter."
        },
        "peerings": {
          "type": "array",
          "items": {
            "$ref": "./expressRouteCircuit.json#/definitions/ExpressRouteCircuitPeering"
          },
          "description": "A collection of references to express route circuit peerings."
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'."
        }
      },
      "description": "Route Filter Resource"
    },
    "RouteFilter": {
      "required": [
        "location"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RouteFilterPropertiesFormat"
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "Gets a unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Route Filter Resource."
    },
    "PatchRouteFilter": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RouteFilterPropertiesFormat"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Route Filter Resource."
    },
    "RouteFilterListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteFilter"
          },
          "description": "Gets a list of route filters in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the ListRouteFilters API service call."
    },
    "RouteFilterRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteFilterRule"
          },
          "description": "Gets a list of RouteFilterRules in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the ListRouteFilterRules API service call"
    },
    "RouteFilterDelete": {
      "parameters": {
        "routeFilterName": "filterName",
        "resourceGroupName": "rg1",
        "api-version": "2018-02-01",
        "subscriptionId": "subid"
      },
      "responses": {
        "200": {},
        "202": {},
        "204": {}
      }
    },
    "RouteFilterGet": {
      "parameters": {
        "routeFilterName": "filterName",
        "resourceGroupName": "rg1",
        "api-version": "2018-02-01",
        "subscriptionId": "subid"
      },
      "responses": {
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName",
            "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
            "location": "West US",
            "name": "filterName",
            "type": "Microsofot.Network/routeFilters",
            "tags": {
              "key1": "value1"
            },
            "properties": {
              "provisioningState": "Succeeded",
              "rules": [
                {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName/routeFilterRules/ruleName",
                  "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                  "name": "ruleName",
                  "properties": {
                    "provisioningState": "Succeeded",
                    "access": "Allow",
                    "routeFilterRuleType": "Community",
                    "communities": [
                      "12076:5030",
                      "12076:5040"
                    ]
                  }
                }
              ],
              "peerings": []
            }
          }
        }
      }
    },
    "RouteFilterCreate": {
      "parameters": {
        "routeFilterName": "filterName",
        "resourceGroupName": "rg1",
        "api-version": "2018-02-01",
        "subscriptionId": "subid",
        "routeFilterParameters": {
          "location": "West US",
          "tags": {
            "key1": "value1"
          },
          "properties": {
            "rules": [
              {
                "name": "ruleName",
                "properties": {
                  "access": "Allow",
                  "routeFilterRuleType": "Community",
                  "communities": [
                    "12076:5030",
                    "12076:5040"
                  ]
                }
              }
            ],
            "peerings": []
          }
        }
      },
      "responses": {
        "201": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName",
            "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
            "location": "West US",
            "name": "filterName",
            "type": "Microsofot.Network/routeFilters",
            "tags": {
              "key1": "value1"
            },
            "properties": {
              "provisioningState": "Succeeded",
              "rules": [
                {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName/routeFilterRules/ruleName",
                  "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                  "name": "ruleName",
                  "properties": {
                    "provisioningState": "Succeeded",
                    "access": "Allow",
                    "routeFilterRuleType": "Community",
                    "communities": [
                      "12076:5030",
                      "12076:5040"
                    ]
                  }
                }
              ],
              "peerings": []
            }
          }
        },
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName",
            "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
            "location": "West US",
            "name": "filterName",
            "type": "Microsofot.Network/routeFilters",
            "tags": {
              "key1": "value1"
            },
            "properties": {
              "provisioningState": "Succeeded",
              "rules": [
                {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName/routeFilterRules/ruleName",
                  "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                  "name": "ruleName",
                  "properties": {
                    "provisioningState": "Succeeded",
                    "access": "Allow",
                    "routeFilterRuleType": "Community",
                    "communities": [
                      "12076:5030",
                      "12076:5040"
                    ]
                  }
                }
              ],
              "peerings": []
            }
          }
        }
      }
    },
    "RouteFilterUpdate": {
      "parameters": {
        "routeFilterName": "filterName",
        "resourceGroupName": "rg1",
        "api-version": "2018-02-01",
        "subscriptionId": "subid",
        "routeFilterParameters": {
          "tags": {
            "key1": "value1"
          },
          "properties": {
            "rules": [
              {
                "name": "ruleName",
                "properties": {
                  "access": "Allow",
                  "routeFilterRuleType": "Community",
                  "communities": [
                    "12076:5030"
                  ]
                }
              }
            ]
          }
        }
      },
      "responses": {
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName",
            "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
            "location": "West US",
            "name": "filterName",
            "type": "Microsofot.Network/routeFilters",
            "tags": {
              "key1": "value1"
            },
            "properties": {
              "provisioningState": "Succeeded",
              "rules": [
                {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName/routeFilterRules/ruleName",
                  "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                  "name": "ruleName",
                  "properties": {
                    "provisioningState": "Succeeded",
                    "access": "Allow",
                    "routeFilterRuleType": "Community",
                    "communities": [
                      "12076:5030"
                    ]
                  }
                }
              ],
              "peerings": []
            }
          }
        }
      }
    },
    "RouteFilterListByResourceGroup": {
      "parameters": {
        "api-version": "2018-02-01",
        "resourceGroupName": "rg1",
        "subscriptionId": "subid"
      },
      "responses": {
        "200": {
          "body": {
            "value": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName",
                "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                "location": "West US",
                "name": "filterName",
                "type": "Microsofot.Network/routeFilters",
                "tags": {
                  "key1": "value1"
                },
                "properties": {
                  "provisioningState": "Succeeded",
                  "rules": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName/routeFilterRules/ruleName",
                      "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                      "name": "ruleName",
                      "properties": {
                        "provisioningState": "Succeeded",
                        "access": "Allow",
                        "routeFilterRuleType": "Community",
                        "communities": [
                          "12076:5030",
                          "12076:5040"
                        ]
                      }
                    }
                  ],
                  "peerings": []
                }
              }
            ]
          }
        }
      }
    },
    "RouteFilterList": {
      "parameters": {
        "api-version": "2018-02-01",
        "subscriptionId": "subid"
      },
      "responses": {
        "200": {
          "body": {
            "value": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName",
                "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                "location": "West US",
                "name": "filterName",
                "type": "Microsofot.Network/routeFilters",
                "tags": {
                  "key1": "value1"
                },
                "properties": {
                  "provisioningState": "Succeeded",
                  "rules": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName/routeFilterRules/ruleName",
                      "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                      "name": "ruleName",
                      "properties": {
                        "provisioningState": "Succeeded",
                        "access": "Allow",
                        "routeFilterRuleType": "Community",
                        "communities": [
                          "12076:5030",
                          "12076:5040"
                        ]
                      }
                    }
                  ],
                  "peerings": []
                }
              }
            ]
          }
        }
      }
    },
    "RouteFilterRuleDelete": {
      "parameters": {
        "routeFilterName": "filterName",
        "ruleName": "ruleName",
        "resourceGroupName": "rg1",
        "api-version": "2018-02-01",
        "subscriptionId": "subid"
      },
      "responses": {
        "200": {},
        "202": {},
        "204": {}
      }
    },
    "RouteFilterRuleGet": {
      "parameters": {
        "ruleName": "filterName",
        "routeFilterName": "filterName",
        "resourceGroupName": "rg1",
        "api-version": "2018-02-01",
        "subscriptionId": "subid"
      },
      "responses": {
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName/routeFilterRules/ruleName",
            "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
            "name": "ruleName",
            "properties": {
              "provisioningState": "Succeeded",
              "access": "Allow",
              "routeFilterRuleType": "Community",
              "communities": [
                "12076:5030",
                "12076:5040"
              ]
            }
          }
        }
      }
    },
    "RouteFilterRuleCreate": {
      "parameters": {
        "routeFilterName": "filterName",
        "ruleName": "ruleName",
        "resourceGroupName": "rg1",
        "api-version": "2018-02-01",
        "subscriptionId": "subid",
        "routeFilterRuleParameters": {
          "properties": {
            "access": "Allow",
            "routeFilterRuleType": "Community",
            "communities": [
              "12076:5030",
              "12076:5040"
            ]
          }
        }
      },
      "responses": {
        "201": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName/routeFilterRules/ruleName",
            "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
            "name": "ruleName",
            "properties": {
              "provisioningState": "Succeeded",
              "access": "Allow",
              "routeFilterRuleType": "Community",
              "communities": [
                "12076:5030",
                "12076:5040"
              ]
            }
          }
        },
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName/routeFilterRules/ruleName",
            "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
            "name": "ruleName",
            "properties": {
              "provisioningState": "Succeeded",
              "access": "Allow",
              "routeFilterRuleType": "Community",
              "communities": [
                "12076:5030",
                "12076:5040"
              ]
            }
          }
        }
      }
    },
    "RouteFilterRuleUpdate": {
      "parameters": {
        "routeFilterName": "filterName",
        "ruleName": "ruleName",
        "resourceGroupName": "rg1",
        "api-version": "2018-02-01",
        "subscriptionId": "subid",
        "routeFilterRuleParameters": {
          "properties": {
            "access": "Allow",
            "routeFilterRuleType": "Community",
            "communities": [
              "12076:5030",
              "12076:5040"
            ]
          }
        }
      },
      "responses": {
        "200": {
          "body": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName/routeFilterRules/ruleName",
            "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
            "name": "ruleName",
            "properties": {
              "provisioningState": "Succeeded",
              "access": "Allow",
              "routeFilterRuleType": "Community",
              "communities": [
                "12076:5030",
                "12076:5040"
              ]
            }
          }
        }
      }
    },
    "RouteFilterRuleListByRouteFilter": {
      "parameters": {
        "api-version": "2018-02-01",
        "resourceGroupName": "rg1",
        "subscriptionId": "subid",
        "routeFilterName": "filterName"
      },
      "responses": {
        "200": {
          "body": {
            "value": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsofot.Network/routeFilters/filterName/routeFilterRules/ruleName",
                "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                "name": "ruleName",
                "properties": {
                  "provisioningState": "Succeeded",
                  "access": "Allow",
                  "routeFilterRuleType": "Community",
                  "communities": [
                    "12076:5030",
                    "12076:5040"
                  ]
                }
              }
            ]
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version."
    }
  },
  "x-internal-service-name": "ExpressRoute",
  "x-internal-toc-name": "Route Filters",
  "x-internal-split-members": [
    {
      "displayName": "Create Or Update",
      "relativePath": "RouteFilters/CreateOrUpdate"
    },
    {
      "displayName": "Delete",
      "relativePath": "RouteFilters/Delete"
    },
    {
      "displayName": "Get",
      "relativePath": "RouteFilters/Get"
    },
    {
      "displayName": "List",
      "relativePath": "RouteFilters/List"
    },
    {
      "displayName": "List By Resource Group",
      "relativePath": "RouteFilters/ListByResourceGroup"
    },
    {
      "displayName": "Update",
      "relativePath": "RouteFilters/Update"
    }
  ],
  "x-internal-split-type": "OperationGroup"
}
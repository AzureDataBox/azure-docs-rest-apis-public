{
  "swagger": "2.0",
  "info": {
    "title": "NetworkManagementClient",
    "description": "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.",
    "version": "2018-02-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "text/json"
  ],
  "produces": [
    "application/json",
    "text/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {},
  "definitions": {
    "AuthorizationPropertiesFormat": {
      "properties": {
        "authorizationKey": {
          "type": "string",
          "description": "The authorization key."
        },
        "authorizationUseStatus": {
          "type": "string",
          "description": "AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.",
          "enum": [
            "Available",
            "InUse"
          ],
          "x-ms-enum": {
            "name": "AuthorizationUseStatus",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      }
    },
    "ExpressRouteCircuitAuthorization": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AuthorizationPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Authorization in an ExpressRouteCircuit resource."
    },
    "AuthorizationListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitAuthorization"
          },
          "description": "The authorizations in an ExpressRoute Circuit."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListAuthorizations API service call retrieves all authorizations that belongs to an ExpressRouteCircuit."
    },
    "ExpressRouteCircuitPeeringConfig": {
      "properties": {
        "advertisedPublicPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The reference of AdvertisedPublicPrefixes."
        },
        "advertisedCommunities": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The communities of bgp peering. Spepcified for microsoft peering"
        },
        "advertisedPublicPrefixesState": {
          "type": "string",
          "description": "AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.",
          "enum": [
            "NotConfigured",
            "Configuring",
            "Configured",
            "ValidationNeeded"
          ],
          "x-ms-enum": {
            "name": "ExpressRouteCircuitPeeringAdvertisedPublicPrefixState",
            "modelAsString": true
          }
        },
        "legacyMode": {
          "type": "integer",
          "format": "int32",
          "description": "The legacy mode of the peering."
        },
        "customerASN": {
          "type": "integer",
          "format": "int32",
          "description": "The CustomerASN of the peering."
        },
        "routingRegistryName": {
          "type": "string",
          "description": "The RoutingRegistryName of the configuration."
        }
      },
      "description": "Specifies the peering configuration."
    },
    "Ipv6ExpressRouteCircuitPeeringConfig": {
      "properties": {
        "primaryPeerAddressPrefix": {
          "type": "string",
          "description": "The primary address prefix."
        },
        "secondaryPeerAddressPrefix": {
          "type": "string",
          "description": "The secondary address prefix."
        },
        "microsoftPeeringConfig": {
          "$ref": "#/definitions/ExpressRouteCircuitPeeringConfig",
          "description": "The Microsoft peering configuration."
        },
        "routeFilter": {
          "$ref": "./routeFilter.json#/definitions/RouteFilter",
          "description": "The reference of the RouteFilter resource."
        },
        "state": {
          "type": "string",
          "description": "The state of peering. Possible values are: 'Disabled' and 'Enabled'",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "ExpressRouteCircuitPeeringState",
            "modelAsString": true
          }
        }
      },
      "description": "Contains IPv6 peering config."
    },
    "ExpressRouteCircuitStats": {
      "properties": {
        "primarybytesIn": {
          "type": "integer",
          "format": "int64",
          "description": "Gets BytesIn of the peering."
        },
        "primarybytesOut": {
          "type": "integer",
          "format": "int64",
          "description": "Gets BytesOut of the peering."
        },
        "secondarybytesIn": {
          "type": "integer",
          "format": "int64",
          "description": "Gets BytesIn of the peering."
        },
        "secondarybytesOut": {
          "type": "integer",
          "format": "int64",
          "description": "Gets BytesOut of the peering."
        }
      },
      "description": "Contains stats associated with the peering."
    },
    "ExpressRouteCircuitPeeringPropertiesFormat": {
      "properties": {
        "peeringType": {
          "$ref": "#/definitions/ExpressRoutePeeringType",
          "description": "The peering type."
        },
        "state": {
          "$ref": "#/definitions/ExpressRoutePeeringState",
          "description": "The peering state."
        },
        "azureASN": {
          "type": "integer",
          "format": "int32",
          "description": "The Azure ASN."
        },
        "peerASN": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "maximum": 4294967295,
          "description": "The peer ASN."
        },
        "primaryPeerAddressPrefix": {
          "type": "string",
          "description": "The primary address prefix."
        },
        "secondaryPeerAddressPrefix": {
          "type": "string",
          "description": "The secondary address prefix."
        },
        "primaryAzurePort": {
          "type": "string",
          "description": "The primary port."
        },
        "secondaryAzurePort": {
          "type": "string",
          "description": "The secondary port."
        },
        "sharedKey": {
          "type": "string",
          "description": "The shared key."
        },
        "vlanId": {
          "type": "integer",
          "format": "int32",
          "description": "The VLAN ID."
        },
        "microsoftPeeringConfig": {
          "$ref": "#/definitions/ExpressRouteCircuitPeeringConfig",
          "description": "The Microsoft peering configuration."
        },
        "stats": {
          "$ref": "#/definitions/ExpressRouteCircuitStats",
          "description": "Gets peering stats."
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        },
        "gatewayManagerEtag": {
          "type": "string",
          "description": "The GatewayManager Etag."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "Gets whether the provider or the customer last modified the peering."
        },
        "routeFilter": {
          "$ref": "./routeFilter.json#/definitions/RouteFilter",
          "description": "The reference of the RouteFilter resource."
        },
        "ipv6PeeringConfig": {
          "$ref": "#/definitions/Ipv6ExpressRouteCircuitPeeringConfig",
          "description": "The IPv6 peering configuration."
        },
        "connections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitConnection"
          },
          "description": "The list of circuit connections associated with Azure Private Peering for this circuit."
        }
      }
    },
    "ExpressRouteCircuitPeering": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExpressRouteCircuitPeeringPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Peering in an ExpressRouteCircuit resource."
    },
    "ExpressRouteCircuitPeeringListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitPeering"
          },
          "description": "The peerings in an express route circuit."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListPeering API service call retrieves all peerings that belong to an ExpressRouteCircuit."
    },
    "ExpressRoutePeeringType": {
      "type": "string",
      "description": "The PeeringType. Possible values are: 'AzurePublicPeering', 'AzurePrivatePeering', and 'MicrosoftPeering'.",
      "enum": [
        "AzurePublicPeering",
        "AzurePrivatePeering",
        "MicrosoftPeering"
      ],
      "x-ms-enum": {
        "name": "ExpressRoutePeeringType",
        "modelAsString": true
      }
    },
    "ExpressRoutePeeringState": {
      "type": "string",
      "description": "The state of peering. Possible values are: 'Disabled' and 'Enabled'",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "ExpressRoutePeeringState",
        "modelAsString": true
      }
    },
    "ExpressRouteCircuitConnectionPropertiesFormat": {
      "properties": {
        "expressRouteCircuitPeering": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection."
        },
        "peerExpressRouteCircuitPeering": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to Express Route Circuit Private Peering Resource of the peered circuit."
        },
        "addressPrefix": {
          "type": "string",
          "description": "/29 IP address space to carve out Customer addresses for tunnels."
        },
        "authorizationKey": {
          "type": "string",
          "description": "The authorization key."
        },
        "circuitConnectionStatus": {
          "type": "string",
          "description": "Express Route Circuit Connection State. Possible values are: 'Connected' and 'Disconnected'.",
          "enum": [
            "Connected",
            "Connecting",
            "Disconnected"
          ],
          "readOnly": true,
          "x-ms-enum": {
            "name": "circuitConnectionStatus",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Provisioning state of the circuit connection resource. Possible values are: 'Succeded', 'Updating', 'Deleting', and 'Failed'."
        }
      }
    },
    "ExpressRouteCircuitConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExpressRouteCircuitConnectionPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Express Route Circuit Connection in an ExpressRouteCircuitPeering resource."
    },
    "ExpressRouteCircuitSku": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU."
        },
        "tier": {
          "type": "string",
          "description": "The tier of the SKU. Possible values are 'Standard' and 'Premium'.",
          "enum": [
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "ExpressRouteCircuitSkuTier",
            "modelAsString": true
          }
        },
        "family": {
          "type": "string",
          "description": "The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.",
          "enum": [
            "UnlimitedData",
            "MeteredData"
          ],
          "x-ms-enum": {
            "name": "ExpressRouteCircuitSkuFamily",
            "modelAsString": true
          }
        }
      },
      "description": "Contains SKU in an ExpressRouteCircuit."
    },
    "ExpressRouteCircuitServiceProviderProperties": {
      "properties": {
        "serviceProviderName": {
          "type": "string",
          "description": "The serviceProviderName."
        },
        "peeringLocation": {
          "type": "string",
          "description": "The peering location."
        },
        "bandwidthInMbps": {
          "type": "integer",
          "format": "int32",
          "description": "The BandwidthInMbps."
        }
      },
      "description": "Contains ServiceProviderProperties in an ExpressRouteCircuit."
    },
    "ExpressRouteCircuitPropertiesFormat": {
      "properties": {
        "allowClassicOperations": {
          "type": "boolean",
          "description": "Allow classic operations"
        },
        "circuitProvisioningState": {
          "type": "string",
          "description": "The CircuitProvisioningState state of the resource."
        },
        "serviceProviderProvisioningState": {
          "type": "string",
          "description": "The ServiceProviderProvisioningState state of the resource. Possible values are 'NotProvisioned', 'Provisioning', 'Provisioned', and 'Deprovisioning'.",
          "enum": [
            "NotProvisioned",
            "Provisioning",
            "Provisioned",
            "Deprovisioning"
          ],
          "x-ms-enum": {
            "name": "ServiceProviderProvisioningState",
            "modelAsString": true
          }
        },
        "authorizations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitAuthorization"
          },
          "description": "The list of authorizations."
        },
        "peerings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitPeering"
          },
          "description": "The list of peerings."
        },
        "serviceKey": {
          "type": "string",
          "description": "The ServiceKey."
        },
        "serviceProviderNotes": {
          "type": "string",
          "description": "The ServiceProviderNotes."
        },
        "serviceProviderProperties": {
          "$ref": "#/definitions/ExpressRouteCircuitServiceProviderProperties",
          "description": "The ServiceProviderProperties."
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        },
        "gatewayManagerEtag": {
          "type": "string",
          "description": "The GatewayManager Etag."
        }
      },
      "description": "Properties of ExpressRouteCircuit."
    },
    "ExpressRouteCircuit": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/ExpressRouteCircuitSku",
          "description": "The SKU."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExpressRouteCircuitPropertiesFormat"
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "Gets a unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "ExpressRouteCircuit resource"
    },
    "ExpressRouteCircuitArpTable": {
      "properties": {
        "age": {
          "type": "integer",
          "format": "int32",
          "description": "Age"
        },
        "interface": {
          "type": "string",
          "description": "Interface"
        },
        "ipAddress": {
          "type": "string",
          "description": "The IP address."
        },
        "macAddress": {
          "type": "string",
          "description": "The MAC address."
        }
      },
      "description": "The ARP table associated with the ExpressRouteCircuit."
    },
    "ExpressRouteCircuitsArpTableListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitArpTable"
          },
          "description": "Gets list of the ARP table."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListArpTable associated with the Express Route Circuits API."
    },
    "ExpressRouteCircuitRoutesTable": {
      "properties": {
        "network": {
          "type": "string",
          "description": "network"
        },
        "nextHop": {
          "type": "string",
          "description": "nextHop"
        },
        "locPrf": {
          "type": "string",
          "description": "locPrf"
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "weight."
        },
        "path": {
          "type": "string",
          "description": "path"
        }
      },
      "description": "The routes table associated with the ExpressRouteCircuit"
    },
    "ExpressRouteCircuitsRoutesTableListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitRoutesTable"
          },
          "description": "The list of routes table."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListRoutesTable associated with the Express Route Circuits API."
    },
    "ExpressRouteCircuitRoutesTableSummary": {
      "properties": {
        "neighbor": {
          "type": "string",
          "description": "Neighbor"
        },
        "v": {
          "type": "integer",
          "format": "int32",
          "description": "BGP version number spoken to the neighbor."
        },
        "as": {
          "type": "integer",
          "format": "int32",
          "description": "Autonomous system number."
        },
        "upDown": {
          "type": "string",
          "description": "The length of time that the BGP session has been in the Established state, or the current status if not in the Established state."
        },
        "statePfxRcd": {
          "type": "string",
          "description": "Current state of the BGP session, and the number of prefixes that have been received from a neighbor or peer group."
        }
      },
      "description": "The routes table associated with the ExpressRouteCircuit."
    },
    "ExpressRouteCircuitsRoutesTableSummaryListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitRoutesTableSummary"
          },
          "description": "A list of the routes table."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListRoutesTable associated with the Express Route Circuits API."
    },
    "ExpressRouteCircuitListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuit"
          },
          "description": "A list of ExpressRouteCircuits in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListExpressRouteCircuit API service call."
    },
    "ExpressRouteServiceProviderBandwidthsOffered": {
      "properties": {
        "offerName": {
          "type": "string",
          "description": "The OfferName."
        },
        "valueInMbps": {
          "type": "integer",
          "format": "int32",
          "description": "The ValueInMbps."
        }
      },
      "description": "Contains bandwidths offered in ExpressRouteServiceProvider resources."
    },
    "ExpressRouteServiceProviderPropertiesFormat": {
      "properties": {
        "peeringLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Get a list of peering locations."
        },
        "bandwidthsOffered": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteServiceProviderBandwidthsOffered"
          },
          "description": "Gets bandwidths offered."
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets the provisioning state of the resource."
        }
      },
      "description": "Properties of ExpressRouteServiceProvider."
    },
    "ExpressRouteServiceProvider": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExpressRouteServiceProviderPropertiesFormat"
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "A ExpressRouteResourceProvider object."
    },
    "ExpressRouteServiceProviderListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteServiceProvider"
          },
          "description": "A list of ExpressRouteResourceProvider resources."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the ListExpressRouteServiceProvider API service call."
    },
    "ExpressRouteCircuitConnectionDelete": {
      "parameters": {
        "circuitName": "ExpressRouteARMCircuitA",
        "peeringName": "AzurePrivatePeering",
        "connectionName": "circuitConnectionUSAUS",
        "resourceGroupName": "rg1",
        "api-version": "2018-02-01",
        "subscriptionId": "subid"
      },
      "responses": {
        "200": {},
        "202": {},
        "204": {}
      }
    },
    "ExpressRouteCircuitConnectionGet": {
      "parameters": {
        "connectionName": "circuitConnectionUSAUS",
        "resourceGroupName": "rg1",
        "api-version": "2018-02-01",
        "subscriptionId": "subid1",
        "circuitName": "ExpressRouteARMCircuitA",
        "peeringName": "AzurePrivatePeering"
      },
      "responses": {
        "200": {
          "body": {
            "id": "/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/ExpressRouteARMCircuitA/peerings/AzurePrivatePeering/connections/circuitConnectionUSAUS",
            "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
            "name": "circuitConnectionUSAUS",
            "properties": {
              "expressRouteCircuitPeering": {
                "id": "/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/dedharcktlocal/peerings/AzurePrivatePeering"
              },
              "peerExpressRouteCircuitPeering": {
                "id": "/subscriptions/subid2/resourceGroups/dedharcktpeer/providers/Microsoft.Network/expressRouteCircuits/dedharcktremote/peerings/AzurePrivatePeering"
              },
              "authorizationKey": "946a1918-b7a2-4917-b43c-8c4cdaee006a",
              "addressPrefix": "10.0.0.0/24",
              "circuitConnectionStatus": "Connected",
              "provisioningState": "Succeeded"
            }
          }
        }
      }
    },
    "ExpressRouteCircuitConnectionCreate": {
      "parameters": {
        "connectionName": "circuitConnectionUSAUS",
        "resourceGroupName": "rg1",
        "api-version": "2018-02-01",
        "subscriptionId": "subid1",
        "circuitName": "ExpressRouteARMCircuitA",
        "peeringName": "AzurePrivatePeering",
        "type": "Microsoft.Network/expressRouteCircuits/peerings/connections",
        "expressRouteCircuitConnectionParameters": {
          "properties": {
            "expressRouteCircuitPeering": {
              "id": "/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/dedharcktlocal/peerings/AzurePrivatePeering"
            },
            "peerExpressRouteCircuitPeering": {
              "id": "/subscriptions/subid2/resourceGroups/dedharcktpeer/providers/Microsoft.Network/expressRouteCircuits/dedharcktremote/peerings/AzurePrivatePeering"
            },
            "authorizationKey": "946a1918-b7a2-4917-b43c-8c4cdaee006a",
            "addressPrefix": "10.0.0.0/29"
          }
        }
      },
      "responses": {
        "201": {
          "body": {
            "id": "/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/ExpressRouteARMCircuitA/peerings/AzurePrivatePeering/connections/circuitConnectionUSAUS",
            "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
            "name": "circuitConnectionUSAUS",
            "properties": {
              "expressRouteCircuitPeering": {
                "id": "/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/dedharcktlocal/peerings/AzurePrivatePeering"
              },
              "peerExpressRouteCircuitPeering": {
                "id": "/subscriptions/subid2/resourceGroups/dedharcktpeer/providers/Microsoft.Network/expressRouteCircuits/dedharcktremote/peerings/AzurePrivatePeering"
              },
              "authorizationKey": "946a1918-b7a2-4917-b43c-8c4cdaee006a",
              "addressPrefix": "10.0.0.0/24",
              "circuitConnectionStatus": "Connected",
              "provisioningState": "Succeeded"
            }
          }
        },
        "200": {
          "body": {
            "id": "/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/ExpressRouteARMCircuitA/peerings/AzurePrivatePeering/connections/circuitConnectionUSAUS",
            "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
            "name": "circuitConnectionUSAUS",
            "properties": {
              "expressRouteCircuitPeering": {
                "id": "/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/dedharcktlocal/peerings/AzurePrivatePeering"
              },
              "peerExpressRouteCircuitPeering": {
                "id": "/subscriptions/subid2/resourceGroups/dedharcktpeer/providers/Microsoft.Network/expressRouteCircuits/dedharcktremote/peerings/AzurePrivatePeering"
              },
              "authorizationKey": "946a1918-b7a2-4917-b43c-8c4cdaee006a",
              "addressPrefix": "10.0.0.0/24",
              "circuitConnectionStatus": "Connected",
              "provisioningState": "Succeeded"
            }
          }
        }
      }
    },
    "ExpressRouteCircuitUpdateTags": {
      "parameters": {
        "api-version": "2018-02-01",
        "subscriptionId": "subid",
        "resourceGroupName": "ertest",
        "circuitName": "er1",
        "parameters": {
          "tags": {
            "tag1": "value1",
            "tag2": "value2"
          }
        }
      },
      "responses": {
        "200": {
          "body": {
            "name": "er1",
            "id": "/subscriptions/subid/resourceGroups/ertest/providers/Microsoft.Network/expressRouteCircuits/er1",
            "type": "Microsoft.Network/expressRouteCircuits",
            "location": "brazilsouth",
            "tags": {
              "tag1": "value1",
              "tag2": "value2"
            },
            "properties": {
              "provisioningState": "Failed",
              "peerings": [],
              "authorizations": [],
              "serviceProviderProperties": {
                "serviceProviderName": "Equinix",
                "peeringLocation": "Silicon Valley",
                "bandwidthInMbps": 1000
              },
              "circuitProvisioningState": "Enabled",
              "allowClassicOperations": false,
              "gatewayManagerEtag": "",
              "serviceKey": "0b392c2e-1e9d-46d7-b5e0-9ce90ca6b60c",
              "serviceProviderProvisioningState": "NotProvisioned"
            },
            "sku": {
              "name": "Standard_MeteredData",
              "tier": "Standard",
              "family": "MeteredData"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version."
    }
  },
  "x-internal-service-name": "ExpressRoute",
  "x-internal-toc-name": "Express Route Circuits",
  "x-internal-split-members": [
    {
      "displayName": "Create Or Update",
      "relativePath": "ExpressRouteCircuits/CreateOrUpdate"
    },
    {
      "displayName": "Delete",
      "relativePath": "ExpressRouteCircuits/Delete"
    },
    {
      "displayName": "Get",
      "relativePath": "ExpressRouteCircuits/Get"
    },
    {
      "displayName": "Get Peering Stats",
      "relativePath": "ExpressRouteCircuits/GetPeeringStats"
    },
    {
      "displayName": "Get Stats",
      "relativePath": "ExpressRouteCircuits/GetStats"
    },
    {
      "displayName": "List",
      "relativePath": "ExpressRouteCircuits/List"
    },
    {
      "displayName": "List All",
      "relativePath": "ExpressRouteCircuits/ListAll"
    },
    {
      "displayName": "List Arp Table",
      "relativePath": "ExpressRouteCircuits/ListArpTable"
    },
    {
      "displayName": "List Routes Table",
      "relativePath": "ExpressRouteCircuits/ListRoutesTable"
    },
    {
      "displayName": "List Routes Table Summary",
      "relativePath": "ExpressRouteCircuits/ListRoutesTableSummary"
    },
    {
      "displayName": "Update Tags",
      "relativePath": "ExpressRouteCircuits/UpdateTags"
    }
  ],
  "x-internal-split-type": "OperationGroup"
}
### YamlMime:RESTOperation
uid: management.azure.com.batchai.jobs.listbyexperiment
name: List By Experiment
service: Batch AI
groupName: Jobs
apiVersion: 2018-05-01
summary: Gets a list of Jobs within the specified Experiment.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/workspaces/{workspaceName}/experiments/{experimentName}/jobs?api-version=2018-05-01
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/workspaces/{workspaceName}/experiments/{experimentName}/jobs?maxresults={maxresults}&api-version=2018-05-01
  isOptional: true
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscriptionID for the Azure user.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: Name of the resource group to which the resource belongs.
  types:
  - uid: string
  pattern: ^[-\w\._]+$
- name: workspaceName
  in: path
  isRequired: true
  description: The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.
  types:
  - uid: string
  pattern: ^[-\w_]+$
- name: experimentName
  in: path
  isRequired: true
  description: The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.
  types:
  - uid: string
  pattern: ^[-\w_]+$
- name: maxresults
  in: query
  description: The maximum number of items to return in the response. A maximum of 1000 files can be returned.
  types:
  - uid: integer
  format: int32
- name: api-version
  in: query
  isRequired: true
  description: Specifies the version of API used for this request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: The operation was successful. The response contains a list of ExperimentJob entities associated with the experiment.
  types:
  - uid: JobListResult
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: CloudError
requestHeader: []
definitions:
- name: JobListResult
  description: Values returned by the List operation.
  kind: object
  properties:
  - name: value
    isReadyOnly: true
    description: The collection of jobs.
    types:
    - uid: Job
      isArray: true
  - name: nextLink
    isReadyOnly: true
    description: The continuation token.
    types:
    - uid: string
- name: CloudError
  description: An error response from the Batch AI service.
  kind: object
  properties:
  - name: error
    isReadyOnly: true
    description: An error response from the Batch AI service.
    types:
    - uid: CloudErrorBody
- name: Job
  description: Contains information about a Job.
  kind: object
  properties:
  - name: properties.priority
    description: "Priority associated with the job.  \nPriority associated with the job."
    types:
    - uid: JobPriority
  - name: properties.cluster
    description: "Specifies the Id of the cluster on which this job will run.  \nRepresents a resource ID. For example, for a subnet, it is the resource URL for the subnet."
    types:
    - uid: ResourceId
  - name: properties.mountVolumes
    description: "Information on mount volumes to be used by the job.  \nThese volumes will be mounted before the job execution and will be unmouted after the job completion. The volumes will be mounted at location specified by $AZ_BATCHAI_JOB_MOUNT_ROOT environment variable."
    types:
    - uid: MountVolumes
  - name: properties.jobOutputDirectoryPathSegment
    isReadyOnly: true
    description: "A segment of job's output directories path created by BatchAI.  \nBatch AI creates job's output directories under an unique path to avoid conflicts between jobs. This value contains a path segment generated by Batch AI to make the path unique and can be used to find the output directory on the node or mounted filesystem."
    types:
    - uid: string
  - name: properties.nodeCount
    description: "Number of compute nodes to run the job on.  \nThe job will be gang scheduled on that many compute nodes"
    types:
    - uid: integer
  - name: properties.containerSettings
    description: "If provided the job will run in the specified container.  \nIf the container was downloaded as part of cluster setup then the same container image will be used. If not provided, the job will run on the VM."
    types:
    - uid: ContainerSettings
  - name: properties.toolType
    description: "The toolkit type of this job.  \nPossible values are: cntk, tensorflow, caffe, caffe2, chainer, pytorch, custom, mpi, horovod."
    types:
    - uid: ToolType
  - name: properties.cntkSettings
    description: "Specifies the settings for CNTK (aka Microsoft Cognitive Toolkit) job.  \nSpecifies the settings for CNTK (aka Microsoft Cognitive Toolkit) job."
    types:
    - uid: CNTKsettings
  - name: properties.pyTorchSettings
    description: "Specifies the settings for pyTorch job.  \nSpecifies the settings for pyTorch job."
    types:
    - uid: PyTorchSettings
  - name: properties.tensorFlowSettings
    description: "Specifies the settings for Tensor Flow job.  \nSpecifies the settings for TensorFlow job."
    types:
    - uid: TensorFlowSettings
  - name: properties.caffeSettings
    description: "Specifies the settings for Caffe job.  \nSpecifies the settings for Caffe job."
    types:
    - uid: CaffeSettings
  - name: properties.chainerSettings
    description: "Specifies the settings for Chainer job.  \nSpecifies the settings for Chainer job."
    types:
    - uid: ChainerSettings
  - name: properties.customToolkitSettings
    description: "Specifies the settings for custom tool kit job.  \nSpecifies the settings for a custom tool kit job."
    types:
    - uid: CustomToolkitSettings
  - name: properties.customMpiSettings
    description: "Specifies the settings for custom MPI job.  \nSpecifies the settings for a custom tool kit job."
    types:
    - uid: CustomMpiSettings
  - name: properties.horovodSettings
    description: "Specifies the settings for Horovod job.  \nSpecifies the settings for Chainer job."
    types:
    - uid: HorovodSettings
  - name: properties.jobPreparation
    description: "Specifies the actions to be performed before tool kit is launched.  \nThe specified actions will run on all the nodes that are part of the job"
    types:
    - uid: JobPreparation
  - name: properties.stdOutErrPathPrefix
    description: The path where the Batch AI service will upload stdout and stderror of the job.
    types:
    - uid: string
  - name: properties.inputDirectories
    description: Specifies the list of input directories for the Job.
    types:
    - uid: InputDirectory
      isArray: true
  - name: properties.outputDirectories
    description: Specifies the list of output directories where the models will be created.
    types:
    - uid: OutputDirectory
      isArray: true
  - name: properties.environmentVariables
    description: "Additional environment variables to set on the job.  \nBatch AI will setup these additional environment variables for the job."
    types:
    - uid: EnvironmentVariable
      isArray: true
  - name: properties.secrets
    description: "Additional environment variables with secret values to set on the job.  \nBatch AI will setup these additional environment variables for the job. Server will never report values of these variables back."
    types:
    - uid: EnvironmentVariableWithSecretValue
      isArray: true
  - name: properties.constraints
    description: Constraints associated with the Job.
    types:
    - uid: Constraints
  - name: properties.creationTime
    isReadyOnly: true
    description: "The job creation time.  \nThe creation time of the job."
    types:
    - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioned state of the Batch AI job
    types:
    - uid: ProvisioningState
  - name: properties.provisioningStateTransitionTime
    isReadyOnly: true
    description: "The time at which the job entered its current provisioning state.  \nThe time at which the job entered its current provisioning state."
    types:
    - uid: string
  - name: properties.executionState
    isReadyOnly: true
    description: "The current state of the job.  \nThe current state of the job. Possible values are: queued - The job is queued and able to run. A job enters this state when it is created, or when it is awaiting a retry after a failed run. running - The job is running on a compute cluster. This includes job-level preparation such as downloading resource files or set up container specified on the job - it does not necessarily mean that the job command line has started executing. terminating - The job is terminated by the user, the terminate operation is in progress. succeeded - The job has completed running succesfully and exited with exit code 0. failed - The job has finished unsuccessfully (failed with a non-zero exit code) and has exhausted its retry limit. A job is also marked as failed if an error occurred launching the job."
    types:
    - uid: ExecutionState
  - name: properties.executionStateTransitionTime
    isReadyOnly: true
    description: "The time at which the job entered its current execution state.  \nThe time at which the job entered its current execution state."
    types:
    - uid: string
  - name: properties.executionInfo
    description: Contains information about the execution of a job in the Azure Batch service.
    types:
    - uid: ExecutionInfo
  - name: id
    isReadyOnly: true
    description: The ID of the resource.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource.
    types:
    - uid: string
- name: CloudErrorBody
  description: An error response from the Batch AI service.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: target
    isReadyOnly: true
    description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: A list of additional details about the error.
    types:
    - uid: CloudErrorBody
      isArray: true
- name: JobPriority
  description: Scheduling priority associated with the job.
  kind: enum
  properties:
  - name: low
    types:
    - uid: string
  - name: normal
    types:
    - uid: string
  - name: high
    types:
    - uid: string
- name: ResourceId
  description: Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
  kind: object
  properties:
  - name: id
    description: The ID of the resource
    types:
    - uid: string
- name: MountVolumes
  description: Details of volumes to mount on the cluster.
  kind: object
  properties:
  - name: azureFileShares
    description: "Azure File Share setup configuration.  \nReferences to Azure File Shares that are to be mounted to the cluster nodes."
    types:
    - uid: AzureFileShareReference
      isArray: true
  - name: azureBlobFileSystems
    description: "Azure Blob FileSystem setup configuration.  \nReferences to Azure Blob FUSE that are to be mounted to the cluster nodes."
    types:
    - uid: AzureBlobFileSystemReference
      isArray: true
  - name: fileServers
    description: References to a list of file servers that are mounted to the cluster node.
    types:
    - uid: FileServerReference
      isArray: true
  - name: unmanagedFileSystems
    description: References to a list of file servers that are mounted to the cluster node.
    types:
    - uid: UnmanagedFileSystemReference
      isArray: true
- name: ContainerSettings
  description: Settings for the container to be downloaded.
  kind: object
  properties:
  - name: imageSourceRegistry
    description: "Registry to download the container from.  \nDetails of the container image such as name, URL and credentials."
    types:
    - uid: ImageSourceRegistry
- name: ToolType
  description: The toolkit type of this job.
  kind: enum
  properties:
  - name: cntk
    types:
    - uid: string
  - name: tensorflow
    types:
    - uid: string
  - name: caffe
    types:
    - uid: string
  - name: caffe2
    types:
    - uid: string
  - name: chainer
    types:
    - uid: string
  - name: horovod
    types:
    - uid: string
  - name: mpi
    types:
    - uid: string
  - name: custom
    types:
    - uid: string
- name: CNTKsettings
  description: Specifies the settings for CNTK (aka Microsoft Cognitive Toolkit) job.
  kind: object
  properties:
  - name: languageType
    description: "Specifies the language type to use for launching CNTK (aka Microsoft Cognitive Toolkit) job.  \nValid values are 'BrainScript' or 'Python'."
    types:
    - uid: string
  - name: configFilePath
    description: "Specifies the path of the config file.  \nThis property can be specified only if the languageType is 'BrainScript'."
    types:
    - uid: string
  - name: pythonScriptFilePath
    description: "The path and file name of the python script to execute the job.  \nThis property can be specified only if the languageType is 'Python'."
    types:
    - uid: string
  - name: pythonInterpreterPath
    description: "The path to python interpreter.  \nThis property can be specified only if the languageType is 'Python'."
    types:
    - uid: string
  - name: commandLineArgs
    description: Command line arguments that needs to be passed to the python script or CNTK.exe.
    types:
    - uid: string
  - name: processCount
    description: "Number of processes parameter that is passed to MPI runtime.  \nThe default value for this property is equal to nodeCount property"
    types:
    - uid: integer
- name: PyTorchSettings
  description: Specifies the settings for pyTorch job.
  kind: object
  properties:
  - name: pythonScriptFilePath
    description: The path and file name of the python script to execute the job.
    types:
    - uid: string
  - name: pythonInterpreterPath
    description: The path to python interpreter.
    types:
    - uid: string
  - name: commandLineArgs
    description: Specifies the command line arguments for the master task.
    types:
    - uid: string
  - name: processCount
    description: "Number of processes to launch for the job execution.  \nThe default value for this property is equal to nodeCount property."
    types:
    - uid: integer
  - name: communicationBackend
    description: "Type of the communication backend for distributed jobs.  \nValid values are 'TCP', 'Gloo' or 'MPI'. Not required for non-distributed jobs."
    types:
    - uid: string
- name: TensorFlowSettings
  description: Specifies the settings for TensorFlow job.
  kind: object
  properties:
  - name: pythonScriptFilePath
    description: The path and file name of the python script to execute the job.
    types:
    - uid: string
  - name: pythonInterpreterPath
    description: The path to python interpreter.
    types:
    - uid: string
  - name: masterCommandLineArgs
    description: Specifies the command line arguments for the master task.
    types:
    - uid: string
  - name: workerCommandLineArgs
    description: "Specifies the command line arguments for the worker task.  \nThis property is optional for single machine training."
    types:
    - uid: string
  - name: parameterServerCommandLineArgs
    description: "Specifies the command line arguments for the parameter server task.  \nThis property is optional for single machine training."
    types:
    - uid: string
  - name: workerCount
    description: "The number of worker tasks.  \nIf specified, the value must be less than or equal to (nodeCount * numberOfGPUs per VM). If not specified, the default value is equal to nodeCount. This property can be specified only for distributed TensorFlow training"
    types:
    - uid: integer
  - name: parameterServerCount
    description: "The number of parmeter server tasks.  \nIf specified, the value must be less than or equal to nodeCount. If not specified, the default value is equal to 1 for distributed TensorFlow training (This property is not applicable for single machine training). This property can be specified only for distributed TensorFlow training."
    types:
    - uid: integer
- name: CaffeSettings
  description: Specifies the settings for Caffe job.
  kind: object
  properties:
  - name: configFilePath
    description: "Specifies the path of the config file.  \nThis property cannot be specified if pythonScriptFilePath is specified."
    types:
    - uid: string
  - name: pythonScriptFilePath
    description: "The path and file name of the python script to execute the job.  \nThis property cannot be specified if configFilePath is specified."
    types:
    - uid: string
  - name: pythonInterpreterPath
    description: "The path to python interpreter.  \nThis property can be specified only if the pythonScriptFilePath is specified."
    types:
    - uid: string
  - name: commandLineArgs
    description: Command line arguments that needs to be passed to the Caffe job.
    types:
    - uid: string
  - name: processCount
    description: "Number of processes parameter that is passed to MPI runtime.  \nThe default value for this property is equal to nodeCount property"
    types:
    - uid: integer
- name: ChainerSettings
  description: Specifies the settings for Chainer job.
  kind: object
  properties:
  - name: pythonScriptFilePath
    description: The path and file name of the python script to execute the job.
    types:
    - uid: string
  - name: pythonInterpreterPath
    description: The path to python interpreter.
    types:
    - uid: string
  - name: commandLineArgs
    description: Command line arguments that needs to be passed to the python script
    types:
    - uid: string
  - name: processCount
    description: "Number of processes parameter that is passed to MPI runtime.  \nThe default value for this property is equal to nodeCount property"
    types:
    - uid: integer
- name: CustomToolkitSettings
  description: Specifies the settings for a custom tool kit job.
  kind: object
  properties:
  - name: commandLine
    description: The command line to execute the custom toolkit Job.
    types:
    - uid: string
- name: CustomMpiSettings
  description: Specifies the settings for a custom tool kit job.
  kind: object
  properties:
  - name: commandLine
    description: The program and program command line parameters to be executed by mpi runtime.
    types:
    - uid: string
  - name: processCount
    description: "Number of processes parameter that is passed to MPI runtime.  \nThe default value for this property is equal to nodeCount property"
    types:
    - uid: integer
- name: HorovodSettings
  description: Specifies the settings for Chainer job.
  kind: object
  properties:
  - name: pythonScriptFilePath
    description: The path and file name of the python script to execute the job.
    types:
    - uid: string
  - name: pythonInterpreterPath
    description: The path to python interpreter.
    types:
    - uid: string
  - name: commandLineArgs
    description: Command line arguments that needs to be passed to the python script
    types:
    - uid: string
  - name: processCount
    description: "Number of processes parameter that is passed to MPI runtime.  \nThe default value for this property is equal to nodeCount property"
    types:
    - uid: integer
- name: JobPreparation
  description: Specifies the settings for job preparation.
  kind: object
  properties:
  - name: commandLine
    description: "The command line to execute.  \nIf containerSettings is specified on the job, this commandLine will be executed in the same container as job. Otherwise it will be executed on the node."
    types:
    - uid: string
- name: InputDirectory
  description: Input directory for the job.
  kind: object
  properties:
  - name: id
    description: "The id for the input directory.  \nThe path of the input directory will be available as a value of an environment variable with AZ_BATCHAI_INPUT_<id> name, where <id> is the value of id attribute."
    types:
    - uid: string
  - name: path
    description: The path to the input directory.
    types:
    - uid: string
- name: OutputDirectory
  description: Output directory for the job.
  kind: object
  properties:
  - name: id
    description: "The name for the output directory.  \nThe path of the output directory will be available as a value of an environment variable with AZ_BATCHAI_OUTPUT_<id> name, where <id> is the value of id attribute."
    types:
    - uid: string
  - name: pathPrefix
    description: "The prefix path where the output directory will be created.  \nNOTE: This is an absolute path to prefix. E.g. $AZ_BATCHAI_MOUNT_ROOT/MyNFS/MyLogs. You can find the full path to the output directory by combining pathPrefix, jobOutputDirectoryPathSegment (reported by get job) and pathSuffix."
    types:
    - uid: string
  - name: pathSuffix
    description: "The suffix path where the output directory will be created.  \nThe suffix path where the output directory will be created. E.g. models. You can find the full path to the output directory by combining pathPrefix, jobOutputDirectoryPathSegment (reported by get job) and pathSuffix."
    types:
    - uid: string
- name: EnvironmentVariable
  description: A collection of environment variables to set.
  kind: object
  properties:
  - name: name
    description: The name of the environment variable.
    types:
    - uid: string
  - name: value
    description: The value of the environment variable.
    types:
    - uid: string
- name: EnvironmentVariableWithSecretValue
  description: A collection of environment variables with secret values to set.
  kind: object
  properties:
  - name: name
    description: The name of the environment variable to store the secret value.
    types:
    - uid: string
  - name: value
    description: The value of the environment variable. This value will never be reported back by Batch AI.
    types:
    - uid: string
  - name: valueSecretReference
    description: "Specifies the location of the Azure KeyVault secret which will be used as the environment variable value.  \nSpecifies KeyVault Store and Secret which contains the value for the environment variable. One of value or valueSecretReference must be provided."
    types:
    - uid: KeyVaultSecretReference
- name: Constraints
  description: Constraints associated with the Job.
  kind: object
  properties:
  - name: maxWallClockTime
    description: "Max time the job can run.  \nDefault Value = 1 week."
    types:
    - uid: string
- name: ProvisioningState
  description: Specifies the provisioning state of the cluster.
  kind: enum
  properties:
  - name: creating
    types:
    - uid: string
  - name: succeeded
    types:
    - uid: string
  - name: failed
    types:
    - uid: string
  - name: deleting
    types:
    - uid: string
- name: ExecutionState
  description: The current state of the job.
  kind: enum
  properties:
  - name: queued
    types:
    - uid: string
  - name: running
    types:
    - uid: string
  - name: terminating
    types:
    - uid: string
  - name: succeeded
    types:
    - uid: string
  - name: failed
    types:
    - uid: string
- name: ExecutionInfo
  description: Contains information about the execution of a job in the Azure Batch service.
  kind: object
  properties:
  - name: startTime
    isReadyOnly: true
    description: "The time at which the job started running.  \n'Running' corresponds to the running state. If the job has been restarted or retried, this is the most recent time at which the job started running. This property is present only for job that are in the running or completed state."
    types:
    - uid: string
  - name: endTime
    isReadyOnly: true
    description: "The time at which the job completed.  \nThis property is only returned if the job is in completed state."
    types:
    - uid: string
  - name: exitCode
    isReadyOnly: true
    description: "The exit code of the job.  \nThis property is only returned if the job is in completed state."
    types:
    - uid: integer
  - name: errors
    isReadyOnly: true
    description: Contains details of various errors encountered by the service during job execution
    types:
    - uid: BatchAIError
      isArray: true
- name: AzureFileShareReference
  description: Details of the Azure File Share to mount on the cluster.
  kind: object
  properties:
  - name: accountName
    description: Name of the storage account.
    types:
    - uid: string
  - name: azureFileUrl
    description: URL to access the Azure File.
    types:
    - uid: string
  - name: credentials
    description: "Information of the Azure File credentials.  \nCredentials to access Azure File Share."
    types:
    - uid: AzureStorageCredentialsInfo
  - name: relativeMountPath
    description: "Specifies the relative path on the compute node where the Azure file share will be mounted.  \nNote that all cluster level file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location and all job level file shares will be mounted under $AZ_BATCHAI_JOB_MOUNT_ROOT."
    types:
    - uid: string
  - name: fileMode
    description: "Specifies the file mode.  \nDefault value is 0777. Valid only if OS is linux."
    types:
    - uid: string
  - name: directoryMode
    description: "Specifies the directory Mode.  \nDefault value is 0777. Valid only if OS is linux."
    types:
    - uid: string
- name: AzureBlobFileSystemReference
  description: Provides required information, for the service to be able to mount Azure Blob Storage container on the cluster nodes.
  kind: object
  properties:
  - name: accountName
    description: Name of the Azure Blob Storage account.
    types:
    - uid: string
  - name: containerName
    description: Name of the Azure Blob Storage container to mount on the cluster.
    types:
    - uid: string
  - name: credentials
    description: "Information of the Azure Blob Storage account credentials.  \nCredentials to access Azure File Share."
    types:
    - uid: AzureStorageCredentialsInfo
  - name: relativeMountPath
    description: "Specifies the relative path on the compute node where the Azure Blob file system will be mounted.  \nNote that all cluster level blob file systems will be mounted under $AZ_BATCHAI_MOUNT_ROOT location and all job level blob file systems will be mounted under $AZ_BATCHAI_JOB_MOUNT_ROOT."
    types:
    - uid: string
  - name: mountOptions
    description: Specifies the various mount options that can be used to configure Blob file system.
    types:
    - uid: string
- name: FileServerReference
  description: Provides required information, for the service to be able to mount Azure FileShare on the cluster nodes.
  kind: object
  properties:
  - name: fileServer
    description: "Reference to the file server resource.  \nRepresents a resource ID. For example, for a subnet, it is the resource URL for the subnet."
    types:
    - uid: ResourceId
  - name: sourceDirectory
    description: "Specifies the source directory in File Server that needs to be mounted.  \nIf this property is not specified, the entire File Server will be mounted."
    types:
    - uid: string
  - name: relativeMountPath
    description: "Specifies the relative path on the compute node where the File Server will be mounted.  \nNote that all cluster level file servers will be mounted under $AZ_BATCHAI_MOUNT_ROOT location and job level file servers will be mouted under $AZ_BATCHAI_JOB_MOUNT_ROOT."
    types:
    - uid: string
  - name: mountOptions
    description: Specifies the mount options for File Server.
    types:
    - uid: string
- name: UnmanagedFileSystemReference
  description: Details of the file system to mount on the compute cluster nodes.
  kind: object
  properties:
  - name: mountCommand
    description: Command used to mount the unmanaged file system.
    types:
    - uid: string
  - name: relativeMountPath
    description: "Specifies the relative path on the compute cluster node where the file system will be mounted.  \nNote that all cluster level unmanaged file system will be mounted under $AZ_BATCHAI_MOUNT_ROOT location and job level unmanaged file system will be mounted under $AZ_BATCHAI_JOB_MOUNT_ROOT."
    types:
    - uid: string
- name: ImageSourceRegistry
  description: Details of the container image such as name, URL and credentials.
  kind: object
  properties:
  - name: serverUrl
    description: URL for image repository.
    types:
    - uid: string
  - name: image
    description: The name of the image in image repository.
    types:
    - uid: string
  - name: credentials
    description: "Information to access the private Docker repository.  \nCredentials to access a container image in a private repository."
    types:
    - uid: PrivateRegistryCredentials
- name: KeyVaultSecretReference
  description: Describes a reference to Key Vault Secret.
  kind: object
  properties:
  - name: sourceVault
    description: "Fully qualified resource Id for the Key Vault.  \nRepresents a resource ID. For example, for a subnet, it is the resource URL for the subnet."
    types:
    - uid: ResourceId
  - name: secretUrl
    description: The URL referencing a secret in a Key Vault.
    types:
    - uid: string
- name: BatchAIError
  description: An error response from the Batch AI service.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
  - name: details
    isReadyOnly: true
    description: A list of additional details about the error.
    types:
    - uid: NameValuePair
      isArray: true
- name: AzureStorageCredentialsInfo
  description: Credentials to access Azure File Share.
  kind: object
  properties:
  - name: accountKey
    description: "Storage account key.  \nOne of accountKey or accountKeySecretReference must be specified."
    types:
    - uid: string
  - name: accountKeySecretReference
    description: "Specifies the location of the storage account key, which is a Key Vault Secret.  \nUsers can store their secrets in Azure KeyVault and pass it to the Batch AI Service to integrate with KeyVault. One of accountKey or accountKeySecretReference must be specified."
    types:
    - uid: KeyVaultSecretReference
- name: PrivateRegistryCredentials
  description: Credentials to access a container image in a private repository.
  kind: object
  properties:
  - name: username
    description: User name to login.
    types:
    - uid: string
  - name: password
    description: "Password to login.  \nOne of password or passwordSecretReference must be specified."
    types:
    - uid: string
  - name: passwordSecretReference
    description: "Specifies the location of the password, which is a Key Vault Secret.  \nUsers can store their secrets in Azure KeyVault and pass it to the Batch AI Service to integrate with KeyVault. One of password or passwordSecretReference must be specified."
    types:
    - uid: KeyVaultSecretReference
- name: NameValuePair
  description: Represents a name-value pair.
  kind: object
  properties:
  - name: name
    description: The name in the name-value pair.
    types:
    - uid: string
  - name: value
    description: The value in the name-value pair.
    types:
    - uid: string
examples:
- name: List jobs in an experiment
  request:
    uri: GET https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspaces/demo_workspace/experiments/demo_experimnet/jobs?api-version=2018-05-01
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspaces/demo_workspace/jobs/demo_job",
            "name": "demo_job",
            "type": "Microsoft.BatchAI/Jobs",
            "properties": {
              "priority": "normal",
              "cluster": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspaces/demo_workspace/clusters/demo_cluster"
              },
              "nodeCount": 1,
              "containerSettings": {
                "imageSourceRegistry": {
                  "image": "ubuntu"
                }
              },
              "toolType": "custom",
              "customToolkitSettings": {
                "commandLine": "echo hi | tee $AZ_BATCHAI_OUTPUT_OUTPUTS/hi.txt"
              },
              "stdOutErrPathPrefix": "$AZ_BATCHAI_MOUNT_ROOT/azfiles",
              "jobOutputDirectoryPathSegment": "00000000-0000-0000-0000-000000000000/demo_resource_group/workspaces/demo_workspace/00000000-0000-0000-0000-000000000000/experiments/demo_experiment/00000000-0000-0000-0000-000000000000/jobs/demo_job/00000000-0000-0000-0000-000000000000",
              "inputDirectories": [
                {
                  "id": "INPUT",
                  "path": "$AZ_BATCHAI_MOUNT_ROOT/azfiles/input"
                }
              ],
              "outputDirectories": [
                {
                  "id": "OUTPUTS",
                  "pathPrefix": "$AZ_BATCHAI_MOUNT_ROOT/azfiles/",
                  "pathSuffix": "files"
                }
              ],
              "constraints": {
                "maxWallClockTime": "P7D"
              },
              "creationTime": "2017-09-27T23:36:52.611Z",
              "provisioningState": "succeeded",
              "provisioningStateTransitionTime": "2017-09-27T23:36:53.701Z",
              "executionState": "running",
              "executionStateTransitionTime": "2017-09-27T23:36:56.395Z",
              "executionInfo": {
                "startTime": "2017-09-27T23:36:54.115Z"
              }
            }
          }
        ]
      }
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account

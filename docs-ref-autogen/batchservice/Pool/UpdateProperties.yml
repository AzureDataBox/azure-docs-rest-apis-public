### YamlMime:RESTOperation
summary: Updates the properties of the specified pool. This fully replaces all the updateable properties of the pool. For example, if the pool has a start task associated with it and if start task is not specified with this request, then the Batch service will remove the existing start task.
service: Batch Service
apiVersion: 2017-09-01.6.0
groupName: Pool
consumes:
- application/json; odata=minimalmetadata
produces:
- application/json
paths:
- content: POST https://batch.core.windows.net/pools/{poolId}/updateproperties?api-version=2017-09-01.6.0
- content: POST https://batch.core.windows.net/pools/{poolId}/updateproperties?timeout={timeout}&api-version=2017-09-01.6.0
  isOptional: true
uriParameters:
- in: path
  isRequired: true
  description: The ID of the pool to update.
  types:
  - uid: string
  name: poolId
- in: query
  description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
  types:
  - uid: integer
  format: int32
  name: timeout
- in: query
  isRequired: true
  description: Client API Version.
  types:
  - uid: string
  name: api-version
responses:
- headers:
  - value: string
    name: client-request-id
  - value: string
    name: request-id
  - value: string
    name: ETag
  - value: string
    name: Last-Modified
  - value: string
    name: DataServiceId
  description: The request to the Batch service was successful.
  name: 204 No Content
- description: The error from the Batch service.
  types:
  - uid: BatchError
  name: Other Status Codes
requestBody:
- parameters:
  - in: body
    description: >-
      A task to run on each compute node as it joins the pool. The task runs when the node is added to the pool or when the node is restarted.

      If this element is present, it overwrites any existing start task. If omitted, any existing start task is removed from the pool.
    types:
    - uid: StartTask
    name: startTask
  - in: body
    isRequired: true
    description: A reference to a certificate to be installed on compute nodes in a pool.
    types:
    - isArray: true
      uid: CertificateReference
    name: certificateReferences
  - in: body
    isRequired: true
    description: A reference to an application package to be deployed to compute nodes.
    types:
    - isArray: true
      uid: ApplicationPackageReference
    name: applicationPackageReferences
  - in: body
    isRequired: true
    description: >-
      A name-value pair associated with a Batch service resource.

      The Batch service does not assign any meaning to this metadata; it is solely for the use of user code.
    types:
    - isArray: true
      uid: MetadataItem
    name: metadata
requestHeader:
- in: header
  description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
  types:
  - uid: string
  format: uuid
  name: client-request-id
- in: header
  description: Whether the server should return the client-request-id in the response.
  types:
  - uid: boolean
  name: return-client-request-id
- in: header
  description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
  types:
  - uid: string
  format: date-time-rfc1123
  name: ocp-date
definitions:
- name: StartTask
  description: A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged.
  kind: object
  properties:
  - description: >-
      The command line of the start task.

      The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
    types:
    - uid: string
    name: commandLine
  - description: >-
      The settings for the container under which the start task runs.

      When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all task environment variables are mapped into the container, and the task command line is executed in the container.
    types:
    - uid: TaskContainerSettings
    name: containerSettings
  - description: A file to be downloaded from Azure blob storage to a compute node.
    types:
    - isArray: true
      uid: ResourceFile
    name: resourceFiles
  - description: An environment variable to be set on a task process.
    types:
    - isArray: true
      uid: EnvironmentSetting
    name: environmentSettings
  - description: >-
      The user identity under which the start task runs.

      If omitted, the task runs as a non-administrative user unique to the task.
    types:
    - uid: UserIdentity
    name: userIdentity
  - description: >-
      The maximum number of times the task may be retried.

      The Batch service retries a task if its exit code is nonzero. Note that this value specifically controls the number of retries. The Batch service will try the task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the task. If the maximum retry count is -1, the Batch service retries the task without limit.
    types:
    - uid: integer
    name: maxTaskRetryCount
  - description: >-
      Whether the Batch service should wait for the start task to complete successfully (that is, to exit with exit code 0) before scheduling any tasks on the compute node.

      If true and the start task fails on a compute node, the Batch service retries the start task up to its maximum retry count (maxTaskRetryCount). If the task has still not completed successfully after all retries, then the Batch service marks the compute node unusable, and will not schedule tasks to it. This condition can be detected via the node state and failure info details. If false, the Batch service will not wait for the start task to complete. In this case, other tasks can start executing on the compute node while the start task is still running; and even if the start task fails, new tasks will continue to be scheduled on the node. The default is false.
    types:
    - uid: boolean
    name: waitForSuccess
- name: CertificateReference
  description: A reference to a certificate to be installed on compute nodes in a pool.
  kind: object
  properties:
  - description: The thumbprint of the certificate.
    types:
    - uid: string
    name: thumbprint
  - description: The algorithm with which the thumbprint is associated. This must be sha1.
    types:
    - uid: string
    name: thumbprintAlgorithm
  - description: >-
      The location of the certificate store on the compute node into which to install the certificate.

      The default value is currentuser. This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.
    types:
    - uid: CertificateStoreLocation
    name: storeLocation
  - description: >-
      The name of the certificate store on the compute node into which to install the certificate.

      This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). Common store names include: My, Root, CA, Trust, Disallowed, TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but any custom store name can also be used. The default value is My.
    types:
    - uid: string
    name: storeName
  - description: >-
      Which user accounts on the compute node should have access to the private data of the certificate.

      You can specify more than one visibility in this collection. The default is all accounts.
    types:
    - isArray: true
      uid: string
    name: visibility
- name: ApplicationPackageReference
  description: A reference to an application package to be deployed to compute nodes.
  kind: object
  properties:
  - description: The ID of the application to deploy.
    types:
    - uid: string
    name: applicationId
  - description: >-
      The version of the application to deploy. If omitted, the default version is deployed.

      If this is omitted on a pool, and no default version is specified for this application, the request fails with the error code InvalidApplicationPackageReferences and HTTP status code 409. If this is omitted on a task, and no default version is specified for this application, the task fails with a pre-processing error.
    types:
    - uid: string
    name: version
- name: MetadataItem
  description: >-
    A name-value pair associated with a Batch service resource.

    The Batch service does not assign any meaning to this metadata; it is solely for the use of user code.
  kind: object
  properties:
  - description: The name of the metadata item.
    types:
    - uid: string
    name: name
  - description: The value of the metadata item.
    types:
    - uid: string
    name: value
- name: BatchError
  description: The error encountered while attempting to add the task.
  kind: object
  properties:
  - description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
    name: code
  - description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: ErrorMessage
    name: message
  - description: An item of additional information included in an Azure Batch error response.
    types:
    - isArray: true
      uid: BatchErrorDetail
    name: values
- name: PoolUpdatePropertiesParameter
  description: The set of changes to be made to a pool.
  kind: object
  properties:
  - description: >-
      A task to run on each compute node as it joins the pool. The task runs when the node is added to the pool or when the node is restarted.

      If this element is present, it overwrites any existing start task. If omitted, any existing start task is removed from the pool.
    types:
    - uid: StartTask
    name: startTask
  - description: A reference to a certificate to be installed on compute nodes in a pool.
    types:
    - isArray: true
      uid: CertificateReference
    name: certificateReferences
  - description: A reference to an application package to be deployed to compute nodes.
    types:
    - isArray: true
      uid: ApplicationPackageReference
    name: applicationPackageReferences
  - description: >-
      A name-value pair associated with a Batch service resource.

      The Batch service does not assign any meaning to this metadata; it is solely for the use of user code.
    types:
    - isArray: true
      uid: MetadataItem
    name: metadata
- name: TaskContainerSettings
  description: The container settings for a task.
  kind: object
  properties:
  - description: >-
      Additional options to the container create command.

      These additional options are supplied as arguments to the "docker create" command, in addition to those controlled by the Batch Service.
    types:
    - uid: string
    name: containerRunOptions
  - description: >-
      The image to use to create the container in which the task will run.

      This is the full image reference, as would be specified to "docker pull". If no tag is provided as part of the image name, the tag ":latest" is used as a default.
    types:
    - uid: string
    name: imageName
  - description: >-
      The private registry which contains the container image.

      This setting can be omitted if was already provided at pool creation.
    types:
    - uid: ContainerRegistry
    name: registry
- name: ResourceFile
  description: A file to be downloaded from Azure blob storage to a compute node.
  kind: object
  properties:
  - description: >-
      The URL of the file within Azure Blob Storage.

      This URL must be readable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob, or set the ACL for the blob or its container to allow public access.
    types:
    - uid: string
    name: blobSource
  - description: The location on the compute node to which to download the file, relative to the task's working directory.
    types:
    - uid: string
    name: filePath
  - description: >-
      The file permission mode attribute in octal format.

      This property applies only to files being downloaded to Linux compute nodes. It will be ignored if it is specified for a resourceFile which will be downloaded to a Windows node. If this property is not specified for a Linux node, then a default value of 0770 is applied to the file.
    types:
    - uid: string
    name: fileMode
- name: EnvironmentSetting
  description: An environment variable to be set on a task process.
  kind: object
  properties:
  - description: The name of the environment variable.
    types:
    - uid: string
    name: name
  - description: The value of the environment variable.
    types:
    - uid: string
    name: value
- name: UserIdentity
  description: >-
    The definition of the user identity under which the task is run.

    Specify either the userName or autoUser property, but not both.
  kind: object
  properties:
  - description: >-
      The name of the user identity under which the task is run.

      The userName and autoUser properties are mutually exclusive; you must specify one but not both.
    types:
    - uid: string
    name: username
  - description: >-
      The auto user under which the task is run.

      The userName and autoUser properties are mutually exclusive; you must specify one but not both.
    types:
    - uid: AutoUserSpecification
    name: autoUser
- name: CertificateStoreLocation
  description: The location of the certificate store on the compute node into which to install the certificate.
  kind: enum
  properties:
  - description: Certificates should be installed to the CurrentUser certificate store.
    types:
    - uid: string
    name: currentuser
  - description: Certificates should be installed to the LocalMachine certificate store.
    types:
    - uid: string
    name: localmachine
- name: ErrorMessage
  description: A message describing the error, intended to be suitable for display in a user interface.
  kind: object
  properties:
  - description: The language code of the error message
    types:
    - uid: string
    name: lang
  - description: The text of the message.
    types:
    - uid: string
    name: value
- name: BatchErrorDetail
  description: A collection of key-value pairs containing additional details about the error.
  kind: object
  properties:
  - description: An identifier specifying the meaning of the Value property.
    types:
    - uid: string
    name: key
  - description: The additional information included with the error response.
    types:
    - uid: string
    name: value
- name: ContainerRegistry
  description: >-
    The private registry which contains the container image.

    This setting can be omitted if was already provided at pool creation.
  kind: object
  properties:
  - description: >-
      The registry URL.

      If omitted, the default is "docker.io".
    types:
    - uid: string
    name: registryServer
  - description: The user name to log into the registry server.
    types:
    - uid: string
    name: username
  - description: The password to log into the registry server.
    types:
    - uid: string
    name: password
- name: AutoUserSpecification
  description: Specifies the parameters for the auto user that runs a task on the Batch service.
  kind: object
  properties:
  - description: >-
      The scope for the auto user

      The default value is task.
    types:
    - uid: AutoUserScope
    name: scope
  - description: >-
      The elevation level of the auto user.

      nonAdmin - The auto user is a standard user without elevated access. admin - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
    types:
    - uid: ElevationLevel
    name: elevationLevel
- name: AutoUserScope
  description: The scope for the auto user
  kind: enum
  properties:
  - description: Specifies that the service should create a new user for the task.
    types:
    - uid: string
    name: task
  - description: Specifies that the task runs as the common auto user account which is created on every node in a pool.
    types:
    - uid: string
    name: pool
- name: ElevationLevel
  description: The elevation level of the auto user.
  kind: enum
  properties:
  - description: The user is a standard user without elevated access.
    types:
    - uid: string
    name: nonadmin
  - description: The user is a user with elevated access and operates with full Administrator permissions.
    types:
    - uid: string
    name: admin
examples:
- request:
    uri: POST https://batch.core.windows.net/pools/poolId/updateproperties?api-version=2017-09-01.6.0
    body: >-
      {
        "startTask": {
          "commandLine": "/bin/bash -c 'echo start task'"
        },
        "certificateReferences": [],
        "applicationPackageReferences": [],
        "metadata": []
      }
    headers:
    - value: 00000000-0000-0000-0000-000000000000
      name: client-request-id
  responses:
  - statusCode: "204"
    body: "\"\""
  name: Pool update
security: []
name: UpdateProperties
uid: batch.core.windows.net.batchservice.pool.updateproperties

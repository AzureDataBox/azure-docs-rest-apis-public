### YamlMime:RESTOperation
summary: Adds a pool to the specified account. When naming pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.
service: Batch Service
apiVersion: 2017-09-01.6.0
groupName: Pool
consumes:
- application/json; odata=minimalmetadata
produces:
- application/json
paths:
- content: POST https://batch.core.windows.net/pools?api-version=2017-09-01.6.0
- content: POST https://batch.core.windows.net/pools?timeout={timeout}&api-version=2017-09-01.6.0
  isOptional: true
uriParameters:
- in: query
  description: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
  types:
  - uid: integer
  format: int32
  name: timeout
- in: query
  isRequired: true
  description: Client API Version.
  types:
  - uid: string
  name: api-version
responses:
- headers:
  - value: string
    name: client-request-id
  - value: string
    name: request-id
  - value: string
    name: ETag
  - value: string
    name: Last-Modified
  - value: string
    name: DataServiceId
  description: The request to the Batch service was successful.
  name: 201 Created
- description: The error from the Batch service.
  types:
  - uid: BatchError
  name: Other Status Codes
requestBody:
- parameters:
  - in: body
    isRequired: true
    description: The ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two pool IDs within an account that differ only by case).
    types:
    - uid: string
    name: id
  - in: body
    description: The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.
    types:
    - uid: string
    name: displayName
  - in: body
    isRequired: true
    description: For information about available sizes of virtual machines for Cloud Services pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/). Batch supports all Cloud Services VM sizes except ExtraSmall, A1V2 and A2V2. For information about available VM sizes for pools using images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/) or Sizes for Virtual Machines (Windows) (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/). Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).
    types:
    - uid: string
    name: vmSize
  - in: body
    description: This property and virtualMachineConfiguration are mutually exclusive and one of the properties must be specified. This property cannot be specified if the Batch account was created with its poolAllocationMode property set to 'UserSubscription'.
    types:
    - uid: CloudServiceConfiguration
    name: cloudServiceConfiguration
  - in: body
    description: This property and cloudServiceConfiguration are mutually exclusive and one of the properties must be specified.
    types:
    - uid: VirtualMachineConfiguration
    name: virtualMachineConfiguration
  - in: body
    description: This timeout applies only to manual scaling; it has no effect when enableAutoScale is set to true. The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).
    types:
    - uid: string
    name: resizeTimeout
  - in: body
    description: This property must not be specified if enableAutoScale is set to true. If enableAutoScale is set to false, then you must set either targetDedicatedNodes, targetLowPriorityNodes, or both.
    types:
    - uid: integer
    name: targetDedicatedNodes
  - in: body
    description: This property must not be specified if enableAutoScale is set to true. If enableAutoScale is set to false, then you must set either targetDedicatedNodes, targetLowPriorityNodes, or both.
    types:
    - uid: integer
    name: targetLowPriorityNodes
  - in: body
    description: If false, at least one of targetDedicateNodes and targetLowPriorityNodes must be specified. If true, the autoScaleFormula property is required and the pool automatically resizes according to the formula. The default value is false.
    types:
    - uid: boolean
    name: enableAutoScale
  - in: body
    description: This property must not be specified if enableAutoScale is set to false. It is required if enableAutoScale is set to true. The formula is checked for validity before the pool is created. If the formula is not valid, the Batch service rejects the request with detailed error information. For more information about specifying this formula, see 'Automatically scale compute nodes in an Azure Batch pool' (https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/).
    types:
    - uid: string
    name: autoScaleFormula
  - in: body
    description: The default value is 15 minutes. The minimum and maximum value are 5 minutes and 168 hours respectively. If you specify a value less than 5 minutes or greater than 168 hours, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).
    types:
    - uid: string
    name: autoScaleEvaluationInterval
  - in: body
    description: Enabling inter-node communication limits the maximum size of the pool due to deployment restrictions on the nodes of the pool. This may result in the pool not reaching its desired size. The default value is false.
    types:
    - uid: boolean
    name: enableInterNodeCommunication
  - in: body
    description: The network configuration for a pool.
    types:
    - uid: NetworkConfiguration
    name: networkConfiguration
  - in: body
    description: The task runs when the node is added to the pool or when the node is restarted.
    types:
    - uid: StartTask
    name: startTask
  - in: body
    description: For Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.
    types:
    - isArray: true
      uid: CertificateReference
    name: certificateReferences
  - in: body
    description: The list of application packages to be installed on each compute node in the pool.
    types:
    - isArray: true
      uid: ApplicationPackageReference
    name: applicationPackageReferences
  - in: body
    description: The list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail.
    types:
    - isArray: true
      uid: string
    name: applicationLicenses
  - in: body
    description: The default value is 1. The maximum value of this setting depends on the size of the compute nodes in the pool (the vmSize setting).
    types:
    - uid: integer
    name: maxTasksPerNode
  - in: body
    description: How tasks are distributed across compute nodes in a pool.
    types:
    - uid: TaskSchedulingPolicy
    name: taskSchedulingPolicy
  - in: body
    description: The list of user accounts to be created on each node in the pool.
    types:
    - isArray: true
      uid: UserAccount
    name: userAccounts
  - in: body
    description: The Batch service does not assign any meaning to metadata; it is solely for the use of user code.
    types:
    - isArray: true
      uid: MetadataItem
    name: metadata
requestHeader:
- in: header
  description: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
  types:
  - uid: string
  format: uuid
  name: client-request-id
- in: header
  description: Whether the server should return the client-request-id in the response.
  types:
  - uid: boolean
  name: return-client-request-id
- in: header
  description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
  types:
  - uid: string
  format: date-time-rfc1123
  name: ocp-date
definitions:
- name: CachingType
  description: 'The default value for caching is none. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.'
  kind: enum
  properties:
  - description: The caching mode for the disk is not enabled.
    types:
    - uid: string
    name: none
  - description: The caching mode for the disk is read only.
    types:
    - uid: string
    name: readonly
  - description: The caching mode for the disk is read and write.
    types:
    - uid: string
    name: readwrite
- name: StorageAccountType
  description: If omitted, the default is "standard_lrs".
  kind: enum
  properties:
  - description: The data disk should use standard locally redundant storage.
    types:
    - uid: string
    name: standard_lrs
  - description: The data disk should use premium locally redundant storage.
    types:
    - uid: string
    name: premium_lrs
- name: ContainerType
  description: The container technology to be used.
  kind: enum
  properties:
  - description: Docker will be used to launch the containers.
    types:
    - uid: string
    name: docker
- name: InboundEndpointProtocol
  description: The protocol of the endpoint.
  kind: enum
  properties:
  - description: Use TCP for the endpoint.
    types:
    - uid: string
    name: tcp
  - description: Use UDP for the endpoint.
    types:
    - uid: string
    name: udp
- name: NetworkSecurityGroupRuleAccess
  description: The action that should be taken for a specified IP address, subnet range or tag.
  kind: enum
  properties:
  - description: Allow access.
    types:
    - uid: string
    name: allow
  - description: Deny access.
    types:
    - uid: string
    name: deny
- name: AutoUserScope
  description: The default value is task.
  kind: enum
  properties:
  - description: Specifies that the service should create a new user for the task.
    types:
    - uid: string
    name: task
  - description: Specifies that the task runs as the common auto user account which is created on every node in a pool.
    types:
    - uid: string
    name: pool
- name: ElevationLevel
  description: nonAdmin - The auto user is a standard user without elevated access. admin - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
  kind: enum
  properties:
  - description: The user is a standard user without elevated access.
    types:
    - uid: string
    name: nonadmin
  - description: The user is a user with elevated access and operates with full Administrator permissions.
    types:
    - uid: string
    name: admin
- name: CertificateStoreLocation
  description: The default value is currentuser. This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.
  kind: enum
  properties:
  - description: Certificates should be installed to the CurrentUser certificate store.
    types:
    - uid: string
    name: currentuser
  - description: Certificates should be installed to the LocalMachine certificate store.
    types:
    - uid: string
    name: localmachine
- name: ComputeNodeFillType
  description: How tasks are distributed across compute nodes in a pool.
  kind: enum
  properties:
  - description: Tasks should be assigned evenly across all nodes in the pool.
    types:
    - uid: string
    name: spread
  - description: As many tasks as possible (maxTasksPerNode) should be assigned to each node in the pool before any tasks are assigned to the next node in the pool.
    types:
    - uid: string
    name: pack
- name: BatchError
  description: An error response received from the Azure Batch service.
  kind: object
  properties:
  - description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
    name: code
  - description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: ErrorMessage
    name: message
  - description: A collection of key-value pairs containing additional details about the error.
    types:
    - isArray: true
      uid: BatchErrorDetail
    name: values
- name: ErrorMessage
  description: A message describing the error, intended to be suitable for display in a user interface.
  kind: object
  properties:
  - description: The language code of the error message
    types:
    - uid: string
    name: lang
  - description: The text of the message.
    types:
    - uid: string
    name: value
- name: BatchErrorDetail
  description: An item of additional information included in an Azure Batch error response.
  kind: object
  properties:
  - description: An identifier specifying the meaning of the Value property.
    types:
    - uid: string
    name: key
  - description: The additional information included with the error response.
    types:
    - uid: string
    name: value
examples:
- request:
    uri: POST https://batch.core.windows.net/pools?api-version=2017-09-01.6.0
    requestBody: '{"id":"poolId","vmSize":"small","cloudServiceConfiguration":{"osFamily":"4"},"resizeTimeout":"PT15M","targetDedicatedNodes":5,"targetLowPriorityNodes":0,"maxTasksPerNode":3,"taskSchedulingPolicy":{"nodeFillType":"spread"},"enableAutoScale":false,"enableInterNodeCommunication":true,"metadata":[{"name":"myproperty","value":"myvalue"}]}'
    headers:
    - value: 00000000-0000-0000-0000-000000000000
      name: client-request-id
  responses:
  - statusCode: "201"
  name: Add a CloudServiceConfiguration pool
- request:
    uri: POST https://batch.core.windows.net/pools?api-version=2017-09-01.6.0
    requestBody: '{"id":"pool2","vmSize":"standard_a1","virtualMachineConfiguration":{"imageReference":{"publisher":"Canonical","offer":"UbuntuServer","sku":"16.04.0-LTS"},"nodeAgentSKUId":"batch.node.ubuntu 16.04"},"resizeTimeout":"PT15M","targetDedicatedNodes":5,"targetLowPriorityNodes":0,"maxTasksPerNode":3,"taskSchedulingPolicy":{"nodeFillType":"spread"},"enableAutoScale":false,"enableInterNodeCommunication":true,"metadata":[{"name":"myproperty","value":"myvalue"}]}'
    headers:
    - value: 00000000-0000-0000-0000-000000000000
      name: client-request-id
  responses:
  - statusCode: "201"
  name: Add a VirtualMachineConfiguration pool
- request:
    uri: POST https://batch.core.windows.net/pools?api-version=2017-09-01.6.0
    requestBody: '{"id":"pool2","vmSize":"standard_a1","virtualMachineConfiguration":{"imageReference":{"publisher":"Canonical","offer":"UbuntuServer","sku":"16.04.0-LTS"},"nodeAgentSKUId":"batch.node.ubuntu 16.04","containerConfiguration":{"type":"docker","containerImageNames":["busybox"]}},"resizeTimeout":"PT15M","targetDedicatedNodes":5,"targetLowPriorityNodes":0,"maxTasksPerNode":3,"taskSchedulingPolicy":{"nodeFillType":"spread"},"enableAutoScale":false}'
    headers:
    - value: 00000000-0000-0000-0000-000000000000
      name: client-request-id
  responses:
  - statusCode: "201"
  name: Add a VirtualMachineConfiguration pool with containers
security: []
name: Add
uid: batch.core.windows.net.batchservice.pool.add

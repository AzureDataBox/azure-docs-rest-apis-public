### YamlMime:RESTOperation
uid: management.azure.com.expressroute.expressroutecircuits.updatetags
name: Update Tags
service: ExpressRoute
groupName: Express Route Circuits
apiVersion: 2017-10-01
summary: Updates an express route circuit tags.
consumes:
- application/json
- text/json
produces:
- application/json
- text/json
paths:
- content: PATCH management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}?api-version=2017-10-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: circuitName
  in: path
  isRequired: true
  description: The name of the circuit.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Update successful. The operation returns the resulting ExpressRouteCircuit resource.
  types:
  - uid: ExpressRouteCircuit
requestBody:
- parameters:
  - name: tags
    in: body
    description: "  \nResource tags."
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
requestHeader: []
definitions:
- name: ExpressRouteCircuit
  description: ExpressRouteCircuit resource
  kind: object
  properties:
  - name: sku
    description: "  \nThe SKU."
    types:
    - uid: ExpressRouteCircuitSku
  - name: etag
    isReadyOnly: true
    description: "  \nGets a unique read-only string that changes whenever the resource is updated."
    types:
    - uid: string
  - name: properties.allowClassicOperations
    description: "  \nAllow classic operations"
    types:
    - uid: boolean
  - name: properties.circuitProvisioningState
    description: "  \nThe CircuitProvisioningState state of the resource."
    types:
    - uid: string
  - name: properties.serviceProviderProvisioningState
    description: "  \nThe ServiceProviderProvisioningState state of the resource. Possible values are 'NotProvisioned', 'Provisioning', 'Provisioned', and 'Deprovisioning'."
    types:
    - uid: ServiceProviderProvisioningState
  - name: properties.authorizations
    description: "  \nAuthorization in an ExpressRouteCircuit resource."
    types:
    - uid: ExpressRouteCircuitAuthorization
      isArray: true
  - name: properties.peerings
    description: "  \nPeering in an ExpressRouteCircuit resource."
    types:
    - uid: ExpressRouteCircuitPeering
      isArray: true
  - name: properties.serviceKey
    description: "  \nThe ServiceKey."
    types:
    - uid: string
  - name: properties.serviceProviderNotes
    description: "  \nThe ServiceProviderNotes."
    types:
    - uid: string
  - name: properties.serviceProviderProperties
    description: "  \nThe ServiceProviderProperties."
    types:
    - uid: ExpressRouteCircuitServiceProviderProperties
  - name: properties.provisioningState
    description: "  \nGets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
    types:
    - uid: string
  - name: properties.gatewayManagerEtag
    description: "  \nThe GatewayManager Etag."
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: "  \nResource ID."
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: "  \nResource name."
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: "  \nResource type."
    types:
    - uid: string
  - name: location
    description: "  \nResource location."
    types:
    - uid: string
  - name: tags
    description: "  \nResource tags."
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: TagsObject
  description: Tags object for patch operations.
  kind: object
  properties:
  - name: tags
    description: "  \nResource tags."
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: ExpressRouteCircuitSku
  description: Contains SKU in an ExpressRouteCircuit.
  kind: object
  properties:
  - name: name
    description: "  \nThe name of the SKU."
    types:
    - uid: string
  - name: tier
    description: "  \nThe tier of the SKU. Possible values are 'Standard' and 'Premium'."
    types:
    - uid: ExpressRouteCircuitSkuTier
  - name: family
    description: "  \nThe family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'."
    types:
    - uid: ExpressRouteCircuitSkuFamily
- name: ServiceProviderProvisioningState
  description: The ServiceProviderProvisioningState state of the resource. Possible values are 'NotProvisioned', 'Provisioning', 'Provisioned', and 'Deprovisioning'.
  kind: enum
  properties:
  - name: NotProvisioned
    types:
    - uid: string
  - name: Provisioning
    types:
    - uid: string
  - name: Provisioned
    types:
    - uid: string
  - name: Deprovisioning
    types:
    - uid: string
- name: ExpressRouteCircuitAuthorization
  description: Authorization in an ExpressRouteCircuit resource.
  kind: object
  properties:
  - name: name
    description: "  \nGets name of the resource that is unique within a resource group. This name can be used to access the resource."
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: "  \nA unique read-only string that changes whenever the resource is updated."
    types:
    - uid: string
  - name: properties.authorizationKey
    description: "  \nThe authorization key."
    types:
    - uid: string
  - name: properties.authorizationUseStatus
    description: "  \nAuthorizationUseStatus. Possible values are: 'Available' and 'InUse'."
    types:
    - uid: AuthorizationUseStatus
  - name: properties.provisioningState
    description: "  \nGets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: "  \nResource ID"
    types:
    - uid: string
- name: ExpressRouteCircuitPeering
  description: Peering in an ExpressRouteCircuit resource.
  kind: object
  properties:
  - name: name
    description: "  \nGets name of the resource that is unique within a resource group. This name can be used to access the resource."
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: "  \nA unique read-only string that changes whenever the resource is updated."
    types:
    - uid: string
  - name: properties.peeringType
    description: "  \nThe PeeringType. Possible values are: 'AzurePublicPeering', 'AzurePrivatePeering', and 'MicrosoftPeering'."
    types:
    - uid: ExpressRouteCircuitPeeringType
  - name: properties.state
    description: "  \nThe state of peering. Possible values are: 'Disabled' and 'Enabled'"
    types:
    - uid: ExpressRouteCircuitPeeringState
  - name: properties.azureASN
    description: "  \nThe Azure ASN."
    types:
    - uid: integer
  - name: properties.peerASN
    description: "  \nThe peer ASN."
    types:
    - uid: integer
  - name: properties.primaryPeerAddressPrefix
    description: "  \nThe primary address prefix."
    types:
    - uid: string
  - name: properties.secondaryPeerAddressPrefix
    description: "  \nThe secondary address prefix."
    types:
    - uid: string
  - name: properties.primaryAzurePort
    description: "  \nThe primary port."
    types:
    - uid: string
  - name: properties.secondaryAzurePort
    description: "  \nThe secondary port."
    types:
    - uid: string
  - name: properties.sharedKey
    description: "  \nThe shared key."
    types:
    - uid: string
  - name: properties.vlanId
    description: "  \nThe VLAN ID."
    types:
    - uid: integer
  - name: properties.microsoftPeeringConfig
    description: "  \nThe Microsoft peering configuration."
    types:
    - uid: ExpressRouteCircuitPeeringConfig
  - name: properties.stats
    description: "  \nGets peering stats."
    types:
    - uid: ExpressRouteCircuitStats
  - name: properties.provisioningState
    description: "  \nGets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
    types:
    - uid: string
  - name: properties.gatewayManagerEtag
    description: "  \nThe GatewayManager Etag."
    types:
    - uid: string
  - name: properties.lastModifiedBy
    description: "  \nGets whether the provider or the customer last modified the peering."
    types:
    - uid: string
  - name: properties.routeFilter
    description: "  \nThe reference of the RouteFilter resource."
    types:
    - uid: SubResource
  - name: properties.ipv6PeeringConfig
    description: "  \nThe IPv6 peering configuration."
    types:
    - uid: Ipv6ExpressRouteCircuitPeeringConfig
  - name: id
    isReadyOnly: true
    description: "  \nResource ID"
    types:
    - uid: string
- name: ExpressRouteCircuitServiceProviderProperties
  description: Contains ServiceProviderProperties in an ExpressRouteCircuit.
  kind: object
  properties:
  - name: serviceProviderName
    description: "  \nThe serviceProviderName."
    types:
    - uid: string
  - name: peeringLocation
    description: "  \nThe peering location."
    types:
    - uid: string
  - name: bandwidthInMbps
    description: "  \nThe BandwidthInMbps."
    types:
    - uid: integer
- name: ExpressRouteCircuitSkuTier
  description: The tier of the SKU. Possible values are 'Standard' and 'Premium'.
  kind: enum
  properties:
  - name: Standard
    types:
    - uid: string
  - name: Premium
    types:
    - uid: string
- name: ExpressRouteCircuitSkuFamily
  description: "The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'."
  kind: enum
  properties:
  - name: UnlimitedData
    types:
    - uid: string
  - name: MeteredData
    types:
    - uid: string
- name: AuthorizationUseStatus
  description: "AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'."
  kind: enum
  properties:
  - name: Available
    types:
    - uid: string
  - name: InUse
    types:
    - uid: string
- name: ExpressRouteCircuitPeeringType
  description: "The PeeringType. Possible values are: 'AzurePublicPeering', 'AzurePrivatePeering', and 'MicrosoftPeering'."
  kind: enum
  properties:
  - name: AzurePublicPeering
    types:
    - uid: string
  - name: AzurePrivatePeering
    types:
    - uid: string
  - name: MicrosoftPeering
    types:
    - uid: string
- name: ExpressRouteCircuitPeeringState
  description: "The state of peering. Possible values are: 'Disabled' and 'Enabled'"
  kind: enum
  properties:
  - name: Disabled
    types:
    - uid: string
  - name: Enabled
    types:
    - uid: string
- name: ExpressRouteCircuitPeeringConfig
  description: Specifies the peering configuration.
  kind: object
  properties:
  - name: advertisedPublicPrefixes
    description: "  "
    types:
    - uid: string
      isArray: true
  - name: advertisedCommunities
    description: "  "
    types:
    - uid: string
      isArray: true
  - name: advertisedPublicPrefixesState
    description: "  \nAdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'."
    types:
    - uid: ExpressRouteCircuitPeeringAdvertisedPublicPrefixState
  - name: legacyMode
    description: "  \nThe legacy mode of the peering."
    types:
    - uid: integer
  - name: customerASN
    description: "  \nThe CustomerASN of the peering."
    types:
    - uid: integer
  - name: routingRegistryName
    description: "  \nThe RoutingRegistryName of the configuration."
    types:
    - uid: string
- name: ExpressRouteCircuitStats
  description: Contains stats associated with the peering.
  kind: object
  properties:
  - name: primarybytesIn
    description: "  \nGets BytesIn of the peering."
    types:
    - uid: integer
  - name: primarybytesOut
    description: "  \nGets BytesOut of the peering."
    types:
    - uid: integer
  - name: secondarybytesIn
    description: "  \nGets BytesIn of the peering."
    types:
    - uid: integer
  - name: secondarybytesOut
    description: "  \nGets BytesOut of the peering."
    types:
    - uid: integer
- name: SubResource
  description: The reference of the RouteFilter resource.
  kind: object
  properties:
  - name: id
    description: "  \nResource ID."
    types:
    - uid: string
- name: Ipv6ExpressRouteCircuitPeeringConfig
  description: Contains IPv6 peering config.
  kind: object
  properties:
  - name: primaryPeerAddressPrefix
    description: "  \nThe primary address prefix."
    types:
    - uid: string
  - name: secondaryPeerAddressPrefix
    description: "  \nThe secondary address prefix."
    types:
    - uid: string
  - name: microsoftPeeringConfig
    description: "  \nThe Microsoft peering configuration."
    types:
    - uid: ExpressRouteCircuitPeeringConfig
  - name: routeFilter
    description: "  \nThe reference of the RouteFilter resource."
    types:
    - uid: SubResource
  - name: state
    description: "  \nThe state of peering. Possible values are: 'Disabled' and 'Enabled'"
    types:
    - uid: ExpressRouteCircuitPeeringState
- name: ExpressRouteCircuitPeeringAdvertisedPublicPrefixState
  description: AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
  kind: enum
  properties:
  - name: NotConfigured
    types:
    - uid: string
  - name: Configuring
    types:
    - uid: string
  - name: Configured
    types:
    - uid: string
  - name: ValidationNeeded
    types:
    - uid: string
examples:
- name: Update Express Route Circuit Tags
  request:
    uri: PATCH management.azure.com/subscriptions/subid/resourceGroups/ertest/providers/Microsoft.Network/expressRouteCircuits/er1?api-version=2017-10-01
    body: >-
      {
        "tags": {
          "tag1": "value1",
          "tag2": "value2"
        }
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "er1",
        "id": "/subscriptions/subid/resourceGroups/ertest/providers/Microsoft.Network/expressRouteCircuits/er1",
        "type": "Microsoft.Network/expressRouteCircuits",
        "location": "brazilsouth",
        "tags": {
          "tag1": "value1",
          "tag2": "value2"
        },
        "properties": {
          "provisioningState": "Failed",
          "peerings": [],
          "authorizations": [],
          "serviceProviderProperties": {
            "serviceProviderName": "Equinix",
            "peeringLocation": "Silicon Valley",
            "bandwidthInMbps": 1000
          },
          "circuitProvisioningState": "Enabled",
          "allowClassicOperations": false,
          "gatewayManagerEtag": "",
          "serviceKey": "0b392c2e-1e9d-46d7-b5e0-9ce90ca6b60c",
          "serviceProviderProvisioningState": "NotProvisioned"
        },
        "sku": {
          "name": "Standard_MeteredData",
          "tier": "Standard",
          "family": "MeteredData"
        }
      }
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account

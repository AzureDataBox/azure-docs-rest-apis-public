### YamlMime:RESTOperation
uid: management.azure.com.recoveryservices-backup.recoverypoints.list
name: List
service: Recovery Services - Backup
groupName: Recovery Points
apiVersion: 2016-06-01
summary: Lists the recovery points, or backup copies, for the specified backup item.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPoints?api-version=2016-06-01
- content: GET https://management.azure.com/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPoints?api-version=2016-06-01&$filter={$filter}
  isOptional: true
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription ID.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group associated with the Recovery Services vault.
  types:
  - uid: string
- name: vaultName
  in: path
  isRequired: true
  description: The name of the Recovery Services vault.
  types:
  - uid: string
- name: fabricName
  in: path
  isRequired: true
  description: The fabric name associated with the backup item.
  types:
  - uid: string
- name: containerName
  in: path
  isRequired: true
  description: The container name associated with the backup item.
  types:
  - uid: string
- name: protectedItemName
  in: path
  isRequired: true
  description: The name of backup item used in this GET operation.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
- name: $filter
  in: query
  description: startDate eq {yyyy-mm-dd hh:mm:ss PM} and endDate { yyyy-mm-dd hh:mm:ss PM}.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK.
  types:
  - uid: RecoveryPointResourceList
requestHeader: []
definitions:
- name: RecoveryPointResourceList
  description: The list of RecoveryPoint resources.
  kind: object
  properties:
  - name: value
    description: The base class for backup copies. Workload-specific backup copies are derived from this class.
    types:
    - uid: RecoveryPointResource
      isArray: true
  - name: nextLink
    description: The URI to GET the next page of resources. Call ListNext() gets the next page of resources.
    types:
    - uid: string
- name: RecoveryPointResource
  description: The base class for backup copies. Workload-specific backup copies are derived from this class.
  kind: object
  properties:
  - name: properties
    description: The base class for backup copies. Workload-specific backup copies are derived from this class.
    types:
    - uid: IaasVMRecoveryPoint
    - uid: GenericRecoveryPoint
    typesTitle: RecoveryPoint
  - name: id
    description: Resource ID represents the complete path to the resource.
    types:
    - uid: string
  - name: name
    description: Resource name associated with the resource.
    types:
    - uid: string
  - name: type
    description: Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
    types:
    - uid: string
  - name: location
    description: Resource location.
    types:
    - uid: string
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: eTag
    description: Optional ETag.
    types:
    - uid: string
- name: IaasVMRecoveryPoint
  description: Azure VM (also known as IaaS VM) workload-specific backup copy.
  kind: object
  properties:
  - name: recoveryPointType
    description: Type of the backup copy.
    types:
    - uid: string
  - name: recoveryPointTime
    description: The date and time when the backup copy was created.
    types:
    - uid: string
  - name: recoveryPointAdditionalInfo
    description: Additional information associated with this backup copy.
    types:
    - uid: string
  - name: sourceVMStorageType
    description: The storage type for the VM whose backup copy was created.
    types:
    - uid: string
  - name: isSourceVMEncrypted
    description: Identifies whether the VM was encrypted when the backup copy is created.
    types:
    - uid: boolean
  - name: keyAndSecret
    description: Required details for recovering an encrypted VM. Applicable only when IsSourceVMEncrypted is true.
    types:
    - uid: KeyAndSecretDetails
  - name: isInstantILRSessionActive
    description: Answer to the question - Is the session to recover items from this backup copy still active.
    types:
    - uid: boolean
  - name: objectType
    description: This property is used as the discriminator for deciding the specific types in the polymorhpic chain of types.
    types:
    - uid: IaasVMRecoveryPoint
    typesTitle: string
- name: GenericRecoveryPoint
  description: Generic backup copy.
  kind: object
  properties:
  - name: friendlyName
    description: Friendly name of the backup copy.
    types:
    - uid: string
  - name: recoveryPointType
    description: Type of the backup copy.
    types:
    - uid: string
  - name: recoveryPointTime
    description: The time when this backup copy was created.
    types:
    - uid: string
  - name: recoveryPointAdditionalInfo
    description: Additional information associated with this backup copy.
    types:
    - uid: string
  - name: objectType
    description: This property is used as the discriminator for deciding the specific types in the polymorhpic chain of types.
    types:
    - uid: GenericRecoveryPoint
    typesTitle: string
- name: KeyAndSecretDetails
  description: >-
    BEK stands for Bitlocker Encryption Key.

     KEK stands for Key Encryption Key. KEK is the encryption key used to protect the Secret for the BEK

      If the VM is encrypted, then the service stores the following details :

      1. Secret(BEK) - Url + Backup Data + vaultID.

                2. Key(KEK) - Url + Backup Data + vaultID.

       It is possible for the BEK and KEK to have different vaultIDs.
  kind: object
  properties:
  - name: kekDetails
    description: The Key Encryption Key (KEK) is the encryption key for the Bitlocker Encryption Key (BEK).
    types:
    - uid: KEKDetails
  - name: bekDetails
    description: BEK is Bitlocker Encrpytion Key.
    types:
    - uid: BEKDetails
- name: KEKDetails
  description: The Key Encryption Key (KEK) is the encryption key for the Bitlocker Encryption Key (BEK).
  kind: object
  properties:
  - name: keyUrl
    description: Key refers to the Key Encryption Key (KEK). The KEK is the Key to unlock the Secret.
    types:
    - uid: string
  - name: keyVaultId
    description: Key Vault ID identifies where the KEK is stored.
    types:
    - uid: string
  - name: keyBackupData
    description: Key Backup Data refers to Key Encryption Key (KEK) data.
    types:
    - uid: string
- name: BEKDetails
  description: BEK is Bitlocker Encrpytion Key.
  kind: object
  properties:
  - name: secretUrl
    description: Secret refers to Bitlocker Encryption Key (BEK). The Secret can be unlocked by the key (or KEK).
    types:
    - uid: string
  - name: secretVaultId
    description: ID of the Key Vault where this Secret is stored.
    types:
    - uid: string
  - name: secretData
    description: Bitlocker Encryption Key (BEK) data.
    types:
    - uid: string
examples: []
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account.

{
  "swagger": "2.0",
  "info": {
    "version": "2016-09-01",
    "title": "ManagementLinkClient",
    "description": "Azure resources can be linked together to form logical relationships. You can establish links between resources belonging to different resource groups. However, all the linked resources must belong to the same subscription. Each resource can be linked to 50 other resources. If any of the linked resources are deleted or moved, the link owner must clean up the remaining link."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/{linkId}": {
      "get": {
        "tags": [
          "ResourceLinks"
        ],
        "operationId": "ResourceLinks_Get",
        "description": "Gets a resource link with the specified ID.",
        "parameters": [
          {
            "name": "linkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Id of the resource link. For example, /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the resource link.",
            "schema": {
              "$ref": "#/definitions/ResourceLink"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "Get"
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/links": {
      "get": {
        "tags": [
          "ResourceLinks"
        ],
        "operationId": "ResourceLinks_ListAtSubscription",
        "description": "Gets all the linked resources for the subscription.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the list resource links operation. The supported filter for list resource links is targetid. For example, $filter=targetid eq {value}"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of resource links for the subscription.",
            "schema": {
              "$ref": "#/definitions/ResourceLinkResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/ResourceLinkFilter",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-internal-toc-name": "List At Subscription"
      }
    },
    "/{scope}/providers/Microsoft.Resources/links": {
      "get": {
        "tags": [
          "ResourceLinks"
        ],
        "operationId": "ResourceLinks_ListAtSourceScope",
        "description": "Gets a list of resource links at and below the specified source scope.",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified ID of the scope for getting the resource links. For example, to list resource links at and under a resource group, set the scope to /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "enum": [
              "atScope()"
            ],
            "x-ms-enum": {
              "name": "Filter",
              "modelAsString": false
            },
            "type": "string",
            "description": "The filter to apply when getting resource links. To get links only at the specified scope (not below the scope), use Filter.atScope()."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of links at the specified scope.",
            "schema": {
              "$ref": "#/definitions/ResourceLinkResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/ResourceLinkFilter",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    }
  },
  "definitions": {
    "ResourceLinkFilter": {
      "properties": {
        "targetId": {
          "type": "string",
          "description": "The ID of the target resource."
        }
      },
      "required": [
        "targetId"
      ],
      "description": "Resource link filter."
    },
    "ResourceLinkResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceLink"
          },
          "description": "An array of resource links."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "required": [
        "value"
      ],
      "description": "List of resource links."
    },
    "ResourceLink": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The fully qualified ID of the resource link."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource link."
        },
        "properties": {
          "$ref": "#/definitions/ResourceLinkProperties",
          "description": "Properties for resource link."
        }
      },
      "description": "The resource link."
    },
    "ResourceLinkProperties": {
      "properties": {
        "sourceId": {
          "readOnly": true,
          "type": "string",
          "description": "The fully qualified ID of the source resource in the link. "
        },
        "targetId": {
          "type": "string",
          "description": "The fully qualified ID of the target resource in the link."
        },
        "notes": {
          "type": "string",
          "description": "Notes about the resource link."
        }
      },
      "required": [
        "targetId"
      ],
      "description": "The resource link properties."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of the target subscription."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to use for the operation."
    }
  },
  "x-internal-toc-name": "Resource Links"
}
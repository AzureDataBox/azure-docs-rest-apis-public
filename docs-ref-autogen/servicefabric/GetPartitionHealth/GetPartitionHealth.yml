### YamlMime:RESTOperation
summary: >
  Gets the health of the specified Service Fabric partition. Gets the health information of the specified partition.

  Use EventsHealthStateFilter to filter the collection of health events reported on the service based on the health state.

  Use ReplicasHealthStateFilter to filter the collection of ReplicaHealthState objects on the partition.

  If you specify a partition that does not exist in the health store, this cmdlet returns an error.
service: Service Fabric
apiVersion: 6.0.0.1
groupName: Get Partition Health
produces:
- application/json
paths:
- content: GET http://localhost:19080/Partitions/{partitionId}/$/GetHealth?api-version=6.0.0.1
- content: GET http://localhost:19080/Partitions/{partitionId}/$/GetHealth?api-version=6.0.0.1&EventsHealthStateFilter={EventsHealthStateFilter}&ReplicasHealthStateFilter={ReplicasHealthStateFilter}&ExcludeHealthStatistics={ExcludeHealthStatistics}&timeout={timeout}
  isOptional: true
uriParameters:
- in: path
  isRequired: true
  description: The identity of the partition.
  types:
  - uid: string
  format: uuid
  name: partitionId
- in: query
  isRequired: true
  description: The version of the API. This is a required parameter and it's value must be "6.0".
  types:
  - uid: string
  name: api-version
- in: query
  description: >
    Allows filtering the collection of HealthEvent objects returned based on health state.

    The possible values for this parameter include integer value of one of the following health states.

    Only events that match the filter are returned. All events are used to evaluate the aggregated health state.

    If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) are returned.


    - Default - Default value. Matches any HealthState. The value is zero.

    - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.

    - Ok - Filter that matches input with HealthState value Ok. The value is 2.

    - Warning - Filter that matches input with HealthState value Warning. The value is 4.

    - Error - Filter that matches input with HealthState value Error. The value is 8.

    - All - Filter that matches input with any HealthState value. The value is 65535.
  types:
  - uid: integer
  name: EventsHealthStateFilter
- in: query
  description: >
    Allows filtering the collection of ReplicaHealthState objects on the partition. The value can be obtained from members or bitwise operations on members of HealthStateFilter. Only replicas that match the filter will be returned. All replicas will be used to evaluate the aggregated health state. If not specified, all entries will be returned.The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) will be returned. The possible values for this parameter include integer value of one of the following health states.


    - Default - Default value. Matches any HealthState. The value is zero.

    - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.

    - Ok - Filter that matches input with HealthState value Ok. The value is 2.

    - Warning - Filter that matches input with HealthState value Warning. The value is 4.

    - Error - Filter that matches input with HealthState value Error. The value is 8.

    - All - Filter that matches input with any HealthState value. The value is 65535.
  types:
  - uid: integer
  name: ReplicasHealthStateFilter
- in: query
  description: >
    Indicates whether the health statistics should be returned as part of the query result. False by default.

    The statistics show the number of children entities in health state Ok, Warning, and Error.
  types:
  - uid: boolean
  name: ExcludeHealthStatistics
- in: query
  description: The server timeout for performing the operation in seconds. This specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
  types:
  - uid: integer
  format: int64
  name: timeout
responses:
- description: A successful operation will return 200 status code and the health information about the specified partition.
  types:
  - uid: PartitionHealth
  name: 200 OK
- description: The detailed error response.
  types:
  - uid: FabricError
  name: Other Status Codes
requestHeader: []
definitions:
- name: PartitionHealth
  description: Information about the health of a Service Fabric partition.
  kind: object
  properties:
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: The list of health events reported on the entity.
    types:
    - uid: HealthEvent
    name: HealthEvents
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
  - description: >
      The health statistics of an entity, returned as part of the health query result when the query description is configured to include statistics.

      The statistics include health state counts for all children types of the current entity.

      For example, for cluster, the health statistics include health state counts for nodes, applications, services, partitions, replicas, deployed applications and deployed service packages.

      For partition, the health statistics include health counts for replicas.
    types:
    - uid: HealthStatistics
    name: HealthStatistics
  - description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition id is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the ids of its partitions would be different.
    types:
    - uid: string
    name: PartitionId
  - description: The list of replica health states associated with the partition.
    types:
    - isArray: true
      uid: Int64RangePartitionInformation
    - isArray: true
      uid: NamedPartitionInformation
    - isArray: true
      uid: EnsureAvailabilitySafetyCheck
    - isArray: true
      uid: EnsurePartitionQurumSafetyCheck
    - isArray: true
      uid: SeedNodeSafetyCheck
    - isArray: true
      uid: ServicePlacementNonPartiallyPlaceServicePolicyDescription
    - isArray: true
      uid: SingletonPartitionInformation
    - isArray: true
      uid: StatefulServicePartitionInfo
    - isArray: true
      uid: StatefulServiceTypeDescription
    - isArray: true
      uid: StatelessServiceInfo
    - isArray: true
      uid: StatelessServicePartitionInfo
    - isArray: true
      uid: StatelessServiceTypeDescription
    - isArray: true
      uid: WaitForInbuildReplicaSafetyCheck
    - isArray: true
      uid: WaitForPrimaryPlacementSafetyCheck
    - isArray: true
      uid: WaitForPrimarySwapSafetyCheck
    - isArray: true
      uid: WaitForReconfigurationSafetyCheck
    - isArray: true
      uid: NamedPartitionSchemeDescription
    - isArray: true
      uid: SingletonPartitionSchemeDescription
    - isArray: true
      uid: UniformInt64RangePartitionSchemeDescription
    - isArray: true
      uid: StatefulServiceDescription
    - isArray: true
      uid: StatelessServiceDescription
    - isArray: true
      uid: SecondaryActiveReplicatorStatus
    - isArray: true
      uid: SecondaryIdleReplicatorStatus
    - isArray: true
      uid: StatefulServiceUpdateDescription
    - isArray: true
      uid: StatelessServiceUpdateDescription
    - isArray: true
      uid: BinaryPropertyValue
    - isArray: true
      uid: Int64PropertyValue
    - isArray: true
      uid: DoublePropertyValue
    - isArray: true
      uid: StringPropertyValue
    - isArray: true
      uid: GuidPropertyValue
    - isArray: true
      uid: CheckExistsPropertyBatchOperation
    - isArray: true
      uid: CheckSequencePropertyBatchOperation
    - isArray: true
      uid: CheckValuePropertyBatchOperation
    - isArray: true
      uid: DeletePropertyBatchOperation
    - isArray: true
      uid: GetPropertyBatchOperation
    - isArray: true
      uid: PutPropertyBatchOperation
    - isArray: true
      uid: SuccessfulPropertyBatchInfo
    - isArray: true
      uid: FailedPropertyBatchInfo
    typesTitle: object[]
    name: ReplicaHealthStates
- name: FabricError
  description: >
    The REST API operations for Service Fabric return standard HTTP status codes. This type defines the additional information returned from the Service Fabric API operations that are not successful.
  kind: object
  properties:
  - description: Error object containing error code and error message.
    types:
    - uid: FabricError_Error
    name: Error
- name: HealthState
  description: >
    The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

      - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
      - Ok - Indicates the health state is okay. The value is 1.
      - Warning - Indicates the health state is at a warning level. The value is 2.
      - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
      - Unknown - Indicates an unknown health status. The value is 65535.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: Ok
  - types:
    - uid: string
    name: Warning
  - types:
    - uid: string
    name: Error
  - types:
    - uid: string
    name: Unknown
- name: HealthEvent
  description: The list of health events reported on the entity.
  kind: object
  properties:
  - description: >
      The source name which identifies the client/watchdog/system component which generated the health information.
    types:
    - uid: string
    name: SourceId
  - description: >
      The property of the health information. An entity can have health reports for different properties.

      The property is a string and not a fixed enumeration to allow the reporter flexibility to categorize the state condition that triggers the report.

      For example, a reporter with SourceId "LocalWatchdog" can monitor the state of the available disk on a node,

      so it can report "AvailableDisk" property on that node.

      The same reporter can monitor the node connectivity, so it can report a property "Connectivity" on the same node.

      In the health store, these reports are treated as separate health events for the specified node.


      Together with the SourceId, the property uniquely identifies the health information.
    types:
    - uid: string
    name: Property
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: HealthState
  - description: >
      The duration for which this health report is valid. This field is using ISO8601 format for specifying the duration.

      When clients report periodically, they should send reports with higher frequency than time to live.

      If clients report on transition, they can set the time to live to infinite.

      When time to live expires, the health event that contains the health information

      is either removed from health store, if RemoveWhenExpired is true, or evaluated at error, if RemoveWhenExpired false.


      If not specified, time to live defaults to infinite value.
    types:
    - uid: string
    name: TimeToLiveInMilliSeconds
  - description: >
      The description of the health information. It represents free text used to add human readable information about the report.

      The maximum string length for the description is 4096 characters.

      If the provided string is longer, it will be automatically truncated.

      When truncated, the last characters of the description contain a marker "[Truncated]", and total string size is 4096 characters.

      The presence of the marker indicates to users that truncation occurred.

      Note that when truncated, the description has less than 4096 characters from the original string.
    types:
    - uid: string
    name: Description
  - description: >
      The sequence number for this health report as a numeric string.

      The report sequence number is used by the health store to detect stale reports.

      If not specified, a sequence number is auto-generated by the health client when a report is added.
    types:
    - uid: string
    name: SequenceNumber
  - description: >
      Value that indicates whether the report is removed from health store when it expires.

      If set to true, the report is remopved from the health store after it expires.

      If set to false, the report is treated as an error when expired. The value of this property is false by default.

      When clients report periodically, they should set RemoveWhenExpired false (default).

      This way, is the reporter has issues (eg. deadlock) and can't report, the entity is evaluated at error when the health report expires.

      This flags the entity as being in Error health state.
    types:
    - uid: boolean
    name: RemoveWhenExpired
  - description: Returns true if the health event is expired, otherwise false.
    types:
    - uid: boolean
    name: IsExpired
  - description: The date and time when the health report was sent by the source.
    types:
    - uid: string
    name: SourceUtcTimestamp
  - description: The date and time when the health report was last modified by the health store.
    types:
    - uid: string
    name: LastModifiedUtcTimestamp
  - description: >
      If the current health state is 'Ok', this property returns the time at which the health report was first reported with 'Ok'.

      For periodic reporting, many reports with the same state may have been generated.

      This property returns the date and time when the first 'Ok' health report was received.


      If the current health state is 'Error' or 'Warning', returns the date and time at which the health state was last in 'Ok', before transitioning to a different state.


      If the health state was never 'Ok', the value will be zero date-time.
    types:
    - uid: string
    name: LastOkTransitionAt
  - description: >
      If the current health state is 'Warning', this property returns the time at which the health report was first reported with 'Warning'. For periodic reporting, many reports with the same state may have been generated however, this property returns only the date and time at the first 'Warning' health report was received.


      If the current health state is 'Ok' or 'Error', returns the date and time at which the health state was last in 'Warning', before transitioning to a different state.


      If the health state was never 'Warning', the value will be zero date-time.
    types:
    - uid: string
    name: LastWarningTransitionAt
  - description: >
      If the current health state is 'Error', this property returns the time at which the health report was first reported with 'Error'. For periodic reporting, many reports with the same state may have been generated however, this property returns only the date and time at the first 'Error' health report was received.


      If the current health state is 'Ok' or 'Warning', returns the date and time at which the health state was last in 'Error', before transitioning to a different state.


      If the health state was never 'Error', the value will be zero date-time.
    types:
    - uid: string
    name: LastErrorTransitionAt
- name: HealthEvaluationWrapper
  description: List of health evaluations that resulted in the current aggregated health state.
  kind: object
  properties:
  - description: Represents a health evaluation which describes the data and the algorithm used by health manager to evaluate the health of an entity.
    types:
    - uid: ApplicationHealthEvaluation
    - uid: ApplicationsHealthEvaluation
    - uid: ApplicationTypeApplicationsHealthEvaluation
    - uid: DeltaNodesCheckHealthEvaluation
    - uid: DeployedApplicationHealthEvaluation
    - uid: DeployedApplicationsHealthEvaluation
    - uid: DeployedServicePackageHealthEvaluation
    - uid: DeployedServicePackagesHealthEvaluation
    - uid: EventHealthEvaluation
    - uid: NodeHealthEvaluation
    - uid: NodesHealthEvaluation
    - uid: PartitionHealthEvaluation
    - uid: PartitionsHealthEvaluation
    - uid: ReplicaHealthEvaluation
    - uid: ReplicasHealthEvaluation
    - uid: ServiceHealthEvaluation
    - uid: ServicesHealthEvaluation
    - uid: SystemApplicationHealthEvaluation
    - uid: UpgradeDomainDeltaNodesCheckHealthEvaluation
    - uid: UpgradeDomainNodesHealthEvaluation
    typesTitle: HealthEvaluation
    name: HealthEvaluation
- name: HealthStatistics
  description: >
    The health statistics of an entity, returned as part of the health query result when the query description is configured to include statistics.

    The statistics include health state counts for all children types of the current entity.

    For example, for cluster, the health statistics include health state counts for nodes, applications, services, partitions, replicas, deployed applications and deployed service packages.

    For partition, the health statistics include health counts for replicas.
  kind: object
  properties:
  - description: >
      List of health state counts per entity kind, which keeps track of how many children of the queried entity are in Ok, Warning and Error state.
    types:
    - uid: EntityKindHealthStateCount
    name: HealthStateCountList
- name: FabricError_Error
  description: Error object containing error code and error message.
  kind: object
  properties:
  - description: >
      Defines the fabric error codes that be returned as part of the error object in response to Service Fabric API operations that are not successful. Following are the error code values that can be returned for a specific HTTP status code.

        - Possible values of the error code for HTTP status code 400 (Bad Request)
          - "FABRIC_E_INVALID_PARTITION_KEY"
          - "FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR"
          - "FABRIC_E_INVALID_ADDRESS"
          - "FABRIC_E_APPLICATION_NOT_UPGRADING"
          - "FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR"
          - "FABRIC_E_FABRIC_NOT_UPGRADING"
          - "FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR"
          - "FABRIC_E_INVALID_CONFIGURATION"
          - "FABRIC_E_INVALID_NAME_URI"
          - "FABRIC_E_PATH_TOO_LONG"
          - "FABRIC_E_KEY_TOO_LARGE"
          - "FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED"
          - "FABRIC_E_INVALID_ATOMIC_GROUP"
          - "FABRIC_E_VALUE_EMPTY"

        - Possible values of the error code for HTTP status code 404 (Not Found)
          - "FABRIC_E_NODE_NOT_FOUND"
          - "FABRIC_E_APPLICATION_TYPE_NOT_FOUND"
          - "FABRIC_E_APPLICATION_NOT_FOUND"
          - "FABRIC_E_SERVICE_TYPE_NOT_FOUND"
          - "FABRIC_E_SERVICE_DOES_NOT_EXIST"
          - "FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND"
          - "FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND"
          - "FABRIC_E_PARTITION_NOT_FOUND"
          - "FABRIC_E_REPLICA_DOES_NOT_EXIST"
          - "FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST"
          - "FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND"
          - "FABRIC_E_DIRECTORY_NOT_FOUND"
          - "FABRIC_E_FABRIC_VERSION_NOT_FOUND"
          - "FABRIC_E_FILE_NOT_FOUND"
          - "FABRIC_E_NAME_DOES_NOT_EXIST"
          - "FABRIC_E_PROPERTY_DOES_NOT_EXIST"
          - "FABRIC_E_ENUMERATION_COMPLETED"
          - "FABRIC_E_SERVICE_MANIFEST_NOT_FOUND"
          - "FABRIC_E_KEY_NOT_FOUND"
          - "FABRIC_E_HEALTH_ENTITY_NOT_FOUND"

        - Possible values of the error code for HTTP status code 409 (Conflict)
          - "FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION"
          - "FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS"
          - "FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS"
          - "FABRIC_E_SERVICE_ALREADY_EXISTS"
          - "FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_TYPE_IN_USE"
          - "FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION"
          - "FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS"
          - "FABRIC_E_FABRIC_VERSION_IN_USE"
          - "FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS"
          - "FABRIC_E_NAME_ALREADY_EXISTS"
          - "FABRIC_E_NAME_NOT_EMPTY"
          - "FABRIC_E_PROPERTY_CHECK_FAILED"
          - "FABRIC_E_SERVICE_METADATA_MISMATCH"
          - "FABRIC_E_SERVICE_TYPE_MISMATCH"
          - "FABRIC_E_HEALTH_STALE_REPORT"
          - "FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED"
          - "FABRIC_E_NODE_HAS_NOT_STOPPED_YET"
          - "FABRIC_E_INSTANCE_ID_MISMATCH"

        - Possible values of the error code for HTTP status code 413 (Request Entity Too Large)
          - "FABRIC_E_VALUE_TOO_LARGE"

        - Possible values of the error code for HTTP status code 500 (Internal Server Error)
          - "FABRIC_E_NODE_IS_UP"

        - Possible values of the error code for HTTP status code 503 (Service Unavailable)
          - "FABRIC_E_NO_WRITE_QUORUM"
          - "FABRIC_E_NOT_PRIMARY"
          - "FABRIC_E_NOT_READY"
          - "FABRIC_E_RECONFIGURATION_PENDING"
          - "FABRIC_E_SERVICE_OFFLINE"
          - "E_ABORT"
          - "FABRIC_E_VALUE_TOO_LARGE"

        - Possible values of the error code for HTTP status code 504 (Gateway Timeout)
          - "FABRIC_E_COMMUNICATION_ERROR"
          - "FABRIC_E_OPERATION_NOT_COMPLETE"
          - "FABRIC_E_TIMEOUT"
    types:
    - uid: FabricErrorCodes
    name: Code
  - description: Error message.
    types:
    - uid: string
    name: Message
- name: EntityKindHealthStateCount
  description: >
    List of health state counts per entity kind, which keeps track of how many children of the queried entity are in Ok, Warning and Error state.
  kind: object
  properties:
  - description: >
      The entity type of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid entity kind. All Service Fabric enumerations have the invalid type. The value is zero.
        - Node - Indicates the entity is a Service Fabric node. The value is 1.
        - Partition - Indicates the entity is a Service Fabric partition. The value is 2.
        - Service - Indicates the entity is a Service Fabric service. The value is 3.
        - Application - Indicates the entity is a Service Fabric application. The value is 4.
        - Replica - Indicates the entity is a Service Fabric replica. The value is 5.
        - DeployedApplication - Indicates the entity is a Service Fabric deployed application. The value is 6.
        - DeployedServicePackage - Indicates the entity is a Service Fabric deployed service package. The value is 7.
        - Cluster - Indicates the entity is a Service Fabric cluster. The value is 8.
    types:
    - uid: EntityKind
    name: EntityKind
  - description: >
      Represents information about how many health entities are in Ok, Warning and Error health state.
    types:
    - uid: HealthStateCount
    name: HealthStateCount
- name: Int64RangePartitionInformation
  description: Describes the partition information for the integer range that is based on partition schemes.
  kind: object
  properties:
  - description: Specifies the minimum key value handled by this partition.
    types:
    - uid: string
    name: LowKey
  - description: Specifies the maximum key value handled by this partition.
    types:
    - uid: string
    name: HighKey
  - description: >
      The kind of partitioning scheme used to partition the service. Possible values are following.

          -	Invalid - Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          -	Singleton - Indicates that there is only one partition, and SingletonPartitionSchemeDescription was specified while creating the service. The value is 1.
          -	Int64Range - Indicates that the partition is based on Int64 key ranges, and UniformInt64RangePartitionSchemeDescription was specified while creating the service. The value is 2.
          -	Named - Indicates that the partition is based on string names, and NamedPartitionInformation  was specified while creating the service. The value is 3.
    types:
    - uid: Int64Range
    typesTitle: string
    name: ServicePartitionKind
  - description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition id is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the ids of its partitions would be different.
    types:
    - uid: string
    name: Id
- name: NamedPartitionInformation
  description: Describes the partition information for the name as a string that is based on partition schemes.
  kind: object
  properties:
  - description: Name of the partition.
    types:
    - uid: string
    name: Name
  - description: >
      The kind of partitioning scheme used to partition the service. Possible values are following.

          -	Invalid - Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          -	Singleton - Indicates that there is only one partition, and SingletonPartitionSchemeDescription was specified while creating the service. The value is 1.
          -	Int64Range - Indicates that the partition is based on Int64 key ranges, and UniformInt64RangePartitionSchemeDescription was specified while creating the service. The value is 2.
          -	Named - Indicates that the partition is based on string names, and NamedPartitionInformation  was specified while creating the service. The value is 3.
    types:
    - uid: Named
    typesTitle: string
    name: ServicePartitionKind
  - description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition id is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the ids of its partitions would be different.
    types:
    - uid: string
    name: Id
- name: EnsureAvailabilitySafetyCheck
  description: Safety check that waits to ensure the availability of the partition. It waits until there are replicas available such that bringing down this replica will not cause availability loss for the partition.
  kind: object
  properties:
  - description: >
      The kind of safety check performed by service fabric before continuing with the operations. These checks ensure the availability of the service and the reliability of the state. Following are the kinds of safety checks.


      - Invalid - Indicates that the upgrade safety check kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - EnsureSeedNodeQuorum - Indicates that if we bring down the node then this will result in global seed node quorum loss. The value is 1.

      - EnsurePartitionQuorum - Indicates that there is some partition for which if we bring down the replica on the node, it will result in quorum loss for that partition. The value is 2.

      - WaitForPrimaryPlacement - Indicates that there is some replica on the node that was moved out of this node due to upgrade. Service Fabric is now waiting for the primary to be moved back to this node. The value is 3.

      - WaitForPrimarySwap - Indicates that Service Fabric is waiting for a primary replica to be moved out of the node before starting upgrade on that node. The value is 4.

      - WaitForReconfiguration - Indicates that there is some replica on the node that is involved in a reconfiguration. Service Fabric is waiting for the reconfiguration to be complete before staring upgrade on that node. The value is 5.

      - WaitForInbuildReplica - Indicates that there is either a replica on the node that is going through copy, or there is a primary replica on the node that is copying data to some other replica. In both cases, bringing down the replica on the node due to upgrade will abort the copy. The value is 6.

      - EnsureAvailability - Indicates that there is either a stateless service partition on the node having exactly one instance, or there is a primary replica on the node for which the partition is quorum loss. In both cases, bringing down the replicas due to upgrade will result in loss of availability. The value is 7.
    types:
    - uid: EnsureAvailability
    typesTitle: string
    name: Kind
  - description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition id is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the ids of its partitions would be different.
    types:
    - uid: string
    name: PartitionId
- name: EnsurePartitionQurumSafetyCheck
  description: Safety check that ensures that a quorum of replicas are not lost for a partition.
  kind: object
  properties:
  - description: >
      The kind of safety check performed by service fabric before continuing with the operations. These checks ensure the availability of the service and the reliability of the state. Following are the kinds of safety checks.


      - Invalid - Indicates that the upgrade safety check kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - EnsureSeedNodeQuorum - Indicates that if we bring down the node then this will result in global seed node quorum loss. The value is 1.

      - EnsurePartitionQuorum - Indicates that there is some partition for which if we bring down the replica on the node, it will result in quorum loss for that partition. The value is 2.

      - WaitForPrimaryPlacement - Indicates that there is some replica on the node that was moved out of this node due to upgrade. Service Fabric is now waiting for the primary to be moved back to this node. The value is 3.

      - WaitForPrimarySwap - Indicates that Service Fabric is waiting for a primary replica to be moved out of the node before starting upgrade on that node. The value is 4.

      - WaitForReconfiguration - Indicates that there is some replica on the node that is involved in a reconfiguration. Service Fabric is waiting for the reconfiguration to be complete before staring upgrade on that node. The value is 5.

      - WaitForInbuildReplica - Indicates that there is either a replica on the node that is going through copy, or there is a primary replica on the node that is copying data to some other replica. In both cases, bringing down the replica on the node due to upgrade will abort the copy. The value is 6.

      - EnsureAvailability - Indicates that there is either a stateless service partition on the node having exactly one instance, or there is a primary replica on the node for which the partition is quorum loss. In both cases, bringing down the replicas due to upgrade will result in loss of availability. The value is 7.
    types:
    - uid: EnsurePartitionQuorum
    typesTitle: string
    name: Kind
  - description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition id is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the ids of its partitions would be different.
    types:
    - uid: string
    name: PartitionId
- name: SeedNodeSafetyCheck
  description: Represents a safety check for the seed nodes being performed by service fabric before continuing with node level operations.
  kind: object
  properties:
  - description: >
      The kind of safety check performed by service fabric before continuing with the operations. These checks ensure the availability of the service and the reliability of the state. Following are the kinds of safety checks.


      - Invalid - Indicates that the upgrade safety check kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - EnsureSeedNodeQuorum - Indicates that if we bring down the node then this will result in global seed node quorum loss. The value is 1.

      - EnsurePartitionQuorum - Indicates that there is some partition for which if we bring down the replica on the node, it will result in quorum loss for that partition. The value is 2.

      - WaitForPrimaryPlacement - Indicates that there is some replica on the node that was moved out of this node due to upgrade. Service Fabric is now waiting for the primary to be moved back to this node. The value is 3.

      - WaitForPrimarySwap - Indicates that Service Fabric is waiting for a primary replica to be moved out of the node before starting upgrade on that node. The value is 4.

      - WaitForReconfiguration - Indicates that there is some replica on the node that is involved in a reconfiguration. Service Fabric is waiting for the reconfiguration to be complete before staring upgrade on that node. The value is 5.

      - WaitForInbuildReplica - Indicates that there is either a replica on the node that is going through copy, or there is a primary replica on the node that is copying data to some other replica. In both cases, bringing down the replica on the node due to upgrade will abort the copy. The value is 6.

      - EnsureAvailability - Indicates that there is either a stateless service partition on the node having exactly one instance, or there is a primary replica on the node for which the partition is quorum loss. In both cases, bringing down the replicas due to upgrade will result in loss of availability. The value is 7.
    types:
    - uid: EnsureSeedNodeQuorum
    typesTitle: string
    name: Kind
- name: ServicePlacementNonPartiallyPlaceServicePolicyDescription
  description: >
    Describes the policy to be used for placement of a Service Fabric service where all replicas must be able to be placed in order for any replicas to be created.
  kind: object
  properties:
  - description: >
      The type of placement policy for a service fabric service. Following are the possible values.

        - Invalid - Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - InvalidDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1.
        - RequiredDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2.
        - PreferredPrimaryDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3.
        - RequiredDomainDistribution - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4.
        - NonPartiallyPlaceService - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5.
    types:
    - uid: NonPartiallyPlaceService
    typesTitle: string
    name: Type
- name: SingletonPartitionInformation
  description: Information about a partition that is singleton. The services with singletone partitioning scheme are effectively non-partitioned. They only have one partition.
  kind: object
  properties:
  - description: >
      The kind of partitioning scheme used to partition the service. Possible values are following.

          -	Invalid - Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          -	Singleton - Indicates that there is only one partition, and SingletonPartitionSchemeDescription was specified while creating the service. The value is 1.
          -	Int64Range - Indicates that the partition is based on Int64 key ranges, and UniformInt64RangePartitionSchemeDescription was specified while creating the service. The value is 2.
          -	Named - Indicates that the partition is based on string names, and NamedPartitionInformation  was specified while creating the service. The value is 3.
    types:
    - uid: Singleton
    typesTitle: string
    name: ServicePartitionKind
  - description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition id is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the ids of its partitions would be different.
    types:
    - uid: string
    name: Id
- name: StatefulServicePartitionInfo
  description: Information about a partition of a stateful Service Fabric service..
  kind: object
  properties:
  - description: The target replica set size as a number.
    types:
    - uid: integer
    name: TargetReplicaSetSize
  - description: The minimum replica set size as a number.
    types:
    - uid: integer
    name: MinReplicaSetSize
  - description: The duration for which this partition was in quorum loss. If the partition is currently in quorum loss, it returns the duration since it has been in that state. This field is using ISO8601 format for specifying the duration.
    types:
    - uid: string
    name: LastQuorumLossDuration
  - description: >
      An Epoch is a configuration number for the partition as a whole. When the configuration of the replica set changes, for example when the Primary replica changes, the operations that are replicated from the new Primary replica are said to be a new Epoch from the ones which were sent by the old Primary replica.
    types:
    - uid: Epoch
    name: CurrentConfigurationEpoch
  - description: >
      The kind of service (Stateless or Stateful). Following are the possible values.


      - Invalid - Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1.

      - Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
    types:
    - uid: Stateful
    typesTitle: string
    name: ServiceKind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: HealthState
  - description: >
      The status of the service fabric service partition. Possible values are following.

        - Invalid - Indicates the partition status is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ready - Indicates that the partition is ready. This means that for a stateless service partition there is atleast one instance that is up and for a stateful service partition the number of ready replicas is greater than or equal to the MinReplicaSetSize. The value is 1.
        - NotReady - Indicates that the partition is not ready. This status is returned when none of the other states apply. The value is 2.
        - InQuorumLoss  - Indicates that the partition is in quorum loss. This means that number of replicas that are up and participating in a replica set is less than MinReplicaSetSize for this partition. The value is 3.
        - Reconfiguring - Indicates that the partition is undergoing reconfiguration of its replica sets. This can happen due to failover, upgrade, load balancing or addition or removal of replicas from the replica set. The value is 4.
        - Deleting - Indicates that the partition is being deleted. The value is 5.
    types:
    - uid: ServicePartitionStatus
    name: PartitionStatus
  - description: Information about the partition identity, partitioning scheme and keys supported by it.
    types:
    - uid: Int64RangePartitionInformation
    - uid: NamedPartitionInformation
    - uid: SingletonPartitionInformation
    typesTitle: PartitionInformation
    name: PartitionInformation
- name: StatefulServiceTypeDescription
  description: Describes a stateful service type defined in the service manifest of a provisioned application type.
  kind: object
  properties:
  - description: A flag indicating whether this is a persistent service which stores states on the local disk. If it is then the value of this property is true, if not it is false.
    types:
    - uid: boolean
    name: HasPersistedState
  - description: >
      The kind of service (Stateless or Stateful). Following are the possible values.


      - Invalid - Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1.

      - Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
    types:
    - uid: Stateful
    typesTitle: string
    name: Kind
  - description: Indicates whether the service type is a stateful service type or a stateless service type. This property is true if the service type is a stateful service type, false otherwise.
    types:
    - uid: boolean
    name: IsStateful
  - description: Name of the service type as specified in the service manifest.
    types:
    - uid: string
    name: ServiceTypeName
  - description: The placement constraint to be used when instantiating this service in a Service Fabric cluster.
    types:
    - uid: string
    name: PlacementConstraints
  - description: List of service placement policy descriptions.
    types:
    - isArray: true
      uid: ServicePlacementInvalidDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementNonPartiallyPlaceServicePolicyDescription
    - isArray: true
      uid: ServicePlacementPreferPrimaryDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementRequiredDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementRequireDomainDistributionPolicyDescription
    typesTitle: ServicePlacementPolicyDescription[]
    name: ServicePlacementPolicies
  - description: List of service type extensions.
    types:
    - uid: ServiceTypeExtensionDescription
    name: Extensions
- name: StatelessServiceInfo
  description: Information about a stateless Service Fabric service.
  kind: object
  properties:
  - description: >
      The identity of the service. This is an encoded representation of the service name. This is used in the REST APIs to identify the service resource.


      Starting in version 6.0, hierarchical names are delimited with the "~" character. For example, if the service name is "fabric://myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.
    types:
    - uid: string
    name: Id
  - description: >
      The kind of service (Stateless or Stateful). Following are the possible values.


      - Invalid - Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1.

      - Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
    types:
    - uid: Stateless
    typesTitle: string
    name: ServiceKind
  - description: The full name of the service with 'fabric:' URI scheme.
    types:
    - uid: string
    name: Name
  - description: Name of the service type as specified in the service manifest.
    types:
    - uid: string
    name: TypeName
  - description: The version of the service manifest.
    types:
    - uid: string
    name: ManifestVersion
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: HealthState
  - description: >
      The status of the application. Possible values are:


      - Unknown - Indicates the service status is unknown. The value is zero.

      - Active - Indicates the service status is active. The value is 1.

      - Upgrading - Indicates the service is upgrading. The value is 2.

      - Deleting - Indicates the service is being deleted. The value is 3.

      - Creating - Indicates the service is being created. The value is 4.

      - Failed - Indicates creation or deletion was terminated due to persistent failures. Another create/delete request can be accepted. The value is 5.
    types:
    - uid: ServiceStatus
    name: ServiceStatus
  - description: Whether the service is in a service group.
    types:
    - uid: boolean
    name: IsServiceGroup
- name: StatelessServicePartitionInfo
  description: Information about a partition of a stateless Service Fabric service.
  kind: object
  properties:
  - description: Number of instances of this partition.
    types:
    - uid: integer
    name: InstanceCount
  - description: >
      The kind of service (Stateless or Stateful). Following are the possible values.


      - Invalid - Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1.

      - Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
    types:
    - uid: Stateless
    typesTitle: string
    name: ServiceKind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: HealthState
  - description: >
      The status of the service fabric service partition. Possible values are following.

        - Invalid - Indicates the partition status is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ready - Indicates that the partition is ready. This means that for a stateless service partition there is atleast one instance that is up and for a stateful service partition the number of ready replicas is greater than or equal to the MinReplicaSetSize. The value is 1.
        - NotReady - Indicates that the partition is not ready. This status is returned when none of the other states apply. The value is 2.
        - InQuorumLoss  - Indicates that the partition is in quorum loss. This means that number of replicas that are up and participating in a replica set is less than MinReplicaSetSize for this partition. The value is 3.
        - Reconfiguring - Indicates that the partition is undergoing reconfiguration of its replica sets. This can happen due to failover, upgrade, load balancing or addition or removal of replicas from the replica set. The value is 4.
        - Deleting - Indicates that the partition is being deleted. The value is 5.
    types:
    - uid: ServicePartitionStatus
    name: PartitionStatus
  - description: Information about the partition identity, partitioning scheme and keys supported by it.
    types:
    - uid: Int64RangePartitionInformation
    - uid: NamedPartitionInformation
    - uid: SingletonPartitionInformation
    typesTitle: PartitionInformation
    name: PartitionInformation
- name: StatelessServiceTypeDescription
  description: Describes a stateless service type defined in the service manifest of a provisioned application type.
  kind: object
  properties:
  - description: A flag indicating if this type is not implemented and hosted by a user service process, but is implicitly hosted by a system created process. This value is true for services using the guest executable services, false otherwise.
    types:
    - uid: boolean
    name: UseImplicitHost
  - description: >
      The kind of service (Stateless or Stateful). Following are the possible values.


      - Invalid - Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1.

      - Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
    types:
    - uid: Stateless
    typesTitle: string
    name: Kind
  - description: Indicates whether the service type is a stateful service type or a stateless service type. This property is true if the service type is a stateful service type, false otherwise.
    types:
    - uid: boolean
    name: IsStateful
  - description: Name of the service type as specified in the service manifest.
    types:
    - uid: string
    name: ServiceTypeName
  - description: The placement constraint to be used when instantiating this service in a Service Fabric cluster.
    types:
    - uid: string
    name: PlacementConstraints
  - description: List of service placement policy descriptions.
    types:
    - isArray: true
      uid: ServicePlacementInvalidDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementNonPartiallyPlaceServicePolicyDescription
    - isArray: true
      uid: ServicePlacementPreferPrimaryDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementRequiredDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementRequireDomainDistributionPolicyDescription
    typesTitle: ServicePlacementPolicyDescription[]
    name: ServicePlacementPolicies
  - description: List of service type extensions.
    types:
    - uid: ServiceTypeExtensionDescription
    name: Extensions
- name: WaitForInbuildReplicaSafetyCheck
  description: Safety check that waits for the replica build operation to finish. This indiciates that there is a replica that is going through the copy or is providing data for building another replica. Bring the node down will abort this copy operation which are typoically expensive involving data movements.
  kind: object
  properties:
  - description: >
      The kind of safety check performed by service fabric before continuing with the operations. These checks ensure the availability of the service and the reliability of the state. Following are the kinds of safety checks.


      - Invalid - Indicates that the upgrade safety check kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - EnsureSeedNodeQuorum - Indicates that if we bring down the node then this will result in global seed node quorum loss. The value is 1.

      - EnsurePartitionQuorum - Indicates that there is some partition for which if we bring down the replica on the node, it will result in quorum loss for that partition. The value is 2.

      - WaitForPrimaryPlacement - Indicates that there is some replica on the node that was moved out of this node due to upgrade. Service Fabric is now waiting for the primary to be moved back to this node. The value is 3.

      - WaitForPrimarySwap - Indicates that Service Fabric is waiting for a primary replica to be moved out of the node before starting upgrade on that node. The value is 4.

      - WaitForReconfiguration - Indicates that there is some replica on the node that is involved in a reconfiguration. Service Fabric is waiting for the reconfiguration to be complete before staring upgrade on that node. The value is 5.

      - WaitForInbuildReplica - Indicates that there is either a replica on the node that is going through copy, or there is a primary replica on the node that is copying data to some other replica. In both cases, bringing down the replica on the node due to upgrade will abort the copy. The value is 6.

      - EnsureAvailability - Indicates that there is either a stateless service partition on the node having exactly one instance, or there is a primary replica on the node for which the partition is quorum loss. In both cases, bringing down the replicas due to upgrade will result in loss of availability. The value is 7.
    types:
    - uid: WaitForInbuildReplica
    typesTitle: string
    name: Kind
  - description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition id is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the ids of its partitions would be different.
    types:
    - uid: string
    name: PartitionId
- name: WaitForPrimaryPlacementSafetyCheck
  description: Safety check that waits for the primary replica that was moved out of the node due to upgrade to be placed back again on that node.
  kind: object
  properties:
  - description: >
      The kind of safety check performed by service fabric before continuing with the operations. These checks ensure the availability of the service and the reliability of the state. Following are the kinds of safety checks.


      - Invalid - Indicates that the upgrade safety check kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - EnsureSeedNodeQuorum - Indicates that if we bring down the node then this will result in global seed node quorum loss. The value is 1.

      - EnsurePartitionQuorum - Indicates that there is some partition for which if we bring down the replica on the node, it will result in quorum loss for that partition. The value is 2.

      - WaitForPrimaryPlacement - Indicates that there is some replica on the node that was moved out of this node due to upgrade. Service Fabric is now waiting for the primary to be moved back to this node. The value is 3.

      - WaitForPrimarySwap - Indicates that Service Fabric is waiting for a primary replica to be moved out of the node before starting upgrade on that node. The value is 4.

      - WaitForReconfiguration - Indicates that there is some replica on the node that is involved in a reconfiguration. Service Fabric is waiting for the reconfiguration to be complete before staring upgrade on that node. The value is 5.

      - WaitForInbuildReplica - Indicates that there is either a replica on the node that is going through copy, or there is a primary replica on the node that is copying data to some other replica. In both cases, bringing down the replica on the node due to upgrade will abort the copy. The value is 6.

      - EnsureAvailability - Indicates that there is either a stateless service partition on the node having exactly one instance, or there is a primary replica on the node for which the partition is quorum loss. In both cases, bringing down the replicas due to upgrade will result in loss of availability. The value is 7.
    types:
    - uid: WaitForPrimaryPlacement
    typesTitle: string
    name: Kind
  - description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition id is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the ids of its partitions would be different.
    types:
    - uid: string
    name: PartitionId
- name: WaitForPrimarySwapSafetyCheck
  description: Safety check that waits for the primary replica to be moved out of the node before starting an upgrade to ensure the availability of the primary replica for the partition.
  kind: object
  properties:
  - description: >
      The kind of safety check performed by service fabric before continuing with the operations. These checks ensure the availability of the service and the reliability of the state. Following are the kinds of safety checks.


      - Invalid - Indicates that the upgrade safety check kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - EnsureSeedNodeQuorum - Indicates that if we bring down the node then this will result in global seed node quorum loss. The value is 1.

      - EnsurePartitionQuorum - Indicates that there is some partition for which if we bring down the replica on the node, it will result in quorum loss for that partition. The value is 2.

      - WaitForPrimaryPlacement - Indicates that there is some replica on the node that was moved out of this node due to upgrade. Service Fabric is now waiting for the primary to be moved back to this node. The value is 3.

      - WaitForPrimarySwap - Indicates that Service Fabric is waiting for a primary replica to be moved out of the node before starting upgrade on that node. The value is 4.

      - WaitForReconfiguration - Indicates that there is some replica on the node that is involved in a reconfiguration. Service Fabric is waiting for the reconfiguration to be complete before staring upgrade on that node. The value is 5.

      - WaitForInbuildReplica - Indicates that there is either a replica on the node that is going through copy, or there is a primary replica on the node that is copying data to some other replica. In both cases, bringing down the replica on the node due to upgrade will abort the copy. The value is 6.

      - EnsureAvailability - Indicates that there is either a stateless service partition on the node having exactly one instance, or there is a primary replica on the node for which the partition is quorum loss. In both cases, bringing down the replicas due to upgrade will result in loss of availability. The value is 7.
    types:
    - uid: WaitForPrimarySwap
    typesTitle: string
    name: Kind
  - description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition id is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the ids of its partitions would be different.
    types:
    - uid: string
    name: PartitionId
- name: WaitForReconfigurationSafetyCheck
  description: Safety check that waits for the current reconfiguration of the partition to be completed before starting an upgrade.
  kind: object
  properties:
  - description: >
      The kind of safety check performed by service fabric before continuing with the operations. These checks ensure the availability of the service and the reliability of the state. Following are the kinds of safety checks.


      - Invalid - Indicates that the upgrade safety check kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - EnsureSeedNodeQuorum - Indicates that if we bring down the node then this will result in global seed node quorum loss. The value is 1.

      - EnsurePartitionQuorum - Indicates that there is some partition for which if we bring down the replica on the node, it will result in quorum loss for that partition. The value is 2.

      - WaitForPrimaryPlacement - Indicates that there is some replica on the node that was moved out of this node due to upgrade. Service Fabric is now waiting for the primary to be moved back to this node. The value is 3.

      - WaitForPrimarySwap - Indicates that Service Fabric is waiting for a primary replica to be moved out of the node before starting upgrade on that node. The value is 4.

      - WaitForReconfiguration - Indicates that there is some replica on the node that is involved in a reconfiguration. Service Fabric is waiting for the reconfiguration to be complete before staring upgrade on that node. The value is 5.

      - WaitForInbuildReplica - Indicates that there is either a replica on the node that is going through copy, or there is a primary replica on the node that is copying data to some other replica. In both cases, bringing down the replica on the node due to upgrade will abort the copy. The value is 6.

      - EnsureAvailability - Indicates that there is either a stateless service partition on the node having exactly one instance, or there is a primary replica on the node for which the partition is quorum loss. In both cases, bringing down the replicas due to upgrade will result in loss of availability. The value is 7.
    types:
    - uid: WaitForReconfiguration
    typesTitle: string
    name: Kind
  - description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition id is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the ids of its partitions would be different.
    types:
    - uid: string
    name: PartitionId
- name: NamedPartitionSchemeDescription
  description: Describes the named partition scheme of the service.
  kind: object
  properties:
  - description: The number of partitions.
    types:
    - uid: integer
    name: Count
  - description: Array of size specified by the ‘Count’ parameter, for the names of the partitions.
    types:
    - uid: string
    name: Names
  - description: >
      Enumerates the ways that a service can be partitioned. Possible values are:


      - Invalid - Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Singleton - Indicates that the partition is based on string names, and is a SingletonPartitionSchemeDescription object, The value is 1.

      - UniformInt64Range - Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionSchemeDescription object. The value is 2.

      - Named - Indicates that the partition is based on string names, and is a NamedPartitionSchemeDescription object. The value is 3
    types:
    - uid: Named
    typesTitle: string
    name: PartitionScheme
- name: SingletonPartitionSchemeDescription
  description: Describes the partition scheme of a singleton-partitioned, or non-partitioned service.
  kind: object
  properties:
  - description: >
      Enumerates the ways that a service can be partitioned. Possible values are:


      - Invalid - Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Singleton - Indicates that the partition is based on string names, and is a SingletonPartitionSchemeDescription object, The value is 1.

      - UniformInt64Range - Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionSchemeDescription object. The value is 2.

      - Named - Indicates that the partition is based on string names, and is a NamedPartitionSchemeDescription object. The value is 3
    types:
    - uid: Singleton
    typesTitle: string
    name: PartitionScheme
- name: UniformInt64RangePartitionSchemeDescription
  description: Describes a partitioning scheme where an integer range is allocated evenly across a number of partitions.
  kind: object
  properties:
  - description: The number of partitions.
    types:
    - uid: integer
    name: Count
  - description: >
      String indicating the lower bound of the partition key range that

      should be split between the partition ‘Count’
    types:
    - uid: string
    name: LowKey
  - description: >
      String indicating the upper bound of the partition key range that

      should be split between the partition ‘Count’
    types:
    - uid: string
    name: HighKey
  - description: >
      Enumerates the ways that a service can be partitioned. Possible values are:


      - Invalid - Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Singleton - Indicates that the partition is based on string names, and is a SingletonPartitionSchemeDescription object, The value is 1.

      - UniformInt64Range - Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionSchemeDescription object. The value is 2.

      - Named - Indicates that the partition is based on string names, and is a NamedPartitionSchemeDescription object. The value is 3
    types:
    - uid: UniformInt64Range
    typesTitle: string
    name: PartitionScheme
- name: StatefulServiceDescription
  description: Describes a stateful service.
  kind: object
  properties:
  - description: The target replica set size as a number.
    types:
    - uid: integer
    name: TargetReplicaSetSize
  - description: The minimum replica set size as a number.
    types:
    - uid: integer
    name: MinReplicaSetSize
  - description: A flag indicating whether this is a persistent service which stores states on the local disk. If it is then the value of this property is true, if not it is false.
    types:
    - uid: boolean
    name: HasPersistedState
  - description: >
      Flags indicating whether other properties are set. Each of the associated properties corresponds to a flag, specified below, which, if set, indicate that the property is specified.

      This property can be a combination of those flags obtained using bitwise 'OR' operator.

      For example, if the provided value is 6 then the flags for QuorumLossWaitDuration (2) and StandByReplicaKeepDuration(4) are set.


      - None - Does not indicate any other properties are set. The value is zero.

      - ReplicaRestartWaitDuration - Indicates the ReplicaRestartWaitDuration property is set. The value is 1.

      - QuorumLossWaitDuration - Indicates the QuorumLossWaitDuration property is set. The value is 2.

      - StandByReplicaKeepDuration - Indicates the StandByReplicaKeepDuration property is set. The value is 4.
    types:
    - uid: integer
    name: Flags
  - description: The duration, in seconds, between when a replica goes down and when a new replica is created.
    types:
    - uid: integer
    name: ReplicaRestartWaitDurationSeconds
  - description: The maximum duration, in seconds, for which a partition is allowed to be in a state of quorum loss.
    types:
    - uid: integer
    name: QuorumLossWaitDurationSeconds
  - description: The definition on how long StandBy replicas should be maintained before being removed.
    types:
    - uid: integer
    name: StandByReplicaKeepDurationSeconds
  - description: >
      The kind of service (Stateless or Stateful). Following are the possible values.


      - Invalid - Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1.

      - Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
    types:
    - uid: Stateful
    typesTitle: string
    name: ServiceKind
  - description: The name of the application, including the 'fabric:' URI scheme.
    types:
    - uid: string
    name: ApplicationName
  - description: The full name of the service with 'fabric:' URI scheme.
    types:
    - uid: string
    name: ServiceName
  - description: Name of the service type as specified in the service manifest.
    types:
    - uid: string
    name: ServiceTypeName
  - description: Array of bytes to be sent as an integer array. Each element of array is a number between 0 and 255.
    types:
    - uid: integer
    name: InitializationData
  - description: Describes how the service is partitioned.
    types:
    - uid: NamedPartitionSchemeDescription
    - uid: SingletonPartitionSchemeDescription
    - uid: UniformInt64RangePartitionSchemeDescription
    typesTitle: PartitionSchemeDescription
    name: PartitionDescription
  - description: 'The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: "NodeColor == blue)".'
    types:
    - uid: string
    name: PlacementConstraints
  - description: A list that describes the correlation of the service with other services.
    types:
    - uid: ServiceCorrelationDescription
    name: CorrelationScheme
  - description: The service load metrics is given as an array of ServiceLoadMetricDescription objects.
    types:
    - uid: ServiceLoadMetricDescription
    name: ServiceLoadMetrics
  - description: A list that describes the correlation of the service with other services.
    types:
    - isArray: true
      uid: ServicePlacementInvalidDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementNonPartiallyPlaceServicePolicyDescription
    - isArray: true
      uid: ServicePlacementPreferPrimaryDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementRequiredDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementRequireDomainDistributionPolicyDescription
    typesTitle: ServicePlacementPolicyDescription[]
    name: ServicePlacementPolicies
  - description: >
      Specifies the move cost for the service. Possible values are the following.

        - Zero - Zero move cost. This value is zero.
        - Low - Specifies the move cost of the service as Low. The value is 1.
        - Medium - Specifies the move cost of the service as Medium. The value is 2.
        - High - Specifies the move cost of the service as High. The value is 3.
    types:
    - uid: MoveCost
    name: DefaultMoveCost
  - description: Indicates if the DefaultMoveCost property is specified.
    types:
    - uid: boolean
    name: IsDefaultMoveCostSpecified
  - description: >
      The activation mode of service package to be used for a Service Fabric service. This is specified at the time of creating the Service. Possible values are following.

        - SharedProcess - This is the default activation mode. With this activation mode, replicas or instances from different partition(s) of service, on a given node, will share same activation of service package on a node. The value is zero.
        - ExclusiveProcess - With this activation mode, each replica or instance of service, on a given node, will have its own dedicated activation of service package on a node. The value is 1.
    types:
    - uid: ServicePackageActivationMode
    name: ServicePackageActivationMode
  - description: The DNS name of the service. It requires the DNS system service to be enabled in Service Fabric cluster.
    types:
    - uid: string
    name: ServiceDnsName
- name: StatelessServiceDescription
  description: Describes a stateless service.
  kind: object
  properties:
  - description: The instance count.
    types:
    - uid: integer
    name: InstanceCount
  - description: >
      The kind of service (Stateless or Stateful). Following are the possible values.


      - Invalid - Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1.

      - Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
    types:
    - uid: Stateless
    typesTitle: string
    name: ServiceKind
  - description: The name of the application, including the 'fabric:' URI scheme.
    types:
    - uid: string
    name: ApplicationName
  - description: The full name of the service with 'fabric:' URI scheme.
    types:
    - uid: string
    name: ServiceName
  - description: Name of the service type as specified in the service manifest.
    types:
    - uid: string
    name: ServiceTypeName
  - description: Array of bytes to be sent as an integer array. Each element of array is a number between 0 and 255.
    types:
    - uid: integer
    name: InitializationData
  - description: Describes how the service is partitioned.
    types:
    - uid: NamedPartitionSchemeDescription
    - uid: SingletonPartitionSchemeDescription
    - uid: UniformInt64RangePartitionSchemeDescription
    typesTitle: PartitionSchemeDescription
    name: PartitionDescription
  - description: 'The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: "NodeColor == blue)".'
    types:
    - uid: string
    name: PlacementConstraints
  - description: A list that describes the correlation of the service with other services.
    types:
    - uid: ServiceCorrelationDescription
    name: CorrelationScheme
  - description: The service load metrics is given as an array of ServiceLoadMetricDescription objects.
    types:
    - uid: ServiceLoadMetricDescription
    name: ServiceLoadMetrics
  - description: A list that describes the correlation of the service with other services.
    types:
    - isArray: true
      uid: ServicePlacementInvalidDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementNonPartiallyPlaceServicePolicyDescription
    - isArray: true
      uid: ServicePlacementPreferPrimaryDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementRequiredDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementRequireDomainDistributionPolicyDescription
    typesTitle: ServicePlacementPolicyDescription[]
    name: ServicePlacementPolicies
  - description: >
      Specifies the move cost for the service. Possible values are the following.

        - Zero - Zero move cost. This value is zero.
        - Low - Specifies the move cost of the service as Low. The value is 1.
        - Medium - Specifies the move cost of the service as Medium. The value is 2.
        - High - Specifies the move cost of the service as High. The value is 3.
    types:
    - uid: MoveCost
    name: DefaultMoveCost
  - description: Indicates if the DefaultMoveCost property is specified.
    types:
    - uid: boolean
    name: IsDefaultMoveCostSpecified
  - description: >
      The activation mode of service package to be used for a Service Fabric service. This is specified at the time of creating the Service. Possible values are following.

        - SharedProcess - This is the default activation mode. With this activation mode, replicas or instances from different partition(s) of service, on a given node, will share same activation of service package on a node. The value is zero.
        - ExclusiveProcess - With this activation mode, each replica or instance of service, on a given node, will have its own dedicated activation of service package on a node. The value is 1.
    types:
    - uid: ServicePackageActivationMode
    name: ServicePackageActivationMode
  - description: The DNS name of the service. It requires the DNS system service to be enabled in Service Fabric cluster.
    types:
    - uid: string
    name: ServiceDnsName
- name: SecondaryActiveReplicatorStatus
  description: Status of the secondary replicator when it is in active mode and is part of the replica set.
  kind: object
  properties:
  - description: >
      The role of a replica of a stateful service. Possible values are following.
        - Unknown - Indicates the initial role that a replica is created in. The value is zero.
        - None - Specifies that the replica has no responsibility in regard to the replica set. The value is 1
        - Primary - Refers to the replica in the set on which all read and write operations are complete in order to enforce strong consistency semantics. Read operations are handled directly by the Primary replica, while write operations must be acknowledged by a quorum of the replicas in the replica set. There can only be one Primary replica in a replica set at a time. The value is 2.
        - IdleSecondary - Refers to a replica in the set that receives a state transfer from the Primary replica to prepare for becoming an active Secondary replica. There can be multiple Idle Secondary replicas in a replica set at a time. Idle Secondary replicas do not count as a part of a write quorum. The value is 3.
        - ActiveSecondary - Refers to a replica in the set that receives state updates from the Primary replica, applies them, and sends acknowledgements back. Secondary replicas must participate in the write quorum for a replica set. There can be multiple active Secondary replicas in a replica set at a time. The number of active Secondary replicas is configurable that the reliability subsystem should maintain. The value is 4.
    types:
    - uid: ActiveSecondary
    typesTitle: string
    name: Kind
  - description: >
      Provides various statistics of the queue used in the service fabric replicator.

      Contains information about the service fabric replicator like the replication/copy queue utilization, last acknowledgement received timestamp, etc.

      Depending on the role of the replicator, the properties in this type imply different meanings.
    types:
    - uid: ReplicatorQueueStatus
    name: ReplicationQueueStatus
  - description: >
      The last time-stamp (UTC) at which a replication operation was received from the primary.

      UTC 0 represents an invalid value, indicating that a replication operation message was never received.
    types:
    - uid: string
    name: LastReplicationOperationReceivedTimeUtc
  - description: Value that indicates whether the replica is currently being built.
    types:
    - uid: boolean
    name: IsInBuild
  - description: >
      Provides various statistics of the queue used in the service fabric replicator.

      Contains information about the service fabric replicator like the replication/copy queue utilization, last acknowledgement received timestamp, etc.

      Depending on the role of the replicator, the properties in this type imply different meanings.
    types:
    - uid: ReplicatorQueueStatus
    name: CopyQueueStatus
  - description: >
      The last time-stamp (UTC) at which a copy operation was received from the primary.

      UTC 0 represents an invalid value, indicating that a copy operation message was never received.
    types:
    - uid: string
    name: LastCopyOperationReceivedTimeUtc
  - description: >
      The last time-stamp (UTC) at which an acknowledgment was sent to the primary replicator.

      UTC 0 represents an invalid value, indicating that an acknowledgment message was never sent.
    types:
    - uid: string
    name: LastAcknowledgementSentTimeUtc
- name: SecondaryIdleReplicatorStatus
  description: Status of the secondary replicator when it is in idle mode and is being built by the primary.
  kind: object
  properties:
  - description: >
      The role of a replica of a stateful service. Possible values are following.
        - Unknown - Indicates the initial role that a replica is created in. The value is zero.
        - None - Specifies that the replica has no responsibility in regard to the replica set. The value is 1
        - Primary - Refers to the replica in the set on which all read and write operations are complete in order to enforce strong consistency semantics. Read operations are handled directly by the Primary replica, while write operations must be acknowledged by a quorum of the replicas in the replica set. There can only be one Primary replica in a replica set at a time. The value is 2.
        - IdleSecondary - Refers to a replica in the set that receives a state transfer from the Primary replica to prepare for becoming an active Secondary replica. There can be multiple Idle Secondary replicas in a replica set at a time. Idle Secondary replicas do not count as a part of a write quorum. The value is 3.
        - ActiveSecondary - Refers to a replica in the set that receives state updates from the Primary replica, applies them, and sends acknowledgements back. Secondary replicas must participate in the write quorum for a replica set. There can be multiple active Secondary replicas in a replica set at a time. The number of active Secondary replicas is configurable that the reliability subsystem should maintain. The value is 4.
    types:
    - uid: IdleSecondary
    typesTitle: string
    name: Kind
  - description: >
      Provides various statistics of the queue used in the service fabric replicator.

      Contains information about the service fabric replicator like the replication/copy queue utilization, last acknowledgement received timestamp, etc.

      Depending on the role of the replicator, the properties in this type imply different meanings.
    types:
    - uid: ReplicatorQueueStatus
    name: ReplicationQueueStatus
  - description: >
      The last time-stamp (UTC) at which a replication operation was received from the primary.

      UTC 0 represents an invalid value, indicating that a replication operation message was never received.
    types:
    - uid: string
    name: LastReplicationOperationReceivedTimeUtc
  - description: Value that indicates whether the replica is currently being built.
    types:
    - uid: boolean
    name: IsInBuild
  - description: >
      Provides various statistics of the queue used in the service fabric replicator.

      Contains information about the service fabric replicator like the replication/copy queue utilization, last acknowledgement received timestamp, etc.

      Depending on the role of the replicator, the properties in this type imply different meanings.
    types:
    - uid: ReplicatorQueueStatus
    name: CopyQueueStatus
  - description: >
      The last time-stamp (UTC) at which a copy operation was received from the primary.

      UTC 0 represents an invalid value, indicating that a copy operation message was never received.
    types:
    - uid: string
    name: LastCopyOperationReceivedTimeUtc
  - description: >
      The last time-stamp (UTC) at which an acknowledgment was sent to the primary replicator.

      UTC 0 represents an invalid value, indicating that an acknowledgment message was never sent.
    types:
    - uid: string
    name: LastAcknowledgementSentTimeUtc
- name: StatefulServiceUpdateDescription
  description: Describes an update for a stateful service.
  kind: object
  properties:
  - description: The target replica set size as a number.
    types:
    - uid: integer
    name: TargetReplicaSetSize
  - description: The minimum replica set size as a number.
    types:
    - uid: integer
    name: MinReplicaSetSize
  - description: The duration, in seconds, between when a replica goes down and when a new replica is created.
    types:
    - uid: string
    name: ReplicaRestartWaitDurationSeconds
  - description: The maximum duration, in seconds, for which a partition is allowed to be in a state of quorum loss.
    types:
    - uid: string
    name: QuorumLossWaitDurationSeconds
  - description: The definition on how long StandBy replicas should be maintained before being removed.
    types:
    - uid: string
    name: StandByReplicaKeepDurationSeconds
  - description: >
      The kind of service (Stateless or Stateful). Following are the possible values.


      - Invalid - Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1.

      - Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
    types:
    - uid: Stateful
    typesTitle: string
    name: ServiceKind
  - description: >
      Flags indicating whether other properties are set. Each of the associated properties corresponds to a flag, specified below, which, if set, indicate that the property is specified.

      This property can be a combination of those flags obtained using bitwise 'OR' operator.

      For example, if the provided value is 6 then the flags for ReplicaRestartWaitDuration (2) and QuorumLossWaitDuration (4) are set.


      - None - Does not indicate any other properties are set. The value is zero.

      - TargetReplicaSetSize/InstanceCount - Indicates whether the TargetReplicaSetSize property (for Stateful services) or the InstanceCount property (for Stateless services) is set. The value is 1.

      - ReplicaRestartWaitDuration - Indicates the ReplicaRestartWaitDuration property is set. The value is  2.

      - QuorumLossWaitDuration - Indicates the QuorumLossWaitDuration property is set. The value is 4.

      - StandByReplicaKeepDuration - Indicates the StandByReplicaKeepDuration property is set. The value is 8.

      - MinReplicaSetSize - Indicates the MinReplicaSetSize property is set. The value is 16.

      - PlacementConstraints - Indicates the PlacementConstraints property is set. The value is 32.

      - PlacementPolicyList - Indicates the ServicePlacementPolicies property is set. The value is 64.

      - Correlation - Indicates the CorrelationScheme property is set. The value is 128.

      - Metrics - Indicates the ServiceLoadMetrics property is set. The value is 256.

      - DefaultMoveCost - Indicates the DefaultMoveCost property is set. The value is 512.
    types:
    - uid: string
    name: Flags
  - description: 'The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: "NodeColor == blue)".'
    types:
    - uid: string
    name: PlacementConstraints
  - description: A list that describes the correlation of the service with other services.
    types:
    - uid: ServiceCorrelationDescription
    name: CorrelationScheme
  - description: The service load metrics is given as an array of ServiceLoadMetricDescription objects.
    types:
    - uid: ServiceLoadMetricDescription
    name: LoadMetrics
  - description: A list that describes the correlation of the service with other services.
    types:
    - isArray: true
      uid: ServicePlacementInvalidDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementNonPartiallyPlaceServicePolicyDescription
    - isArray: true
      uid: ServicePlacementPreferPrimaryDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementRequiredDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementRequireDomainDistributionPolicyDescription
    typesTitle: ServicePlacementPolicyDescription[]
    name: ServicePlacementPolicies
  - description: >
      Specifies the move cost for the service. Possible values are the following.

        - Zero - Zero move cost. This value is zero.
        - Low - Specifies the move cost of the service as Low. The value is 1.
        - Medium - Specifies the move cost of the service as Medium. The value is 2.
        - High - Specifies the move cost of the service as High. The value is 3.
    types:
    - uid: MoveCost
    name: DefaultMoveCost
- name: StatelessServiceUpdateDescription
  description: Describes an update for a stateless service.
  kind: object
  properties:
  - description: The instance count.
    types:
    - uid: integer
    name: InstanceCount
  - description: >
      The kind of service (Stateless or Stateful). Following are the possible values.


      - Invalid - Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1.

      - Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
    types:
    - uid: Stateless
    typesTitle: string
    name: ServiceKind
  - description: >
      Flags indicating whether other properties are set. Each of the associated properties corresponds to a flag, specified below, which, if set, indicate that the property is specified.

      This property can be a combination of those flags obtained using bitwise 'OR' operator.

      For example, if the provided value is 6 then the flags for ReplicaRestartWaitDuration (2) and QuorumLossWaitDuration (4) are set.


      - None - Does not indicate any other properties are set. The value is zero.

      - TargetReplicaSetSize/InstanceCount - Indicates whether the TargetReplicaSetSize property (for Stateful services) or the InstanceCount property (for Stateless services) is set. The value is 1.

      - ReplicaRestartWaitDuration - Indicates the ReplicaRestartWaitDuration property is set. The value is  2.

      - QuorumLossWaitDuration - Indicates the QuorumLossWaitDuration property is set. The value is 4.

      - StandByReplicaKeepDuration - Indicates the StandByReplicaKeepDuration property is set. The value is 8.

      - MinReplicaSetSize - Indicates the MinReplicaSetSize property is set. The value is 16.

      - PlacementConstraints - Indicates the PlacementConstraints property is set. The value is 32.

      - PlacementPolicyList - Indicates the ServicePlacementPolicies property is set. The value is 64.

      - Correlation - Indicates the CorrelationScheme property is set. The value is 128.

      - Metrics - Indicates the ServiceLoadMetrics property is set. The value is 256.

      - DefaultMoveCost - Indicates the DefaultMoveCost property is set. The value is 512.
    types:
    - uid: string
    name: Flags
  - description: 'The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: "NodeColor == blue)".'
    types:
    - uid: string
    name: PlacementConstraints
  - description: A list that describes the correlation of the service with other services.
    types:
    - uid: ServiceCorrelationDescription
    name: CorrelationScheme
  - description: The service load metrics is given as an array of ServiceLoadMetricDescription objects.
    types:
    - uid: ServiceLoadMetricDescription
    name: LoadMetrics
  - description: A list that describes the correlation of the service with other services.
    types:
    - isArray: true
      uid: ServicePlacementInvalidDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementNonPartiallyPlaceServicePolicyDescription
    - isArray: true
      uid: ServicePlacementPreferPrimaryDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementRequiredDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementRequireDomainDistributionPolicyDescription
    typesTitle: ServicePlacementPolicyDescription[]
    name: ServicePlacementPolicies
  - description: >
      Specifies the move cost for the service. Possible values are the following.

        - Zero - Zero move cost. This value is zero.
        - Low - Specifies the move cost of the service as Low. The value is 1.
        - Medium - Specifies the move cost of the service as Medium. The value is 2.
        - High - Specifies the move cost of the service as High. The value is 3.
    types:
    - uid: MoveCost
    name: DefaultMoveCost
- name: BinaryPropertyValue
  description: Describes a Service Fabric property value of type Binary.
  kind: object
  properties:
  - description: Array of bytes to be sent as an integer array. Each element of array is a number between 0 and 255.
    types:
    - uid: integer
    name: Data
  - description: >
      The kind of property, determined by the type of data. Following are the possible values.


      - Invalid - Indicates the property is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Binary - The data inside the property is a binary blob. The value is 1.

      - Int64 - The data inside the property is an int64. The value is 2.

      - Double - The data inside the property is a double. The value is 3.

      - String - The data inside the property is a wstring. The value is 4.

      - Guid - The data inside the property is a guid. The value is 5.
    types:
    - uid: Binary
    typesTitle: string
    name: Kind
- name: Int64PropertyValue
  description: Describes a Service Fabric property value of type Int64.
  kind: object
  properties:
  - description: The data of the property value.
    types:
    - uid: string
    name: Data
  - description: >
      The kind of property, determined by the type of data. Following are the possible values.


      - Invalid - Indicates the property is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Binary - The data inside the property is a binary blob. The value is 1.

      - Int64 - The data inside the property is an int64. The value is 2.

      - Double - The data inside the property is a double. The value is 3.

      - String - The data inside the property is a wstring. The value is 4.

      - Guid - The data inside the property is a guid. The value is 5.
    types:
    - uid: Int64
    typesTitle: string
    name: Kind
- name: DoublePropertyValue
  description: Describes a Service Fabric property value of type Double.
  kind: object
  properties:
  - description: The data of the property value.
    types:
    - uid: number
    name: Data
  - description: >
      The kind of property, determined by the type of data. Following are the possible values.


      - Invalid - Indicates the property is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Binary - The data inside the property is a binary blob. The value is 1.

      - Int64 - The data inside the property is an int64. The value is 2.

      - Double - The data inside the property is a double. The value is 3.

      - String - The data inside the property is a wstring. The value is 4.

      - Guid - The data inside the property is a guid. The value is 5.
    types:
    - uid: Double
    typesTitle: string
    name: Kind
- name: StringPropertyValue
  description: Describes a Service Fabric property value of type String.
  kind: object
  properties:
  - description: The data of the property value.
    types:
    - uid: string
    name: Data
  - description: >
      The kind of property, determined by the type of data. Following are the possible values.


      - Invalid - Indicates the property is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Binary - The data inside the property is a binary blob. The value is 1.

      - Int64 - The data inside the property is an int64. The value is 2.

      - Double - The data inside the property is a double. The value is 3.

      - String - The data inside the property is a wstring. The value is 4.

      - Guid - The data inside the property is a guid. The value is 5.
    types:
    - uid: String
    typesTitle: string
    name: Kind
- name: GuidPropertyValue
  description: Describes a Service Fabric property value of type Guid.
  kind: object
  properties:
  - description: The data of the property value.
    types:
    - uid: string
    name: Data
  - description: >
      The kind of property, determined by the type of data. Following are the possible values.


      - Invalid - Indicates the property is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Binary - The data inside the property is a binary blob. The value is 1.

      - Int64 - The data inside the property is an int64. The value is 2.

      - Double - The data inside the property is a double. The value is 3.

      - String - The data inside the property is a wstring. The value is 4.

      - Guid - The data inside the property is a guid. The value is 5.
    types:
    - uid: Guid
    typesTitle: string
    name: Kind
- name: CheckExistsPropertyBatchOperation
  description: >
    Represents a PropertyBatchOperation that compares the Boolean existence of a property with the Exists argument.  The PropertyBatchOperation operation fails if the property's existence is not equal to the Exists argument.  The CheckExistsPropertyBatchOperation is generally used as a precondition for the write operations in the batch.  Note that if one PropertyBatchOperation in a PropertyBatch fails,  the entire batch fails and cannot be committed in a transactional manner.
  kind: object
  properties:
  - description: Whether or not the property should exist for the operation to pass.
    types:
    - uid: boolean
    name: Exists
  - description: >
      The kind of property batch operation, determined by the operation to be performed. The following are the possible values.


      - Invalid - Indicates the property operation is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Put - The operation will create or edit a property. The value is 1.

      - Get - The operation will get a property. The value is 2.

      - CheckExists - The operation will check that a property exists or doesn't exists, depending on the provided value. The value is 3.

      - CheckSequence - The operation will ensure that the sequence number is equal to the provided value. The value is 4.

      - Delete - The operation will delete a property. The value is 5.

      - CheckValue - The operation will ensure that the value of a property is equal to the provided value. The value is 7.
    types:
    - uid: CheckExists
    typesTitle: string
    name: Kind
  - description: The name of the Service Fabric property.
    types:
    - uid: string
    name: PropertyName
- name: CheckSequencePropertyBatchOperation
  description: >
    Compares the Sequence Number of a property with the SequenceNumber argument.  A property's sequence number can be thought of as that property's version.  Every time the property is modified, its sequence number is increased.  The sequence number can be found in a property's metadata.  The comparison fails if the sequence numbers are not equal.  CheckSequencePropertyBatchOperation is generally used as a precondition for the write operations in the batch.  Note that if one PropertyBatchOperation in a PropertyBatch fails,  the entire batch fails and cannot be committed in a transactional manner.
  kind: object
  properties:
  - description: The expected sequence number.
    types:
    - uid: string
    name: SequenceNumber
  - description: >
      The kind of property batch operation, determined by the operation to be performed. The following are the possible values.


      - Invalid - Indicates the property operation is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Put - The operation will create or edit a property. The value is 1.

      - Get - The operation will get a property. The value is 2.

      - CheckExists - The operation will check that a property exists or doesn't exists, depending on the provided value. The value is 3.

      - CheckSequence - The operation will ensure that the sequence number is equal to the provided value. The value is 4.

      - Delete - The operation will delete a property. The value is 5.

      - CheckValue - The operation will ensure that the value of a property is equal to the provided value. The value is 7.
    types:
    - uid: CheckSequence
    typesTitle: string
    name: Kind
  - description: The name of the Service Fabric property.
    types:
    - uid: string
    name: PropertyName
- name: CheckValuePropertyBatchOperation
  description: >
    Represents a PropertyBatchOperation that compares the value of the property with the expected value.  The CheckValuePropertyBatchOperation is generally used as a precondition for the write operations in the batch.  Note that if one PropertyBatchOperation in a PropertyBatch fails,  the entire batch fails and cannot be committed in a transactional manner.
  kind: object
  properties:
  - description: Describes a Service Fabric property value.
    types:
    - uid: BinaryPropertyValue
    - uid: Int64PropertyValue
    - uid: DoublePropertyValue
    - uid: StringPropertyValue
    - uid: GuidPropertyValue
    typesTitle: PropertyValue
    name: Value
  - description: >
      The kind of property batch operation, determined by the operation to be performed. The following are the possible values.


      - Invalid - Indicates the property operation is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Put - The operation will create or edit a property. The value is 1.

      - Get - The operation will get a property. The value is 2.

      - CheckExists - The operation will check that a property exists or doesn't exists, depending on the provided value. The value is 3.

      - CheckSequence - The operation will ensure that the sequence number is equal to the provided value. The value is 4.

      - Delete - The operation will delete a property. The value is 5.

      - CheckValue - The operation will ensure that the value of a property is equal to the provided value. The value is 7.
    types:
    - uid: CheckValue
    typesTitle: string
    name: Kind
  - description: The name of the Service Fabric property.
    types:
    - uid: string
    name: PropertyName
- name: DeletePropertyBatchOperation
  description: >
    Represents a PropertyBatchOperation that deletes a specified property if it exists.  Note that if one PropertyBatchOperation in a PropertyBatch fails,  the entire batch fails and cannot be committed in a transactional manner.
  kind: object
  properties:
  - description: >
      The kind of property batch operation, determined by the operation to be performed. The following are the possible values.


      - Invalid - Indicates the property operation is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Put - The operation will create or edit a property. The value is 1.

      - Get - The operation will get a property. The value is 2.

      - CheckExists - The operation will check that a property exists or doesn't exists, depending on the provided value. The value is 3.

      - CheckSequence - The operation will ensure that the sequence number is equal to the provided value. The value is 4.

      - Delete - The operation will delete a property. The value is 5.

      - CheckValue - The operation will ensure that the value of a property is equal to the provided value. The value is 7.
    types:
    - uid: Delete
    typesTitle: string
    name: Kind
  - description: The name of the Service Fabric property.
    types:
    - uid: string
    name: PropertyName
- name: GetPropertyBatchOperation
  description: >
    Represents a PropertyBatchOperation that gets the specified property if it exists.  Note that if one PropertyBatchOperation in a PropertyBatch fails,  the entire batch fails and cannot be committed in a transactional manner.
  kind: object
  properties:
  - description: >
      Whether or not to return the property value with the metadata.  True if values should be returned with the metadata; False to return only property metadata.
    types:
    - uid: boolean
    name: IncludeValue
  - description: >
      The kind of property batch operation, determined by the operation to be performed. The following are the possible values.


      - Invalid - Indicates the property operation is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Put - The operation will create or edit a property. The value is 1.

      - Get - The operation will get a property. The value is 2.

      - CheckExists - The operation will check that a property exists or doesn't exists, depending on the provided value. The value is 3.

      - CheckSequence - The operation will ensure that the sequence number is equal to the provided value. The value is 4.

      - Delete - The operation will delete a property. The value is 5.

      - CheckValue - The operation will ensure that the value of a property is equal to the provided value. The value is 7.
    types:
    - uid: Get
    typesTitle: string
    name: Kind
  - description: The name of the Service Fabric property.
    types:
    - uid: string
    name: PropertyName
- name: PutPropertyBatchOperation
  description: >
    Puts the specified property under the specified name.  Note that if one PropertyBatchOperation in a PropertyBatch fails,  the entire batch fails and cannot be committed in a transactional manner.
  kind: object
  properties:
  - description: Describes a Service Fabric property value.
    types:
    - uid: BinaryPropertyValue
    - uid: Int64PropertyValue
    - uid: DoublePropertyValue
    - uid: StringPropertyValue
    - uid: GuidPropertyValue
    typesTitle: PropertyValue
    name: Value
  - description: The property's custom type id. Using this property, the user is able to tag the type of the value of the property.
    types:
    - uid: string
    name: CustomTypeId
  - description: >
      The kind of property batch operation, determined by the operation to be performed. The following are the possible values.


      - Invalid - Indicates the property operation is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Put - The operation will create or edit a property. The value is 1.

      - Get - The operation will get a property. The value is 2.

      - CheckExists - The operation will check that a property exists or doesn't exists, depending on the provided value. The value is 3.

      - CheckSequence - The operation will ensure that the sequence number is equal to the provided value. The value is 4.

      - Delete - The operation will delete a property. The value is 5.

      - CheckValue - The operation will ensure that the value of a property is equal to the provided value. The value is 7.
    types:
    - uid: Put
    typesTitle: string
    name: Kind
  - description: The name of the Service Fabric property.
    types:
    - uid: string
    name: PropertyName
- name: SuccessfulPropertyBatchInfo
  description: Derived from PropertyBatchInfo. Represents the property batch succeeding. Contains the results of any "Get" operations in the batch.
  kind: object
  properties:
  - description: A map containing the properties that were requested through any "Get" property batch operations. The key represents the index of the "Get" operation in the original request, in string form. The value is the property. If a property is not found, it will not be in the map.
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: PropertyInfo
      uid: object
    name: Properties
  - description: >
      The kind of property batch info, determined by the results of a property batch. The following are the possible values.


      - Invalid - Indicates the property batch info is invalid. All Service Fabric enumerations have the invalid type.

      - Successful - The property batch succeeded.

      - Failed - The property batch failed.
    types:
    - uid: Successful
    typesTitle: string
    name: Kind
- name: FailedPropertyBatchInfo
  description: Derived from PropertyBatchInfo. Represents the property batch failing. Contains information about the specific batch failure.
  kind: object
  properties:
  - description: The error message of the failed operation. Describes the exception thrown due to the first unsuccessful operation in the property batch.
    types:
    - uid: string
    name: ErrorMessage
  - description: The index of the unsuccessful operation in the property batch.
    types:
    - uid: integer
    name: OperationIndex
  - description: >
      The kind of property batch info, determined by the results of a property batch. The following are the possible values.


      - Invalid - Indicates the property batch info is invalid. All Service Fabric enumerations have the invalid type.

      - Successful - The property batch succeeded.

      - Failed - The property batch failed.
    types:
    - uid: Failed
    typesTitle: string
    name: Kind
- name: FabricErrorCodes
  description: >
    Defines the fabric error codes that be returned as part of the error object in response to Service Fabric API operations that are not successful. Following are the error code values that can be returned for a specific HTTP status code.

      - Possible values of the error code for HTTP status code 400 (Bad Request)
        - "FABRIC_E_INVALID_PARTITION_KEY"
        - "FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR"
        - "FABRIC_E_INVALID_ADDRESS"
        - "FABRIC_E_APPLICATION_NOT_UPGRADING"
        - "FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR"
        - "FABRIC_E_FABRIC_NOT_UPGRADING"
        - "FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR"
        - "FABRIC_E_INVALID_CONFIGURATION"
        - "FABRIC_E_INVALID_NAME_URI"
        - "FABRIC_E_PATH_TOO_LONG"
        - "FABRIC_E_KEY_TOO_LARGE"
        - "FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED"
        - "FABRIC_E_INVALID_ATOMIC_GROUP"
        - "FABRIC_E_VALUE_EMPTY"

      - Possible values of the error code for HTTP status code 404 (Not Found)
        - "FABRIC_E_NODE_NOT_FOUND"
        - "FABRIC_E_APPLICATION_TYPE_NOT_FOUND"
        - "FABRIC_E_APPLICATION_NOT_FOUND"
        - "FABRIC_E_SERVICE_TYPE_NOT_FOUND"
        - "FABRIC_E_SERVICE_DOES_NOT_EXIST"
        - "FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND"
        - "FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND"
        - "FABRIC_E_PARTITION_NOT_FOUND"
        - "FABRIC_E_REPLICA_DOES_NOT_EXIST"
        - "FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST"
        - "FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND"
        - "FABRIC_E_DIRECTORY_NOT_FOUND"
        - "FABRIC_E_FABRIC_VERSION_NOT_FOUND"
        - "FABRIC_E_FILE_NOT_FOUND"
        - "FABRIC_E_NAME_DOES_NOT_EXIST"
        - "FABRIC_E_PROPERTY_DOES_NOT_EXIST"
        - "FABRIC_E_ENUMERATION_COMPLETED"
        - "FABRIC_E_SERVICE_MANIFEST_NOT_FOUND"
        - "FABRIC_E_KEY_NOT_FOUND"
        - "FABRIC_E_HEALTH_ENTITY_NOT_FOUND"

      - Possible values of the error code for HTTP status code 409 (Conflict)
        - "FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS"
        - "FABRIC_E_APPLICATION_ALREADY_EXISTS"
        - "FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION"
        - "FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS"
        - "FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS"
        - "FABRIC_E_SERVICE_ALREADY_EXISTS"
        - "FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS"
        - "FABRIC_E_APPLICATION_TYPE_IN_USE"
        - "FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION"
        - "FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS"
        - "FABRIC_E_FABRIC_VERSION_IN_USE"
        - "FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS"
        - "FABRIC_E_NAME_ALREADY_EXISTS"
        - "FABRIC_E_NAME_NOT_EMPTY"
        - "FABRIC_E_PROPERTY_CHECK_FAILED"
        - "FABRIC_E_SERVICE_METADATA_MISMATCH"
        - "FABRIC_E_SERVICE_TYPE_MISMATCH"
        - "FABRIC_E_HEALTH_STALE_REPORT"
        - "FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED"
        - "FABRIC_E_NODE_HAS_NOT_STOPPED_YET"
        - "FABRIC_E_INSTANCE_ID_MISMATCH"

      - Possible values of the error code for HTTP status code 413 (Request Entity Too Large)
        - "FABRIC_E_VALUE_TOO_LARGE"

      - Possible values of the error code for HTTP status code 500 (Internal Server Error)
        - "FABRIC_E_NODE_IS_UP"

      - Possible values of the error code for HTTP status code 503 (Service Unavailable)
        - "FABRIC_E_NO_WRITE_QUORUM"
        - "FABRIC_E_NOT_PRIMARY"
        - "FABRIC_E_NOT_READY"
        - "FABRIC_E_RECONFIGURATION_PENDING"
        - "FABRIC_E_SERVICE_OFFLINE"
        - "E_ABORT"
        - "FABRIC_E_VALUE_TOO_LARGE"

      - Possible values of the error code for HTTP status code 504 (Gateway Timeout)
        - "FABRIC_E_COMMUNICATION_ERROR"
        - "FABRIC_E_OPERATION_NOT_COMPLETE"
        - "FABRIC_E_TIMEOUT"
  kind: enum
  properties:
  - types:
    - uid: string
    name: FABRIC_E_INVALID_PARTITION_KEY
  - types:
    - uid: string
    name: FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR
  - types:
    - uid: string
    name: FABRIC_E_INVALID_ADDRESS
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_NOT_UPGRADING
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_NOT_UPGRADING
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR
  - types:
    - uid: string
    name: FABRIC_E_INVALID_CONFIGURATION
  - types:
    - uid: string
    name: FABRIC_E_INVALID_NAME_URI
  - types:
    - uid: string
    name: FABRIC_E_PATH_TOO_LONG
  - types:
    - uid: string
    name: FABRIC_E_KEY_TOO_LARGE
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED
  - types:
    - uid: string
    name: FABRIC_E_INVALID_ATOMIC_GROUP
  - types:
    - uid: string
    name: FABRIC_E_VALUE_EMPTY
  - types:
    - uid: string
    name: FABRIC_E_NODE_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_TYPE_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_TYPE_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_DOES_NOT_EXIST
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_PARTITION_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_REPLICA_DOES_NOT_EXIST
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST
  - types:
    - uid: string
    name: FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_DIRECTORY_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_VERSION_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_FILE_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_NAME_DOES_NOT_EXIST
  - types:
    - uid: string
    name: FABRIC_E_PROPERTY_DOES_NOT_EXIST
  - types:
    - uid: string
    name: FABRIC_E_ENUMERATION_COMPLETED
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_MANIFEST_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_KEY_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_HEALTH_ENTITY_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_ALREADY_EXISTS
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_ALREADY_EXISTS
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_TYPE_IN_USE
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_VERSION_IN_USE
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS
  - types:
    - uid: string
    name: FABRIC_E_NAME_ALREADY_EXISTS
  - types:
    - uid: string
    name: FABRIC_E_NAME_NOT_EMPTY
  - types:
    - uid: string
    name: FABRIC_E_PROPERTY_CHECK_FAILED
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_METADATA_MISMATCH
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_TYPE_MISMATCH
  - types:
    - uid: string
    name: FABRIC_E_HEALTH_STALE_REPORT
  - types:
    - uid: string
    name: FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED
  - types:
    - uid: string
    name: FABRIC_E_NODE_HAS_NOT_STOPPED_YET
  - types:
    - uid: string
    name: FABRIC_E_INSTANCE_ID_MISMATCH
  - types:
    - uid: string
    name: FABRIC_E_VALUE_TOO_LARGE
  - types:
    - uid: string
    name: FABRIC_E_NO_WRITE_QUORUM
  - types:
    - uid: string
    name: FABRIC_E_NOT_PRIMARY
  - types:
    - uid: string
    name: FABRIC_E_NOT_READY
  - types:
    - uid: string
    name: FABRIC_E_RECONFIGURATION_PENDING
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_OFFLINE
  - types:
    - uid: string
    name: E_ABORT
  - types:
    - uid: string
    name: FABRIC_E_COMMUNICATION_ERROR
  - types:
    - uid: string
    name: FABRIC_E_OPERATION_NOT_COMPLETE
  - types:
    - uid: string
    name: FABRIC_E_TIMEOUT
  - types:
    - uid: string
    name: FABRIC_E_NODE_IS_UP
- name: ApplicationHealthEvaluation
  description: Represents health evaluation for an application, containing information about the data and the algorithm used by the health store to evaluate health.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: Application
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: The name of the application, including the 'fabric:' URI scheme.
    types:
    - uid: string
    name: ApplicationName
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: ApplicationsHealthEvaluation
  description: Represents health evaluation for applications, containing health evaluations for each unhealthy application that impacted current aggregated health state.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: Applications
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: Maximum allowed percentage of unhealthy applications from the ClusterHealthPolicy.
    types:
    - uid: integer
    name: MaxPercentUnhealthyApplications
  - description: Total number of applications from the health store.
    types:
    - uid: integer
    name: TotalCount
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: ApplicationTypeApplicationsHealthEvaluation
  description: Represents health evaluation for applications of a particular application type. The application type applications evaluation can be returned when cluster health evaluation returns unhealthy aggregated health state, either Error or Warning. It contains health evaluations for each unhealthy application of the included application type that impacted current aggregated health state.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: ApplicationTypeApplications
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: The application type name as defined in the application manifest.
    types:
    - uid: string
    name: ApplicationTypeName
  - description: Maximum allowed percentage of unhealthy applications for the application type, specified as an entry in ApplicationTypeHealthPolicyMap.
    types:
    - uid: integer
    name: MaxPercentUnhealthyApplications
  - description: Total number of applications of the application type found in the health store.
    types:
    - uid: integer
    name: TotalCount
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: DeltaNodesCheckHealthEvaluation
  description: >
    Represents health evaluation for delta nodes, containing health evaluations for each unhealthy node that impacted current aggregated health state.

    Can be returned during cluster upgrade when the aggregated health state of the cluster is Warning or Error.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: DeltaNodesCheck
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: Number of nodes with aggregated heath state Error in the health store at the beginning of the cluster upgrade.
    types:
    - uid: integer
    name: BaselineErrorCount
  - description: Total number of nodes in the health store at the beginning of the cluster upgrade.
    types:
    - uid: integer
    name: BaselineTotalCount
  - description: Maximum allowed percentage of delta unhealthy nodes from the ClusterUpgradeHealthPolicy.
    types:
    - uid: integer
    name: MaxPercentDeltaUnhealthyNodes
  - description: Total number of nodes in the health store.
    types:
    - uid: integer
    name: TotalCount
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: DeployedApplicationHealthEvaluation
  description: >
    Represents health evaluation for a deployed application, containing information about the data and the algorithm used by the health store to evaluate health.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: DeployedApplication
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: The name of a Service Fabric node.
    types:
    - uid: string
    name: NodeName
  - description: The name of the application, including the 'fabric:' URI scheme.
    types:
    - uid: string
    name: ApplicationName
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: DeployedApplicationsHealthEvaluation
  description: >
    Represents health evaluation for deployed applications, containing health evaluations for each unhealthy deployed application that impacted current aggregated health state.

    Can be returned when evaluating application health and the aggregated health state is either Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: DeployedApplications
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: Maximum allowed percentage of unhealthy deployed applications from the ApplicationHealthPolicy.
    types:
    - uid: integer
    name: MaxPercentUnhealthyDeployedApplications
  - description: Total number of deployed applications of the application in the health store.
    types:
    - uid: integer
    name: TotalCount
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: DeployedServicePackageHealthEvaluation
  description: Represents health evaluation for a deployed service package, containing information about the data and the algorithm used by health store to evaluate health. The evaluation is returned only when the aggregated health state is either Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: DeployedServicePackage
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: The name of a Service Fabric node.
    types:
    - uid: string
    name: NodeName
  - description: The name of the application, including the 'fabric:' URI scheme.
    types:
    - uid: string
    name: ApplicationName
  - description: The name of the service manifest.
    types:
    - uid: string
    name: ServiceManifestName
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: DeployedServicePackagesHealthEvaluation
  description: Represents health evaluation for deployed service packages, containing health evaluations for each unhealthy deployed service package that impacted current aggregated health state. Can be returned when evaluating deployed application health and the aggregated health state is either Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: DeployedServicePackages
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: Total number of deployed service packages of the deployed application in the health store.
    types:
    - uid: integer
    name: TotalCount
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: EventHealthEvaluation
  description: >
    Represents health evaluation of a HealthEvent that was reported on the entity.

    The health evaluation is returned when evaluating health of an entity results in Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: Event
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: Indicates whether warnings are treated with the same severity as errors. The field is specified in the health policy used to evaluate the entity.
    types:
    - uid: boolean
    name: ConsiderWarningAsError
  - description: >
      Represents health information reported on a health entity, such as cluster, application or node, with additional metadata added by the Health Manager.
    types:
    - uid: HealthEvent
    name: UnhealthyEvent
- name: NodeHealthEvaluation
  description: Represents health evaluation for a node, containing information about the data and the algorithm used by health store to evaluate health. The evaluation is returned only when the aggregated health state is either Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: Node
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: The name of a Service Fabric node.
    types:
    - uid: string
    name: NodeName
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: NodesHealthEvaluation
  description: Represents health evaluation for nodes, containing health evaluations for each unhealthy node that impacted current aggregated health state. Can be returned when evaluating cluster health and the aggregated health state is either Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: Nodes
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: Maximum allowed percentage of unhealthy nodes from the ClusterHealthPolicy.
    types:
    - uid: integer
    name: MaxPercentUnhealthyNodes
  - description: Total number of nodes found in the health store.
    types:
    - uid: integer
    name: TotalCount
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: PartitionHealthEvaluation
  description: Represents health evaluation for a partition, containing information about the data and the algorithm used by health store to evaluate health. The evaluation is returned only when the aggregated health state is either Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: Partition
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition id is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the ids of its partitions would be different.
    types:
    - uid: string
    name: PartitionId
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: PartitionsHealthEvaluation
  description: Represents health evaluation for the partitions of a service, containing health evaluations for each unhealthy partition that impacts current aggregated health state. Can be returned when evaluating service health and the aggregated health state is either Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: Partitions
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: Maximum allowed percentage of unhealthy partitions per service from the ServiceTypeHealthPolicy.
    types:
    - uid: integer
    name: MaxPercentUnhealthyPartitionsPerService
  - description: Total number of partitions of the service from the health store.
    types:
    - uid: integer
    name: TotalCount
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: ReplicaHealthEvaluation
  description: Represents health evaluation for a replica, containing information about the data and the algorithm used by health store to evaluate health. The evaluation is returned only when the aggregated health state is either Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: Replica
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition id is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the ids of its partitions would be different.
    types:
    - uid: string
    name: PartitionId
  - description: Id of a stateful service replica or a stateless service instance. This id is used in the queries that apply to both stateful and stateless services. It is used by Service Fabric to uniquely identify a replica of a partition of a stateful service or an instance of a stateless service partition. It is unique within a partition and does not change for the lifetime of the replica or the instance. If a stateful replica gets dropped and another replica gets created on the same node for the same partition, it will get a different value for the id. If a staless instance is failed over on the same or different node it will get a different value for the id.
    types:
    - uid: string
    name: ReplicaOrInstanceId
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: ReplicasHealthEvaluation
  description: Represents health evaluation for replicas, containing health evaluations for each unhealthy replica that impacted current aggregated health state. Can be returned when evaluating partition health and the aggregated health state is either Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: Replicas
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: Maximum allowed percentage of unhealthy replicas per partition from the ApplicationHealthPolicy.
    types:
    - uid: integer
    name: MaxPercentUnhealthyReplicasPerPartition
  - description: Total number of replicas in the partition from the health store.
    types:
    - uid: integer
    name: TotalCount
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: ServiceHealthEvaluation
  description: Represents health evaluation for a service, containing information about the data and the algorithm used by health store to evaluate health. The evaluation is returned only when the aggregated health state is either Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: Service
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: The full name of the service with 'fabric:' URI scheme.
    types:
    - uid: string
    name: ServiceName
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: ServicesHealthEvaluation
  description: Represents health evaluation for services of a certain service type belonging to an application, containing health evaluations for each unhealthy service that impacted current aggregated health state. Can be returned when evaluating application health and the aggregated health state is either Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: Services
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: Name of the service type of the services.
    types:
    - uid: string
    name: ServiceTypeName
  - description: Maximum allowed percentage of unhealthy services from the ServiceTypeHealthPolicy.
    types:
    - uid: integer
    name: MaxPercentUnhealthyServices
  - description: Total number of services of the current service type in the application from the health store.
    types:
    - uid: integer
    name: TotalCount
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: SystemApplicationHealthEvaluation
  description: Represents health evaluation for the fabric:/System application, containing information about the data and the algorithm used by health store to evaluate health. The evaluation is returned only when the aggregated health state of the cluster is either Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: SystemApplication
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: UpgradeDomainDeltaNodesCheckHealthEvaluation
  description: >
    Represents health evaluation for delta unhealthy cluster nodes in an upgrade domain, containing health evaluations for each unhealthy node that impacted current aggregated health state.

    Can be returned during cluster upgrade when cluster aggregated health state is Warning or Error.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: UpgradeDomainDeltaNodesCheck
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: Name of the upgrade domain where nodes health is currently evaluated.
    types:
    - uid: string
    name: UpgradeDomainName
  - description: Number of upgrade domain nodes with aggregated heath state Error in the health store at the beginning of the cluster upgrade.
    types:
    - uid: integer
    name: BaselineErrorCount
  - description: Total number of upgrade domain nodes in the health store at the beginning of the cluster upgrade.
    types:
    - uid: integer
    name: BaselineTotalCount
  - description: Maximum allowed percentage of upgrade domain delta unhealthy nodes from the ClusterUpgradeHealthPolicy.
    types:
    - uid: integer
    name: MaxPercentDeltaUnhealthyNodes
  - description: Total number of upgrade domain nodes in the health store.
    types:
    - uid: integer
    name: TotalCount
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: UpgradeDomainNodesHealthEvaluation
  description: Represents health evaluation for cluster nodes in an upgrade domain, containing health evaluations for each unhealthy node that impacted current aggregated health state. Can be returned when evaluating cluster health during cluster upgrade and the aggregated health state is either Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: UpgradeDomainNodes
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: Name of the upgrade domain where nodes health is currently evaluated.
    types:
    - uid: string
    name: UpgradeDomainName
  - description: Maximum allowed percentage of unhealthy nodes from the ClusterHealthPolicy.
    types:
    - uid: integer
    name: MaxPercentUnhealthyNodes
  - description: Total number of nodes in the current upgrade domain.
    types:
    - uid: integer
    name: TotalCount
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: EntityKind
  description: >
    The entity type of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

      - Invalid - Indicates an invalid entity kind. All Service Fabric enumerations have the invalid type. The value is zero.
      - Node - Indicates the entity is a Service Fabric node. The value is 1.
      - Partition - Indicates the entity is a Service Fabric partition. The value is 2.
      - Service - Indicates the entity is a Service Fabric service. The value is 3.
      - Application - Indicates the entity is a Service Fabric application. The value is 4.
      - Replica - Indicates the entity is a Service Fabric replica. The value is 5.
      - DeployedApplication - Indicates the entity is a Service Fabric deployed application. The value is 6.
      - DeployedServicePackage - Indicates the entity is a Service Fabric deployed service package. The value is 7.
      - Cluster - Indicates the entity is a Service Fabric cluster. The value is 8.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: Node
  - types:
    - uid: string
    name: Partition
  - types:
    - uid: string
    name: Service
  - types:
    - uid: string
    name: Application
  - types:
    - uid: string
    name: Replica
  - types:
    - uid: string
    name: DeployedApplication
  - types:
    - uid: string
    name: DeployedServicePackage
  - types:
    - uid: string
    name: Cluster
- name: HealthStateCount
  description: >
    Represents information about how many health entities are in Ok, Warning and Error health state.
  kind: object
  properties:
  - description: The number of health entities with aggregated health state Ok.
    types:
    - uid: integer
    name: OkCount
  - description: The number of health entities with aggregated health state Warning.
    types:
    - uid: integer
    name: WarningCount
  - description: The number of health entities with aggregated health state Error.
    types:
    - uid: integer
    name: ErrorCount
- name: ServicePartitionKind
  description: >
    The kind of partitioning scheme used to partition the service. Possible values are following.

        -	Invalid - Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        -	Singleton - Indicates that there is only one partition, and SingletonPartitionSchemeDescription was specified while creating the service. The value is 1.
        -	Int64Range - Indicates that the partition is based on Int64 key ranges, and UniformInt64RangePartitionSchemeDescription was specified while creating the service. The value is 2.
        -	Named - Indicates that the partition is based on string names, and NamedPartitionInformation  was specified while creating the service. The value is 3.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: Singleton
  - types:
    - uid: string
    name: Int64Range
  - types:
    - uid: string
    name: Named
- name: SafetyCheckKind
  description: >
    The kind of safety check performed by service fabric before continuing with the operations. These checks ensure the availability of the service and the reliability of the state. Following are the kinds of safety checks.


    - Invalid - Indicates that the upgrade safety check kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

    - EnsureSeedNodeQuorum - Indicates that if we bring down the node then this will result in global seed node quorum loss. The value is 1.

    - EnsurePartitionQuorum - Indicates that there is some partition for which if we bring down the replica on the node, it will result in quorum loss for that partition. The value is 2.

    - WaitForPrimaryPlacement - Indicates that there is some replica on the node that was moved out of this node due to upgrade. Service Fabric is now waiting for the primary to be moved back to this node. The value is 3.

    - WaitForPrimarySwap - Indicates that Service Fabric is waiting for a primary replica to be moved out of the node before starting upgrade on that node. The value is 4.

    - WaitForReconfiguration - Indicates that there is some replica on the node that is involved in a reconfiguration. Service Fabric is waiting for the reconfiguration to be complete before staring upgrade on that node. The value is 5.

    - WaitForInbuildReplica - Indicates that there is either a replica on the node that is going through copy, or there is a primary replica on the node that is copying data to some other replica. In both cases, bringing down the replica on the node due to upgrade will abort the copy. The value is 6.

    - EnsureAvailability - Indicates that there is either a stateless service partition on the node having exactly one instance, or there is a primary replica on the node for which the partition is quorum loss. In both cases, bringing down the replicas due to upgrade will result in loss of availability. The value is 7.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: EnsureSeedNodeQuorum
  - types:
    - uid: string
    name: EnsurePartitionQuorum
  - types:
    - uid: string
    name: WaitForPrimaryPlacement
  - types:
    - uid: string
    name: WaitForPrimarySwap
  - types:
    - uid: string
    name: WaitForReconfiguration
  - types:
    - uid: string
    name: WaitForInbuildReplica
  - types:
    - uid: string
    name: EnsureAvailability
- name: ServicePlacementPolicyType
  description: >
    The type of placement policy for a service fabric service. Following are the possible values.

      - Invalid - Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
      - InvalidDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1.
      - RequiredDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2.
      - PreferredPrimaryDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3.
      - RequiredDomainDistribution - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4.
      - NonPartiallyPlaceService - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: InvalidDomain
  - types:
    - uid: string
    name: RequiredDomain
  - types:
    - uid: string
    name: PreferredPrimaryDomain
  - types:
    - uid: string
    name: RequiredDomainDistribution
  - types:
    - uid: string
    name: NonPartiallyPlaceService
- name: Epoch
  description: >
    An Epoch is a configuration number for the partition as a whole. When the configuration of the replica set changes, for example when the Primary replica changes, the operations that are replicated from the new Primary replica are said to be a new Epoch from the ones which were sent by the old Primary replica.
  kind: object
  properties:
  - description: The current configuration number of this Epoch. The configuration number is an increasing value that is updated whenever the configuration of this replica set changes.
    types:
    - uid: string
    name: ConfigurationVersion
  - description: The current dataloss number of this Epoch. The data loss number property is an increasing value which is updated whenever data loss is suspected, as when loss of a quorum of replicas in the replica set that includes the Primary replica.
    types:
    - uid: string
    name: DataLossVersion
- name: ServiceKind
  description: >
    The kind of service (Stateless or Stateful). Following are the possible values.


    - Invalid - Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

    - Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1.

    - Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: Stateless
  - types:
    - uid: string
    name: Stateful
- name: ServicePartitionStatus
  description: >
    The status of the service fabric service partition. Possible values are following.

      - Invalid - Indicates the partition status is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
      - Ready - Indicates that the partition is ready. This means that for a stateless service partition there is atleast one instance that is up and for a stateful service partition the number of ready replicas is greater than or equal to the MinReplicaSetSize. The value is 1.
      - NotReady - Indicates that the partition is not ready. This status is returned when none of the other states apply. The value is 2.
      - InQuorumLoss  - Indicates that the partition is in quorum loss. This means that number of replicas that are up and participating in a replica set is less than MinReplicaSetSize for this partition. The value is 3.
      - Reconfiguring - Indicates that the partition is undergoing reconfiguration of its replica sets. This can happen due to failover, upgrade, load balancing or addition or removal of replicas from the replica set. The value is 4.
      - Deleting - Indicates that the partition is being deleted. The value is 5.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: Ready
  - types:
    - uid: string
    name: NotReady
  - types:
    - uid: string
    name: InQuorumLoss
  - types:
    - uid: string
    name: Reconfiguring
  - types:
    - uid: string
    name: Deleting
- name: ServiceTypeExtensionDescription
  description: List of service type extensions.
  kind: object
  properties:
  - description: The name of the extension.
    types:
    - uid: string
    name: Key
  - description: The extension value.
    types:
    - uid: string
    name: Value
- name: ServiceStatus
  description: >
    The status of the application. Possible values are:


    - Unknown - Indicates the service status is unknown. The value is zero.

    - Active - Indicates the service status is active. The value is 1.

    - Upgrading - Indicates the service is upgrading. The value is 2.

    - Deleting - Indicates the service is being deleted. The value is 3.

    - Creating - Indicates the service is being created. The value is 4.

    - Failed - Indicates creation or deletion was terminated due to persistent failures. Another create/delete request can be accepted. The value is 5.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Unknown
  - types:
    - uid: string
    name: Active
  - types:
    - uid: string
    name: Upgrading
  - types:
    - uid: string
    name: Deleting
  - types:
    - uid: string
    name: Creating
  - types:
    - uid: string
    name: Failed
- name: PartitionScheme
  description: >
    Enumerates the ways that a service can be partitioned. Possible values are:


    - Invalid - Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

    - Singleton - Indicates that the partition is based on string names, and is a SingletonPartitionSchemeDescription object, The value is 1.

    - UniformInt64Range - Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionSchemeDescription object. The value is 2.

    - Named - Indicates that the partition is based on string names, and is a NamedPartitionSchemeDescription object. The value is 3
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: Singleton
  - types:
    - uid: string
    name: UniformInt64Range
  - types:
    - uid: string
    name: Named
- name: ServiceCorrelationDescription
  description: Creates a particular correlation between services.
  kind: object
  properties:
  - description: >
      The service correlation scheme. Possible values are following.

        - Invalid - An invalid correlation scheme. Cannot be used. The value is zero.
        - Affinity - Indicates that this service has an affinity relationship with another service. Provided for backwards compatibility, consider preferring the Aligned or NonAlignedAffinity options. The value is 1.
        - AlignedAffinity - Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 2.
        - NonAlignedAffinity - Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 3.
    types:
    - uid: ServiceCorrelationScheme
    name: Scheme
  - description: The full name of the service with 'fabric:' URI scheme.
    types:
    - uid: string
    name: ServiceName
- name: ServiceLoadMetricDescription
  description: Specifies a metric to load balance a service during runtime.
  kind: object
  properties:
  - description: The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive.
    types:
    - uid: string
    name: Name
  - description: >
      Determines the metric weight relative to the other metrics that are configured for this service. During runtime, if two metrics end up in conflict, the Cluster Resource Manager prefers the metric with the higher weight. Possible values are following.

        - Zero - Disables resource balancing for this metric. This value is zero.
        - Low - Specifies the metric weight of the service load as Low. The value is 1.
        - Medium - Specifies the metric weight of the service load as Medium. The value is 2.
        - High - Specifies the metric weight of the service load as High. The value is 3.
    types:
    - uid: ServiceLoadMetricWeight
    name: Weight
  - description: Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica.
    types:
    - uid: integer
    name: PrimaryDefaultLoad
  - description: Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica.
    types:
    - uid: integer
    name: SecondaryDefaultLoad
  - description: Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric.
    types:
    - uid: integer
    name: DefaultLoad
- name: MoveCost
  description: >
    Specifies the move cost for the service. Possible values are the following.

      - Zero - Zero move cost. This value is zero.
      - Low - Specifies the move cost of the service as Low. The value is 1.
      - Medium - Specifies the move cost of the service as Medium. The value is 2.
      - High - Specifies the move cost of the service as High. The value is 3.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Zero
  - types:
    - uid: string
    name: Low
  - types:
    - uid: string
    name: Medium
  - types:
    - uid: string
    name: High
- name: ServicePackageActivationMode
  description: >
    The activation mode of service package to be used for a Service Fabric service. This is specified at the time of creating the Service. Possible values are following.

      - SharedProcess - This is the default activation mode. With this activation mode, replicas or instances from different partition(s) of service, on a given node, will share same activation of service package on a node. The value is zero.
      - ExclusiveProcess - With this activation mode, each replica or instance of service, on a given node, will have its own dedicated activation of service package on a node. The value is 1.
  kind: enum
  properties:
  - types:
    - uid: string
    name: SharedProcess
  - types:
    - uid: string
    name: ExclusiveProcess
- name: ReplicaRole
  description: >
    The role of a replica of a stateful service. Possible values are following.
      - Unknown - Indicates the initial role that a replica is created in. The value is zero.
      - None - Specifies that the replica has no responsibility in regard to the replica set. The value is 1
      - Primary - Refers to the replica in the set on which all read and write operations are complete in order to enforce strong consistency semantics. Read operations are handled directly by the Primary replica, while write operations must be acknowledged by a quorum of the replicas in the replica set. There can only be one Primary replica in a replica set at a time. The value is 2.
      - IdleSecondary - Refers to a replica in the set that receives a state transfer from the Primary replica to prepare for becoming an active Secondary replica. There can be multiple Idle Secondary replicas in a replica set at a time. Idle Secondary replicas do not count as a part of a write quorum. The value is 3.
      - ActiveSecondary - Refers to a replica in the set that receives state updates from the Primary replica, applies them, and sends acknowledgements back. Secondary replicas must participate in the write quorum for a replica set. There can be multiple active Secondary replicas in a replica set at a time. The number of active Secondary replicas is configurable that the reliability subsystem should maintain. The value is 4.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Unknown
  - types:
    - uid: string
    name: None
  - types:
    - uid: string
    name: Primary
  - types:
    - uid: string
    name: IdleSecondary
  - types:
    - uid: string
    name: ActiveSecondary
- name: ReplicatorQueueStatus
  description: >
    Provides various statistics of the queue used in the service fabric replicator.

    Contains information about the service fabric replicator like the replication/copy queue utilization, last acknowledgement received timestamp, etc.

    Depending on the role of the replicator, the properties in this type imply different meanings.
  kind: object
  properties:
  - description: Represents the utilization of the queue. A value of 0 indicates that the queue is empty and a value of 100 indicates the queue is full.
    types:
    - uid: integer
    name: QueueUtilizationPercentage
  - description: Represents the virtual memory consumed by the queue in bytes.
    types:
    - uid: string
    name: QueueMemorySize
  - description: >
      On a primary replicator, this is semantically the sequence number of the operation for which all the secondary replicas have sent an acknowledgement.

      On a secondary replicator, this is the smallest sequence number of the operation that is present in the queue.
    types:
    - uid: string
    name: FirstSequenceNumber
  - description: >
      On a primary replicator, this is semantically the highest sequence number of the operation for which all the secondary replicas have sent an acknowledgement.

      On a secondary replicator, this is semantically the highest sequence number that has been applied to the persistent state.
    types:
    - uid: string
    name: CompletedSequenceNumber
  - description: >
      On a primary replicator, this is semantically the highest sequence number of the operation for which a write quorum of the secondary replicas have sent an acknowledgement.

      On a secondary replicator, this is semantically the highest sequence number of the in-order operation received from the primary.
    types:
    - uid: string
    name: CommittedSequenceNumber
  - description: Represents the latest sequence number of the operation that is available in the queue.
    types:
    - uid: string
    name: LastSequenceNumber
- name: PropertyValueKind
  description: >
    The kind of property, determined by the type of data. Following are the possible values.


    - Invalid - Indicates the property is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

    - Binary - The data inside the property is a binary blob. The value is 1.

    - Int64 - The data inside the property is an int64. The value is 2.

    - Double - The data inside the property is a double. The value is 3.

    - String - The data inside the property is a wstring. The value is 4.

    - Guid - The data inside the property is a guid. The value is 5.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: Binary
  - types:
    - uid: string
    name: Int64
  - types:
    - uid: string
    name: Double
  - types:
    - uid: string
    name: String
  - types:
    - uid: string
    name: Guid
- name: PropertyBatchOperationKind
  description: >
    The kind of property batch operation, determined by the operation to be performed. The following are the possible values.


    - Invalid - Indicates the property operation is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

    - Put - The operation will create or edit a property. The value is 1.

    - Get - The operation will get a property. The value is 2.

    - CheckExists - The operation will check that a property exists or doesn't exists, depending on the provided value. The value is 3.

    - CheckSequence - The operation will ensure that the sequence number is equal to the provided value. The value is 4.

    - Delete - The operation will delete a property. The value is 5.

    - CheckValue - The operation will ensure that the value of a property is equal to the provided value. The value is 7.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: Put
  - types:
    - uid: string
    name: Get
  - types:
    - uid: string
    name: CheckExists
  - types:
    - uid: string
    name: CheckSequence
  - types:
    - uid: string
    name: Delete
  - types:
    - uid: string
    name: CheckValue
- name: Properties
  description: A map containing the properties that were requested through any "Get" property batch operations. The key represents the index of the "Get" operation in the original request, in string form. The value is the property. If a property is not found, it will not be in the map.
  kind: object
  properties:
  - description: Information about a Service Fabric property.
    types:
    - uid: PropertyInfo
    name: ''
- name: PropertyBatchInfoKind
  description: >
    The kind of property batch info, determined by the results of a property batch. The following are the possible values.


    - Invalid - Indicates the property batch info is invalid. All Service Fabric enumerations have the invalid type.

    - Successful - The property batch succeeded.

    - Failed - The property batch failed.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: Successful
  - types:
    - uid: string
    name: Failed
- name: HealthEvaluationKind
  description: >
    The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

      - Invalid - Indicates that the health evaluation is invalid. The value is zero.
      - Event - Indicates that the health evaluation is for a health event. The value is 1.
      - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
      - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
      - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
      - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
      - Services - Indicates that the health evaluation is for services of an application. The value is 6.
      - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
      - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
      - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
      - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
      - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
      - Node - Indicates that the health evaluation is for a node. The value is 12.
      - Replica - Indicates that the health evaluation is for a replica. The value is 13.
      - Partition - Indicates that the health evaluation is for a partition. The value is 14.
      - Service - Indicates that the health evaluation is for a service. The value is 15.
      - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
      - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
      - Application - Indicates that the health evaluation is for an application. The value is 18.
      - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
      - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
      - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: Event
  - types:
    - uid: string
    name: Replicas
  - types:
    - uid: string
    name: Partitions
  - types:
    - uid: string
    name: DeployedServicePackages
  - types:
    - uid: string
    name: DeployedApplications
  - types:
    - uid: string
    name: Services
  - types:
    - uid: string
    name: Nodes
  - types:
    - uid: string
    name: Applications
  - types:
    - uid: string
    name: SystemApplication
  - types:
    - uid: string
    name: UpgradeDomainDeployedApplications
  - types:
    - uid: string
    name: UpgradeDomainNodes
  - types:
    - uid: string
    name: Replica
  - types:
    - uid: string
    name: Partition
  - types:
    - uid: string
    name: DeployedServicePackage
  - types:
    - uid: string
    name: DeployedApplication
  - types:
    - uid: string
    name: Service
  - types:
    - uid: string
    name: Node
  - types:
    - uid: string
    name: Application
  - types:
    - uid: string
    name: DeltaNodesCheck
  - types:
    - uid: string
    name: UpgradeDomainDeltaNodesCheck
  - types:
    - uid: string
    name: ApplicationTypeApplications
- name: ServicePlacementInvalidDomainPolicyDescription
  description: Describes the policy to be used for placement of a Service Fabric service where a particular fault or upgrade domain should not be used for placement of the instances or replicas of that service.
  kind: object
  properties:
  - description: >
      The type of placement policy for a service fabric service. Following are the possible values.

        - Invalid - Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - InvalidDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1.
        - RequiredDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2.
        - PreferredPrimaryDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3.
        - RequiredDomainDistribution - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4.
        - NonPartiallyPlaceService - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5.
    types:
    - uid: InvalidDomain
    typesTitle: string
    name: Type
  - description: The name of the domain that should not be used for placement.
    types:
    - uid: string
    name: DomainName
- name: ServicePlacementPreferPrimaryDomainPolicyDescription
  description: >
    Describes the policy to be used for placement of a Service Fabric service where the service's Primary replicas should optimally be placed in a particular domain.


    This placement policy is usually used with fault domains in scenarios where the Service Fabric cluster is geographically distributed in order to indicate that a service's primary replica should be located in a particular fault domain, which in geo-distributed scenarios usually aligns with regional or datacenter boundaries. Note that since this is an optimization it is possible that the Primary replica may not end up located in this domain due to failures, capacity limits, or other constraints.
  kind: object
  properties:
  - description: >
      The type of placement policy for a service fabric service. Following are the possible values.

        - Invalid - Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - InvalidDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1.
        - RequiredDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2.
        - PreferredPrimaryDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3.
        - RequiredDomainDistribution - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4.
        - NonPartiallyPlaceService - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5.
    types:
    - uid: PreferPrimaryDomain
    typesTitle: string
    name: Type
  - description: The name of the domain that should used for placement as per this policy.
    types:
    - uid: string
    name: DomainName
- name: ServicePlacementRequiredDomainPolicyDescription
  description: Describes the policy to be used for placement of a Service Fabric service where the instances or replicas of that service must be placed in a particular domain
  kind: object
  properties:
  - description: >
      The type of placement policy for a service fabric service. Following are the possible values.

        - Invalid - Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - InvalidDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1.
        - RequiredDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2.
        - PreferredPrimaryDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3.
        - RequiredDomainDistribution - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4.
        - NonPartiallyPlaceService - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5.
    types:
    - uid: RequireDomain
    typesTitle: string
    name: Type
  - description: The name of the domain that should used for placement as per this policy.
    types:
    - uid: string
    name: DomainName
- name: ServicePlacementRequireDomainDistributionPolicyDescription
  description: >
    Describes the policy to be used for placement of a Service Fabric service where two replicas from the same partition should never be placed in the same fault or upgrade domain.


    While this is not common it can expose the service to an increased risk of concurrent failures due to unplanned outages or other cases of subsequent/concurrent failures. As an example, consider a case where replicas are deployed across different data center, with one replica per location. In the event that one of the datacenters goes offline, normally the replica that was placed in that datacenter will be packed into one of the remaining datacenters. If this is not desirable then this policy should be set.
  kind: object
  properties:
  - description: >
      The type of placement policy for a service fabric service. Following are the possible values.

        - Invalid - Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - InvalidDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1.
        - RequiredDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2.
        - PreferredPrimaryDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3.
        - RequiredDomainDistribution - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4.
        - NonPartiallyPlaceService - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5.
    types:
    - uid: RequireDomainDistribution
    typesTitle: string
    name: Type
  - description: The name of the domain that should used for placement as per this policy.
    types:
    - uid: string
    name: DomainName
- name: ServiceCorrelationScheme
  description: >
    The service correlation scheme. Possible values are following.

      - Invalid - An invalid correlation scheme. Cannot be used. The value is zero.
      - Affinity - Indicates that this service has an affinity relationship with another service. Provided for backwards compatibility, consider preferring the Aligned or NonAlignedAffinity options. The value is 1.
      - AlignedAffinity - Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 2.
      - NonAlignedAffinity - Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 3.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: Affinity
  - types:
    - uid: string
    name: AlignedAffinity
  - types:
    - uid: string
    name: NonAlignedAffinity
- name: ServiceLoadMetricWeight
  description: >
    Determines the metric weight relative to the other metrics that are configured for this service. During runtime, if two metrics end up in conflict, the Cluster Resource Manager prefers the metric with the higher weight. Possible values are following.

      - Zero - Disables resource balancing for this metric. This value is zero.
      - Low - Specifies the metric weight of the service load as Low. The value is 1.
      - Medium - Specifies the metric weight of the service load as Medium. The value is 2.
      - High - Specifies the metric weight of the service load as High. The value is 3.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Zero
  - types:
    - uid: string
    name: Low
  - types:
    - uid: string
    name: Medium
  - types:
    - uid: string
    name: High
examples: []
security: []
name: GetPartitionHealth
uid: localhost:19080.servicefabric.getpartitionhealth.getpartitionhealth

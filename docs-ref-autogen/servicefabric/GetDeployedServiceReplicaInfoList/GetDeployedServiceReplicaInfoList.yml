### YamlMime:RESTOperation
summary: Gets the list of replicas deployed on a Service Fabric node. Gets the list containing the information about replicas deployed on a Service Fabric node. The information include partition id, replica id, status of the replica, name of the service, name of the service type and other information. Use PartitionId or ServiceManifestName query parameters to return information about the deployed replicas matching the specified values for those parameters.
service: Service Fabric
apiVersion: 6.0.0.1
groupName: Get Deployed Service Replica Info List
produces:
- application/json
paths:
- content: GET http://localhost:19080/Nodes/{nodeName}/$/GetApplications/{applicationId}/$/GetReplicas?api-version=6.0.0.1
- content: GET http://localhost:19080/Nodes/{nodeName}/$/GetApplications/{applicationId}/$/GetReplicas?api-version=6.0.0.1&PartitionId={PartitionId}&ServiceManifestName={ServiceManifestName}&timeout={timeout}
  isOptional: true
uriParameters:
- in: path
  isRequired: true
  description: The name of the node.
  types:
  - uid: string
  name: nodeName
- in: path
  isRequired: true
  description: The identity of the application. This is typically the full name of the application without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the "~" character. For example, if the application name is "fabric://myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.
  types:
  - uid: string
  name: applicationId
- in: query
  isRequired: true
  description: The version of the API. This is a required parameter and it's value must be "6.0".
  types:
  - uid: string
  name: api-version
- in: query
  description: The identity of the partition.
  types:
  - uid: string
  format: uuid
  name: PartitionId
- in: query
  description: The name of a service manifest registered as part of an application type in a Service Fabric cluster.
  types:
  - uid: string
  name: ServiceManifestName
- in: query
  description: The server timeout for performing the operation in seconds. This specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
  types:
  - uid: integer
  format: int64
  name: timeout
responses:
- description: A successful operation will return 200 status code and the list of deployed service replica information.
  types:
  - isArray: true
    uid: DeployedStatefulServiceReplicaInfo
  - isArray: true
    uid: DeployedStatelessServiceInstanceInfo
  typesTitle: DeployedServiceReplicaInfo
  name: 200 OK
- description: An empty response is returned if the specified applicationId is not found on the specified node. An empty respose is also returned if there are no replicas matching the specified filter values for PartitionId or ServiceManifestName query parameters.
  name: 204 No Content
- description: The detailed error response.
  types:
  - uid: FabricError
  name: Other Status Codes
requestHeader: []
definitions:
- name: FabricError
  description: >
    The REST API operations for Service Fabric return standard HTTP status codes. This type defines the additional information returned from the Service Fabric API operations that are not successful.
  kind: object
  properties:
  - description: Error object containing error code and error message.
    types:
    - uid: FabricError_Error
    name: Error
- name: DeployedStatefulServiceReplicaInfo
  description: Information about a stateful service replica deployed on a node.
  kind: object
  properties:
  - description: >
      The kind of service (Stateless or Stateful). Following are the possible values.


      - Invalid - Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1.

      - Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
    types:
    - uid: Stateful
    typesTitle: string
    name: ServiceKind
  - description: The full name of the service with 'fabric:' URI scheme.
    types:
    - uid: string
    name: ServiceName
  - description: Name of the service type as specified in the service manifest.
    types:
    - uid: string
    name: ServiceTypeName
  - description: The name of the service manifest.
    types:
    - uid: string
    name: ServiceManifestName
  - description: The name of the code package defined in the service manifest.
    types:
    - uid: string
    name: CodePackageName
  - description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition id is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the ids of its partitions would be different.
    types:
    - uid: string
    name: PartitionId
  - description: >
      The status of a replica of a service. Possible values are following.

        -Invalid - Indicates the replica status is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        -InBuild - The replica is being built. This means that a primary replica is seeding this replica. The value is 1.
        -Standby - The replica is in standby. The value is 2.
        -Ready - The replica is ready. The value is 3.
        -Down - The replica is down. The value is 4.
        -Dropped - Replica is dropped. This means that the replica has been removed from the replica set. If it is persisted, its state has been deleted. The value is 5.
    types:
    - uid: ReplicaStatus
    name: ReplicaStatus
  - description: The last address returned by the replica in Open or ChangeRole.
    types:
    - uid: string
    name: Address
  - description: >
      The ActivationId of a deployed service package. If ServicePackageActivationMode specified at the time of creating the service

      is 'SharedProcess' (or if it is not specified, in which case it defaults to 'SharedProcess'), then value of ServicePackageActivationId

      is always an empty string.
    types:
    - uid: string
    name: ServicePackageActivationId
  - description: Host process id of the process that is hosting the replica. This will be zero if the replica is down. In hyper-v containers this host process id will be from different kernel.
    types:
    - uid: string
    name: HostProcessId
  - description: Id of a stateful service replica. ReplicaId is used by Service Fabric to uniquely identify a replica of a partition. It is unique within a partition and does not change for the lifetime of the replica. If a replica gets dropped and another replica gets created on the same node for the same partition, it will get a different value for the id. Sometimes the id of a stateless service instance is also referred as a replica id.
    types:
    - uid: string
    name: ReplicaId
  - description: >
      The role of a replica of a stateful service. Possible values are following.
        - Unknown - Indicates the initial role that a replica is created in. The value is zero.
        - None - Specifies that the replica has no responsibility in regard to the replica set. The value is 1
        - Primary - Refers to the replica in the set on which all read and write operations are complete in order to enforce strong consistency semantics. Read operations are handled directly by the Primary replica, while write operations must be acknowledged by a quorum of the replicas in the replica set. There can only be one Primary replica in a replica set at a time. The value is 2.
        - IdleSecondary - Refers to a replica in the set that receives a state transfer from the Primary replica to prepare for becoming an active Secondary replica. There can be multiple Idle Secondary replicas in a replica set at a time. Idle Secondary replicas do not count as a part of a write quorum. The value is 3.
        - ActiveSecondary - Refers to a replica in the set that receives state updates from the Primary replica, applies them, and sends acknowledgements back. Secondary replicas must participate in the write quorum for a replica set. There can be multiple active Secondary replicas in a replica set at a time. The number of active Secondary replicas is configurable that the reliability subsystem should maintain. The value is 4.
    types:
    - uid: ReplicaRole
    name: ReplicaRole
  - description: Information about current reconfiguration like phase, type, previous configuration role of replica and reconfiguration start date time.
    types:
    - uid: ReconfigurationInformation
    name: ReconfigurationInformation
- name: DeployedStatelessServiceInstanceInfo
  description: Information about a stateless service instance deployed on a node.
  kind: object
  properties:
  - description: >
      The kind of service (Stateless or Stateful). Following are the possible values.


      - Invalid - Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1.

      - Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
    types:
    - uid: Stateless
    typesTitle: string
    name: ServiceKind
  - description: The full name of the service with 'fabric:' URI scheme.
    types:
    - uid: string
    name: ServiceName
  - description: Name of the service type as specified in the service manifest.
    types:
    - uid: string
    name: ServiceTypeName
  - description: The name of the service manifest.
    types:
    - uid: string
    name: ServiceManifestName
  - description: The name of the code package defined in the service manifest.
    types:
    - uid: string
    name: CodePackageName
  - description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition id is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the ids of its partitions would be different.
    types:
    - uid: string
    name: PartitionId
  - description: >
      The status of a replica of a service. Possible values are following.

        -Invalid - Indicates the replica status is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        -InBuild - The replica is being built. This means that a primary replica is seeding this replica. The value is 1.
        -Standby - The replica is in standby. The value is 2.
        -Ready - The replica is ready. The value is 3.
        -Down - The replica is down. The value is 4.
        -Dropped - Replica is dropped. This means that the replica has been removed from the replica set. If it is persisted, its state has been deleted. The value is 5.
    types:
    - uid: ReplicaStatus
    name: ReplicaStatus
  - description: The last address returned by the replica in Open or ChangeRole.
    types:
    - uid: string
    name: Address
  - description: >
      The ActivationId of a deployed service package. If ServicePackageActivationMode specified at the time of creating the service

      is 'SharedProcess' (or if it is not specified, in which case it defaults to 'SharedProcess'), then value of ServicePackageActivationId

      is always an empty string.
    types:
    - uid: string
    name: ServicePackageActivationId
  - description: Host process id of the process that is hosting the replica. This will be zero if the replica is down. In hyper-v containers this host process id will be from different kernel.
    types:
    - uid: string
    name: HostProcessId
  - description: Id of a stateless service instance. InstanceId is used by Service Fabric to uniquely identify an instance of a partition of a stateless service. It is unique within a partition and does not change for the lifetime of the instance. If the instance is failedover on the same or different node, it will get a different value for the InstanceId.
    types:
    - uid: string
    name: InstanceId
- name: FabricError_Error
  description: Error object containing error code and error message.
  kind: object
  properties:
  - description: >
      Defines the fabric error codes that be returned as part of the error object in response to Service Fabric API operations that are not successful. Following are the error code values that can be returned for a specific HTTP status code.

        - Possible values of the error code for HTTP status code 400 (Bad Request)
          - "FABRIC_E_INVALID_PARTITION_KEY"
          - "FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR"
          - "FABRIC_E_INVALID_ADDRESS"
          - "FABRIC_E_APPLICATION_NOT_UPGRADING"
          - "FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR"
          - "FABRIC_E_FABRIC_NOT_UPGRADING"
          - "FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR"
          - "FABRIC_E_INVALID_CONFIGURATION"
          - "FABRIC_E_INVALID_NAME_URI"
          - "FABRIC_E_PATH_TOO_LONG"
          - "FABRIC_E_KEY_TOO_LARGE"
          - "FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED"
          - "FABRIC_E_INVALID_ATOMIC_GROUP"
          - "FABRIC_E_VALUE_EMPTY"

        - Possible values of the error code for HTTP status code 404 (Not Found)
          - "FABRIC_E_NODE_NOT_FOUND"
          - "FABRIC_E_APPLICATION_TYPE_NOT_FOUND"
          - "FABRIC_E_APPLICATION_NOT_FOUND"
          - "FABRIC_E_SERVICE_TYPE_NOT_FOUND"
          - "FABRIC_E_SERVICE_DOES_NOT_EXIST"
          - "FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND"
          - "FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND"
          - "FABRIC_E_PARTITION_NOT_FOUND"
          - "FABRIC_E_REPLICA_DOES_NOT_EXIST"
          - "FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST"
          - "FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND"
          - "FABRIC_E_DIRECTORY_NOT_FOUND"
          - "FABRIC_E_FABRIC_VERSION_NOT_FOUND"
          - "FABRIC_E_FILE_NOT_FOUND"
          - "FABRIC_E_NAME_DOES_NOT_EXIST"
          - "FABRIC_E_PROPERTY_DOES_NOT_EXIST"
          - "FABRIC_E_ENUMERATION_COMPLETED"
          - "FABRIC_E_SERVICE_MANIFEST_NOT_FOUND"
          - "FABRIC_E_KEY_NOT_FOUND"
          - "FABRIC_E_HEALTH_ENTITY_NOT_FOUND"

        - Possible values of the error code for HTTP status code 409 (Conflict)
          - "FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION"
          - "FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS"
          - "FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS"
          - "FABRIC_E_SERVICE_ALREADY_EXISTS"
          - "FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_TYPE_IN_USE"
          - "FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION"
          - "FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS"
          - "FABRIC_E_FABRIC_VERSION_IN_USE"
          - "FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS"
          - "FABRIC_E_NAME_ALREADY_EXISTS"
          - "FABRIC_E_NAME_NOT_EMPTY"
          - "FABRIC_E_PROPERTY_CHECK_FAILED"
          - "FABRIC_E_SERVICE_METADATA_MISMATCH"
          - "FABRIC_E_SERVICE_TYPE_MISMATCH"
          - "FABRIC_E_HEALTH_STALE_REPORT"
          - "FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED"
          - "FABRIC_E_NODE_HAS_NOT_STOPPED_YET"
          - "FABRIC_E_INSTANCE_ID_MISMATCH"

        - Possible values of the error code for HTTP status code 413 (Request Entity Too Large)
          - "FABRIC_E_VALUE_TOO_LARGE"

        - Possible values of the error code for HTTP status code 500 (Internal Server Error)
          - "FABRIC_E_NODE_IS_UP"

        - Possible values of the error code for HTTP status code 503 (Service Unavailable)
          - "FABRIC_E_NO_WRITE_QUORUM"
          - "FABRIC_E_NOT_PRIMARY"
          - "FABRIC_E_NOT_READY"
          - "FABRIC_E_RECONFIGURATION_PENDING"
          - "FABRIC_E_SERVICE_OFFLINE"
          - "E_ABORT"
          - "FABRIC_E_VALUE_TOO_LARGE"

        - Possible values of the error code for HTTP status code 504 (Gateway Timeout)
          - "FABRIC_E_COMMUNICATION_ERROR"
          - "FABRIC_E_OPERATION_NOT_COMPLETE"
          - "FABRIC_E_TIMEOUT"
    types:
    - uid: FabricErrorCodes
    name: Code
  - description: Error message.
    types:
    - uid: string
    name: Message
- name: ServiceKind
  description: >
    The kind of service (Stateless or Stateful). Following are the possible values.


    - Invalid - Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

    - Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1.

    - Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: Stateless
  - types:
    - uid: string
    name: Stateful
- name: ReplicaStatus
  description: >
    The status of a replica of a service. Possible values are following.

      -Invalid - Indicates the replica status is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
      -InBuild - The replica is being built. This means that a primary replica is seeding this replica. The value is 1.
      -Standby - The replica is in standby. The value is 2.
      -Ready - The replica is ready. The value is 3.
      -Down - The replica is down. The value is 4.
      -Dropped - Replica is dropped. This means that the replica has been removed from the replica set. If it is persisted, its state has been deleted. The value is 5.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: InBuild
  - types:
    - uid: string
    name: Standby
  - types:
    - uid: string
    name: Ready
  - types:
    - uid: string
    name: Down
  - types:
    - uid: string
    name: Dropped
- name: ReplicaRole
  description: >
    The role of a replica of a stateful service. Possible values are following.
      - Unknown - Indicates the initial role that a replica is created in. The value is zero.
      - None - Specifies that the replica has no responsibility in regard to the replica set. The value is 1
      - Primary - Refers to the replica in the set on which all read and write operations are complete in order to enforce strong consistency semantics. Read operations are handled directly by the Primary replica, while write operations must be acknowledged by a quorum of the replicas in the replica set. There can only be one Primary replica in a replica set at a time. The value is 2.
      - IdleSecondary - Refers to a replica in the set that receives a state transfer from the Primary replica to prepare for becoming an active Secondary replica. There can be multiple Idle Secondary replicas in a replica set at a time. Idle Secondary replicas do not count as a part of a write quorum. The value is 3.
      - ActiveSecondary - Refers to a replica in the set that receives state updates from the Primary replica, applies them, and sends acknowledgements back. Secondary replicas must participate in the write quorum for a replica set. There can be multiple active Secondary replicas in a replica set at a time. The number of active Secondary replicas is configurable that the reliability subsystem should maintain. The value is 4.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Unknown
  - types:
    - uid: string
    name: None
  - types:
    - uid: string
    name: Primary
  - types:
    - uid: string
    name: IdleSecondary
  - types:
    - uid: string
    name: ActiveSecondary
- name: ReconfigurationInformation
  description: Information about current reconfiguration like phase, type, previous configuration role of replica and reconfiguration start date time.
  kind: object
  properties:
  - description: >
      The role of a replica of a stateful service. Possible values are following.
        - Unknown - Indicates the initial role that a replica is created in. The value is zero.
        - None - Specifies that the replica has no responsibility in regard to the replica set. The value is 1
        - Primary - Refers to the replica in the set on which all read and write operations are complete in order to enforce strong consistency semantics. Read operations are handled directly by the Primary replica, while write operations must be acknowledged by a quorum of the replicas in the replica set. There can only be one Primary replica in a replica set at a time. The value is 2.
        - IdleSecondary - Refers to a replica in the set that receives a state transfer from the Primary replica to prepare for becoming an active Secondary replica. There can be multiple Idle Secondary replicas in a replica set at a time. Idle Secondary replicas do not count as a part of a write quorum. The value is 3.
        - ActiveSecondary - Refers to a replica in the set that receives state updates from the Primary replica, applies them, and sends acknowledgements back. Secondary replicas must participate in the write quorum for a replica set. There can be multiple active Secondary replicas in a replica set at a time. The number of active Secondary replicas is configurable that the reliability subsystem should maintain. The value is 4.
    types:
    - uid: ReplicaRole
    name: PreviousConfigurationRole
  - description: >
      The reconfiguration phase of a replica of a stateful service. Possible values are following.
        - Unknown - Indicates the invalid reconfiguration phase.
        - None - Specifies that there is no reconfiguration in progress.
        - Phase0 - Refers to the phase where the reconfiguration is transferring data from the previous primary to the new primary.
        - Phase1 - Refers to the phase where the reconfiguration is querying the replica set for the progress.
        - Phase2 - Refers to the phase where the reconfiguration is ensuring that data from the current primary is present in a majority of the replica set.
        - Phase3 - This phase is for internal use only.
        - Phase4 - This phase is for internal use only.
        - AbortPhaseZero - This phase is for internal use only.
    types:
    - uid: ReconfigurationPhase
    name: ReconfigurationPhase
  - description: >
      The type of reconfiguration for replica of a stateful service. Possible values are following.
        - Unknown - Indicates the invalid reconfiguration type.
        - SwapPrimary - Specifies that the primary replica is being swapped with a different replica.
        - Failover - Reconfiguration triggered in response to a primary going down. This could be due to many reasons such as primary replica crashing etc.
        - Other - Reconfigurations where the primary replica is not changing.
    types:
    - uid: ReconfigurationType
    name: ReconfigurationType
  - description: Start time (in UTC) of the ongoing reconfiguration. If no reconfiguration is taking place then this value will be zero date-time.
    types:
    - uid: string
    name: ReconfigurationStartTimeUtc
- name: FabricErrorCodes
  description: >
    Defines the fabric error codes that be returned as part of the error object in response to Service Fabric API operations that are not successful. Following are the error code values that can be returned for a specific HTTP status code.

      - Possible values of the error code for HTTP status code 400 (Bad Request)
        - "FABRIC_E_INVALID_PARTITION_KEY"
        - "FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR"
        - "FABRIC_E_INVALID_ADDRESS"
        - "FABRIC_E_APPLICATION_NOT_UPGRADING"
        - "FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR"
        - "FABRIC_E_FABRIC_NOT_UPGRADING"
        - "FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR"
        - "FABRIC_E_INVALID_CONFIGURATION"
        - "FABRIC_E_INVALID_NAME_URI"
        - "FABRIC_E_PATH_TOO_LONG"
        - "FABRIC_E_KEY_TOO_LARGE"
        - "FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED"
        - "FABRIC_E_INVALID_ATOMIC_GROUP"
        - "FABRIC_E_VALUE_EMPTY"

      - Possible values of the error code for HTTP status code 404 (Not Found)
        - "FABRIC_E_NODE_NOT_FOUND"
        - "FABRIC_E_APPLICATION_TYPE_NOT_FOUND"
        - "FABRIC_E_APPLICATION_NOT_FOUND"
        - "FABRIC_E_SERVICE_TYPE_NOT_FOUND"
        - "FABRIC_E_SERVICE_DOES_NOT_EXIST"
        - "FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND"
        - "FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND"
        - "FABRIC_E_PARTITION_NOT_FOUND"
        - "FABRIC_E_REPLICA_DOES_NOT_EXIST"
        - "FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST"
        - "FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND"
        - "FABRIC_E_DIRECTORY_NOT_FOUND"
        - "FABRIC_E_FABRIC_VERSION_NOT_FOUND"
        - "FABRIC_E_FILE_NOT_FOUND"
        - "FABRIC_E_NAME_DOES_NOT_EXIST"
        - "FABRIC_E_PROPERTY_DOES_NOT_EXIST"
        - "FABRIC_E_ENUMERATION_COMPLETED"
        - "FABRIC_E_SERVICE_MANIFEST_NOT_FOUND"
        - "FABRIC_E_KEY_NOT_FOUND"
        - "FABRIC_E_HEALTH_ENTITY_NOT_FOUND"

      - Possible values of the error code for HTTP status code 409 (Conflict)
        - "FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS"
        - "FABRIC_E_APPLICATION_ALREADY_EXISTS"
        - "FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION"
        - "FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS"
        - "FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS"
        - "FABRIC_E_SERVICE_ALREADY_EXISTS"
        - "FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS"
        - "FABRIC_E_APPLICATION_TYPE_IN_USE"
        - "FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION"
        - "FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS"
        - "FABRIC_E_FABRIC_VERSION_IN_USE"
        - "FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS"
        - "FABRIC_E_NAME_ALREADY_EXISTS"
        - "FABRIC_E_NAME_NOT_EMPTY"
        - "FABRIC_E_PROPERTY_CHECK_FAILED"
        - "FABRIC_E_SERVICE_METADATA_MISMATCH"
        - "FABRIC_E_SERVICE_TYPE_MISMATCH"
        - "FABRIC_E_HEALTH_STALE_REPORT"
        - "FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED"
        - "FABRIC_E_NODE_HAS_NOT_STOPPED_YET"
        - "FABRIC_E_INSTANCE_ID_MISMATCH"

      - Possible values of the error code for HTTP status code 413 (Request Entity Too Large)
        - "FABRIC_E_VALUE_TOO_LARGE"

      - Possible values of the error code for HTTP status code 500 (Internal Server Error)
        - "FABRIC_E_NODE_IS_UP"

      - Possible values of the error code for HTTP status code 503 (Service Unavailable)
        - "FABRIC_E_NO_WRITE_QUORUM"
        - "FABRIC_E_NOT_PRIMARY"
        - "FABRIC_E_NOT_READY"
        - "FABRIC_E_RECONFIGURATION_PENDING"
        - "FABRIC_E_SERVICE_OFFLINE"
        - "E_ABORT"
        - "FABRIC_E_VALUE_TOO_LARGE"

      - Possible values of the error code for HTTP status code 504 (Gateway Timeout)
        - "FABRIC_E_COMMUNICATION_ERROR"
        - "FABRIC_E_OPERATION_NOT_COMPLETE"
        - "FABRIC_E_TIMEOUT"
  kind: enum
  properties:
  - types:
    - uid: string
    name: FABRIC_E_INVALID_PARTITION_KEY
  - types:
    - uid: string
    name: FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR
  - types:
    - uid: string
    name: FABRIC_E_INVALID_ADDRESS
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_NOT_UPGRADING
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_NOT_UPGRADING
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR
  - types:
    - uid: string
    name: FABRIC_E_INVALID_CONFIGURATION
  - types:
    - uid: string
    name: FABRIC_E_INVALID_NAME_URI
  - types:
    - uid: string
    name: FABRIC_E_PATH_TOO_LONG
  - types:
    - uid: string
    name: FABRIC_E_KEY_TOO_LARGE
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED
  - types:
    - uid: string
    name: FABRIC_E_INVALID_ATOMIC_GROUP
  - types:
    - uid: string
    name: FABRIC_E_VALUE_EMPTY
  - types:
    - uid: string
    name: FABRIC_E_NODE_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_TYPE_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_TYPE_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_DOES_NOT_EXIST
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_PARTITION_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_REPLICA_DOES_NOT_EXIST
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST
  - types:
    - uid: string
    name: FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_DIRECTORY_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_VERSION_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_FILE_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_NAME_DOES_NOT_EXIST
  - types:
    - uid: string
    name: FABRIC_E_PROPERTY_DOES_NOT_EXIST
  - types:
    - uid: string
    name: FABRIC_E_ENUMERATION_COMPLETED
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_MANIFEST_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_KEY_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_HEALTH_ENTITY_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_ALREADY_EXISTS
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_ALREADY_EXISTS
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_TYPE_IN_USE
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_VERSION_IN_USE
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS
  - types:
    - uid: string
    name: FABRIC_E_NAME_ALREADY_EXISTS
  - types:
    - uid: string
    name: FABRIC_E_NAME_NOT_EMPTY
  - types:
    - uid: string
    name: FABRIC_E_PROPERTY_CHECK_FAILED
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_METADATA_MISMATCH
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_TYPE_MISMATCH
  - types:
    - uid: string
    name: FABRIC_E_HEALTH_STALE_REPORT
  - types:
    - uid: string
    name: FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED
  - types:
    - uid: string
    name: FABRIC_E_NODE_HAS_NOT_STOPPED_YET
  - types:
    - uid: string
    name: FABRIC_E_INSTANCE_ID_MISMATCH
  - types:
    - uid: string
    name: FABRIC_E_VALUE_TOO_LARGE
  - types:
    - uid: string
    name: FABRIC_E_NO_WRITE_QUORUM
  - types:
    - uid: string
    name: FABRIC_E_NOT_PRIMARY
  - types:
    - uid: string
    name: FABRIC_E_NOT_READY
  - types:
    - uid: string
    name: FABRIC_E_RECONFIGURATION_PENDING
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_OFFLINE
  - types:
    - uid: string
    name: E_ABORT
  - types:
    - uid: string
    name: FABRIC_E_COMMUNICATION_ERROR
  - types:
    - uid: string
    name: FABRIC_E_OPERATION_NOT_COMPLETE
  - types:
    - uid: string
    name: FABRIC_E_TIMEOUT
  - types:
    - uid: string
    name: FABRIC_E_NODE_IS_UP
- name: ReconfigurationPhase
  description: >
    The reconfiguration phase of a replica of a stateful service. Possible values are following.
      - Unknown - Indicates the invalid reconfiguration phase.
      - None - Specifies that there is no reconfiguration in progress.
      - Phase0 - Refers to the phase where the reconfiguration is transferring data from the previous primary to the new primary.
      - Phase1 - Refers to the phase where the reconfiguration is querying the replica set for the progress.
      - Phase2 - Refers to the phase where the reconfiguration is ensuring that data from the current primary is present in a majority of the replica set.
      - Phase3 - This phase is for internal use only.
      - Phase4 - This phase is for internal use only.
      - AbortPhaseZero - This phase is for internal use only.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Unknown
  - types:
    - uid: string
    name: None
  - types:
    - uid: string
    name: Phase0
  - types:
    - uid: string
    name: Phase1
  - types:
    - uid: string
    name: Phase2
  - types:
    - uid: string
    name: Phase3
  - types:
    - uid: string
    name: Phase4
  - types:
    - uid: string
    name: AbortPhaseZero
- name: ReconfigurationType
  description: >
    The type of reconfiguration for replica of a stateful service. Possible values are following.
      - Unknown - Indicates the invalid reconfiguration type.
      - SwapPrimary - Specifies that the primary replica is being swapped with a different replica.
      - Failover - Reconfiguration triggered in response to a primary going down. This could be due to many reasons such as primary replica crashing etc.
      - Other - Reconfigurations where the primary replica is not changing.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Unknown
  - types:
    - uid: string
    name: SwapPrimary
  - types:
    - uid: string
    name: Failover
  - types:
    - uid: string
    name: Other
examples: []
security: []
name: GetDeployedServiceReplicaInfoList
uid: localhost:19080.servicefabric.getdeployedservicereplicainfolist.getdeployedservicereplicainfolist

### YamlMime:RESTOperation
summary: Updates the specified service using the given update description.
service: Service Fabric
apiVersion: 6.0.0.1
groupName: Update Service
produces:
- application/json
paths:
- content: POST http://localhost:19080/Services/{serviceId}/$/Update?api-version=6.0.0.1
- content: POST http://localhost:19080/Services/{serviceId}/$/Update?api-version=6.0.0.1&timeout={timeout}
  isOptional: true
uriParameters:
- in: path
  isRequired: true
  description: The identity of the service. This is typically the full name of the service without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the "~" character. For example, if the service name is "fabric://myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.
  types:
  - uid: string
  name: serviceId
- in: query
  isRequired: true
  description: The version of the API. This is a required parameter and it's value must be "6.0".
  types:
  - uid: string
  name: api-version
- in: query
  description: The server timeout for performing the operation in seconds. This specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
  types:
  - uid: integer
  format: int64
  name: timeout
responses:
- description: A successful operation will return 202 status code.
  name: 200 OK
- description: The detailed error response.
  types:
  - uid: FabricError
  name: Other Status Codes
requestBody:
- description: Describes an update for a stateful service.
  parameters:
  - in: body
    description: The target replica set size as a number.
    types:
    - uid: integer
    name: TargetReplicaSetSize
  - in: body
    description: The minimum replica set size as a number.
    types:
    - uid: integer
    name: MinReplicaSetSize
  - in: body
    description: The duration, in seconds, between when a replica goes down and when a new replica is created.
    types:
    - uid: string
    name: ReplicaRestartWaitDurationSeconds
  - in: body
    description: The maximum duration, in seconds, for which a partition is allowed to be in a state of quorum loss.
    types:
    - uid: string
    name: QuorumLossWaitDurationSeconds
  - in: body
    description: The definition on how long StandBy replicas should be maintained before being removed.
    types:
    - uid: string
    name: StandByReplicaKeepDurationSeconds
  - in: body
    isRequired: true
    description: >
      The kind of service (Stateless or Stateful). Following are the possible values.


      - Invalid - Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1.

      - Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
    types:
    - uid: Stateful
    typesTitle: string
    name: ServiceKind
  - in: body
    description: >
      Flags indicating whether other properties are set. Each of the associated properties corresponds to a flag, specified below, which, if set, indicate that the property is specified.

      This property can be a combination of those flags obtained using bitwise 'OR' operator.

      For example, if the provided value is 6 then the flags for ReplicaRestartWaitDuration (2) and QuorumLossWaitDuration (4) are set.


      - None - Does not indicate any other properties are set. The value is zero.

      - TargetReplicaSetSize/InstanceCount - Indicates whether the TargetReplicaSetSize property (for Stateful services) or the InstanceCount property (for Stateless services) is set. The value is 1.

      - ReplicaRestartWaitDuration - Indicates the ReplicaRestartWaitDuration property is set. The value is  2.

      - QuorumLossWaitDuration - Indicates the QuorumLossWaitDuration property is set. The value is 4.

      - StandByReplicaKeepDuration - Indicates the StandByReplicaKeepDuration property is set. The value is 8.

      - MinReplicaSetSize - Indicates the MinReplicaSetSize property is set. The value is 16.

      - PlacementConstraints - Indicates the PlacementConstraints property is set. The value is 32.

      - PlacementPolicyList - Indicates the ServicePlacementPolicies property is set. The value is 64.

      - Correlation - Indicates the CorrelationScheme property is set. The value is 128.

      - Metrics - Indicates the ServiceLoadMetrics property is set. The value is 256.

      - DefaultMoveCost - Indicates the DefaultMoveCost property is set. The value is 512.
    types:
    - uid: string
    name: Flags
  - in: body
    description: 'The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: "NodeColor == blue)".'
    types:
    - uid: string
    name: PlacementConstraints
  - in: body
    description: A list that describes the correlation of the service with other services.
    types:
    - uid: ServiceCorrelationDescription
    name: CorrelationScheme
  - in: body
    description: The service load metrics is given as an array of ServiceLoadMetricDescription objects.
    types:
    - uid: ServiceLoadMetricDescription
    name: LoadMetrics
  - in: body
    description: A list that describes the correlation of the service with other services.
    types:
    - isArray: true
      uid: ServicePlacementInvalidDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementNonPartiallyPlaceServicePolicyDescription
    - isArray: true
      uid: ServicePlacementPreferPrimaryDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementRequiredDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementRequireDomainDistributionPolicyDescription
    typesTitle: ServicePlacementPolicyDescription[]
    name: ServicePlacementPolicies
  - in: body
    description: >
      Specifies the move cost for the service. Possible values are the following.

        - Zero - Zero move cost. This value is zero.
        - Low - Specifies the move cost of the service as Low. The value is 1.
        - Medium - Specifies the move cost of the service as Medium. The value is 2.
        - High - Specifies the move cost of the service as High. The value is 3.
    types:
    - uid: MoveCost
    name: DefaultMoveCost
  name: StatefulServiceUpdateDescription
- description: Describes an update for a stateless service.
  parameters:
  - in: body
    description: The instance count.
    types:
    - uid: integer
    name: InstanceCount
  - in: body
    isRequired: true
    description: >
      The kind of service (Stateless or Stateful). Following are the possible values.


      - Invalid - Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1.

      - Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
    types:
    - uid: Stateless
    typesTitle: string
    name: ServiceKind
  - in: body
    description: >
      Flags indicating whether other properties are set. Each of the associated properties corresponds to a flag, specified below, which, if set, indicate that the property is specified.

      This property can be a combination of those flags obtained using bitwise 'OR' operator.

      For example, if the provided value is 6 then the flags for ReplicaRestartWaitDuration (2) and QuorumLossWaitDuration (4) are set.


      - None - Does not indicate any other properties are set. The value is zero.

      - TargetReplicaSetSize/InstanceCount - Indicates whether the TargetReplicaSetSize property (for Stateful services) or the InstanceCount property (for Stateless services) is set. The value is 1.

      - ReplicaRestartWaitDuration - Indicates the ReplicaRestartWaitDuration property is set. The value is  2.

      - QuorumLossWaitDuration - Indicates the QuorumLossWaitDuration property is set. The value is 4.

      - StandByReplicaKeepDuration - Indicates the StandByReplicaKeepDuration property is set. The value is 8.

      - MinReplicaSetSize - Indicates the MinReplicaSetSize property is set. The value is 16.

      - PlacementConstraints - Indicates the PlacementConstraints property is set. The value is 32.

      - PlacementPolicyList - Indicates the ServicePlacementPolicies property is set. The value is 64.

      - Correlation - Indicates the CorrelationScheme property is set. The value is 128.

      - Metrics - Indicates the ServiceLoadMetrics property is set. The value is 256.

      - DefaultMoveCost - Indicates the DefaultMoveCost property is set. The value is 512.
    types:
    - uid: string
    name: Flags
  - in: body
    description: 'The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: "NodeColor == blue)".'
    types:
    - uid: string
    name: PlacementConstraints
  - in: body
    description: A list that describes the correlation of the service with other services.
    types:
    - uid: ServiceCorrelationDescription
    name: CorrelationScheme
  - in: body
    description: The service load metrics is given as an array of ServiceLoadMetricDescription objects.
    types:
    - uid: ServiceLoadMetricDescription
    name: LoadMetrics
  - in: body
    description: A list that describes the correlation of the service with other services.
    types:
    - isArray: true
      uid: ServicePlacementInvalidDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementNonPartiallyPlaceServicePolicyDescription
    - isArray: true
      uid: ServicePlacementPreferPrimaryDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementRequiredDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementRequireDomainDistributionPolicyDescription
    typesTitle: ServicePlacementPolicyDescription[]
    name: ServicePlacementPolicies
  - in: body
    description: >
      Specifies the move cost for the service. Possible values are the following.

        - Zero - Zero move cost. This value is zero.
        - Low - Specifies the move cost of the service as Low. The value is 1.
        - Medium - Specifies the move cost of the service as Medium. The value is 2.
        - High - Specifies the move cost of the service as High. The value is 3.
    types:
    - uid: MoveCost
    name: DefaultMoveCost
  name: StatelessServiceUpdateDescription
requestHeader: []
definitions:
- name: StatefulServiceUpdateDescription
  description: Describes an update for a stateful service.
  kind: object
  properties:
  - description: The target replica set size as a number.
    types:
    - uid: integer
    name: TargetReplicaSetSize
  - description: The minimum replica set size as a number.
    types:
    - uid: integer
    name: MinReplicaSetSize
  - description: The duration, in seconds, between when a replica goes down and when a new replica is created.
    types:
    - uid: string
    name: ReplicaRestartWaitDurationSeconds
  - description: The maximum duration, in seconds, for which a partition is allowed to be in a state of quorum loss.
    types:
    - uid: string
    name: QuorumLossWaitDurationSeconds
  - description: The definition on how long StandBy replicas should be maintained before being removed.
    types:
    - uid: string
    name: StandByReplicaKeepDurationSeconds
  - description: >
      The kind of service (Stateless or Stateful). Following are the possible values.


      - Invalid - Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1.

      - Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
    types:
    - uid: Stateful
    typesTitle: string
    name: ServiceKind
  - description: >
      Flags indicating whether other properties are set. Each of the associated properties corresponds to a flag, specified below, which, if set, indicate that the property is specified.

      This property can be a combination of those flags obtained using bitwise 'OR' operator.

      For example, if the provided value is 6 then the flags for ReplicaRestartWaitDuration (2) and QuorumLossWaitDuration (4) are set.


      - None - Does not indicate any other properties are set. The value is zero.

      - TargetReplicaSetSize/InstanceCount - Indicates whether the TargetReplicaSetSize property (for Stateful services) or the InstanceCount property (for Stateless services) is set. The value is 1.

      - ReplicaRestartWaitDuration - Indicates the ReplicaRestartWaitDuration property is set. The value is  2.

      - QuorumLossWaitDuration - Indicates the QuorumLossWaitDuration property is set. The value is 4.

      - StandByReplicaKeepDuration - Indicates the StandByReplicaKeepDuration property is set. The value is 8.

      - MinReplicaSetSize - Indicates the MinReplicaSetSize property is set. The value is 16.

      - PlacementConstraints - Indicates the PlacementConstraints property is set. The value is 32.

      - PlacementPolicyList - Indicates the ServicePlacementPolicies property is set. The value is 64.

      - Correlation - Indicates the CorrelationScheme property is set. The value is 128.

      - Metrics - Indicates the ServiceLoadMetrics property is set. The value is 256.

      - DefaultMoveCost - Indicates the DefaultMoveCost property is set. The value is 512.
    types:
    - uid: string
    name: Flags
  - description: 'The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: "NodeColor == blue)".'
    types:
    - uid: string
    name: PlacementConstraints
  - description: A list that describes the correlation of the service with other services.
    types:
    - uid: ServiceCorrelationDescription
    name: CorrelationScheme
  - description: The service load metrics is given as an array of ServiceLoadMetricDescription objects.
    types:
    - uid: ServiceLoadMetricDescription
    name: LoadMetrics
  - description: A list that describes the correlation of the service with other services.
    types:
    - isArray: true
      uid: ServicePlacementInvalidDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementNonPartiallyPlaceServicePolicyDescription
    - isArray: true
      uid: ServicePlacementPreferPrimaryDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementRequiredDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementRequireDomainDistributionPolicyDescription
    typesTitle: ServicePlacementPolicyDescription[]
    name: ServicePlacementPolicies
  - description: >
      Specifies the move cost for the service. Possible values are the following.

        - Zero - Zero move cost. This value is zero.
        - Low - Specifies the move cost of the service as Low. The value is 1.
        - Medium - Specifies the move cost of the service as Medium. The value is 2.
        - High - Specifies the move cost of the service as High. The value is 3.
    types:
    - uid: MoveCost
    name: DefaultMoveCost
- name: StatelessServiceUpdateDescription
  description: Describes an update for a stateless service.
  kind: object
  properties:
  - description: The instance count.
    types:
    - uid: integer
    name: InstanceCount
  - description: >
      The kind of service (Stateless or Stateful). Following are the possible values.


      - Invalid - Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1.

      - Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
    types:
    - uid: Stateless
    typesTitle: string
    name: ServiceKind
  - description: >
      Flags indicating whether other properties are set. Each of the associated properties corresponds to a flag, specified below, which, if set, indicate that the property is specified.

      This property can be a combination of those flags obtained using bitwise 'OR' operator.

      For example, if the provided value is 6 then the flags for ReplicaRestartWaitDuration (2) and QuorumLossWaitDuration (4) are set.


      - None - Does not indicate any other properties are set. The value is zero.

      - TargetReplicaSetSize/InstanceCount - Indicates whether the TargetReplicaSetSize property (for Stateful services) or the InstanceCount property (for Stateless services) is set. The value is 1.

      - ReplicaRestartWaitDuration - Indicates the ReplicaRestartWaitDuration property is set. The value is  2.

      - QuorumLossWaitDuration - Indicates the QuorumLossWaitDuration property is set. The value is 4.

      - StandByReplicaKeepDuration - Indicates the StandByReplicaKeepDuration property is set. The value is 8.

      - MinReplicaSetSize - Indicates the MinReplicaSetSize property is set. The value is 16.

      - PlacementConstraints - Indicates the PlacementConstraints property is set. The value is 32.

      - PlacementPolicyList - Indicates the ServicePlacementPolicies property is set. The value is 64.

      - Correlation - Indicates the CorrelationScheme property is set. The value is 128.

      - Metrics - Indicates the ServiceLoadMetrics property is set. The value is 256.

      - DefaultMoveCost - Indicates the DefaultMoveCost property is set. The value is 512.
    types:
    - uid: string
    name: Flags
  - description: 'The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: "NodeColor == blue)".'
    types:
    - uid: string
    name: PlacementConstraints
  - description: A list that describes the correlation of the service with other services.
    types:
    - uid: ServiceCorrelationDescription
    name: CorrelationScheme
  - description: The service load metrics is given as an array of ServiceLoadMetricDescription objects.
    types:
    - uid: ServiceLoadMetricDescription
    name: LoadMetrics
  - description: A list that describes the correlation of the service with other services.
    types:
    - isArray: true
      uid: ServicePlacementInvalidDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementNonPartiallyPlaceServicePolicyDescription
    - isArray: true
      uid: ServicePlacementPreferPrimaryDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementRequiredDomainPolicyDescription
    - isArray: true
      uid: ServicePlacementRequireDomainDistributionPolicyDescription
    typesTitle: ServicePlacementPolicyDescription[]
    name: ServicePlacementPolicies
  - description: >
      Specifies the move cost for the service. Possible values are the following.

        - Zero - Zero move cost. This value is zero.
        - Low - Specifies the move cost of the service as Low. The value is 1.
        - Medium - Specifies the move cost of the service as Medium. The value is 2.
        - High - Specifies the move cost of the service as High. The value is 3.
    types:
    - uid: MoveCost
    name: DefaultMoveCost
- name: ServiceCorrelationDescription
  description: Creates a particular correlation between services.
  kind: object
  properties:
  - description: >
      The service correlation scheme. Possible values are following.

        - Invalid - An invalid correlation scheme. Cannot be used. The value is zero.
        - Affinity - Indicates that this service has an affinity relationship with another service. Provided for backwards compatibility, consider preferring the Aligned or NonAlignedAffinity options. The value is 1.
        - AlignedAffinity - Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 2.
        - NonAlignedAffinity - Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 3.
    types:
    - uid: ServiceCorrelationScheme
    name: Scheme
  - description: The full name of the service with 'fabric:' URI scheme.
    types:
    - uid: string
    name: ServiceName
- name: ServiceLoadMetricDescription
  description: Specifies a metric to load balance a service during runtime.
  kind: object
  properties:
  - description: The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive.
    types:
    - uid: string
    name: Name
  - description: >
      Determines the metric weight relative to the other metrics that are configured for this service. During runtime, if two metrics end up in conflict, the Cluster Resource Manager prefers the metric with the higher weight. Possible values are following.

        - Zero - Disables resource balancing for this metric. This value is zero.
        - Low - Specifies the metric weight of the service load as Low. The value is 1.
        - Medium - Specifies the metric weight of the service load as Medium. The value is 2.
        - High - Specifies the metric weight of the service load as High. The value is 3.
    types:
    - uid: ServiceLoadMetricWeight
    name: Weight
  - description: Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica.
    types:
    - uid: integer
    name: PrimaryDefaultLoad
  - description: Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica.
    types:
    - uid: integer
    name: SecondaryDefaultLoad
  - description: Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric.
    types:
    - uid: integer
    name: DefaultLoad
- name: FabricError
  description: >
    The REST API operations for Service Fabric return standard HTTP status codes. This type defines the additional information returned from the Service Fabric API operations that are not successful.
  kind: object
  properties:
  - description: Error object containing error code and error message.
    types:
    - uid: FabricError_Error
    name: Error
- name: ServiceKind
  description: >
    The kind of service (Stateless or Stateful). Following are the possible values.


    - Invalid - Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

    - Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1.

    - Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: Stateless
  - types:
    - uid: string
    name: Stateful
- name: MoveCost
  description: >
    Specifies the move cost for the service. Possible values are the following.

      - Zero - Zero move cost. This value is zero.
      - Low - Specifies the move cost of the service as Low. The value is 1.
      - Medium - Specifies the move cost of the service as Medium. The value is 2.
      - High - Specifies the move cost of the service as High. The value is 3.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Zero
  - types:
    - uid: string
    name: Low
  - types:
    - uid: string
    name: Medium
  - types:
    - uid: string
    name: High
- name: ServiceCorrelationScheme
  description: >
    The service correlation scheme. Possible values are following.

      - Invalid - An invalid correlation scheme. Cannot be used. The value is zero.
      - Affinity - Indicates that this service has an affinity relationship with another service. Provided for backwards compatibility, consider preferring the Aligned or NonAlignedAffinity options. The value is 1.
      - AlignedAffinity - Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 2.
      - NonAlignedAffinity - Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 3.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: Affinity
  - types:
    - uid: string
    name: AlignedAffinity
  - types:
    - uid: string
    name: NonAlignedAffinity
- name: ServiceLoadMetricWeight
  description: >
    Determines the metric weight relative to the other metrics that are configured for this service. During runtime, if two metrics end up in conflict, the Cluster Resource Manager prefers the metric with the higher weight. Possible values are following.

      - Zero - Disables resource balancing for this metric. This value is zero.
      - Low - Specifies the metric weight of the service load as Low. The value is 1.
      - Medium - Specifies the metric weight of the service load as Medium. The value is 2.
      - High - Specifies the metric weight of the service load as High. The value is 3.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Zero
  - types:
    - uid: string
    name: Low
  - types:
    - uid: string
    name: Medium
  - types:
    - uid: string
    name: High
- name: ServicePlacementInvalidDomainPolicyDescription
  description: Describes the policy to be used for placement of a Service Fabric service where a particular fault or upgrade domain should not be used for placement of the instances or replicas of that service.
  kind: object
  properties:
  - description: >
      The type of placement policy for a service fabric service. Following are the possible values.

        - Invalid - Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - InvalidDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1.
        - RequiredDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2.
        - PreferredPrimaryDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3.
        - RequiredDomainDistribution - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4.
        - NonPartiallyPlaceService - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5.
    types:
    - uid: InvalidDomain
    typesTitle: string
    name: Type
  - description: The name of the domain that should not be used for placement.
    types:
    - uid: string
    name: DomainName
- name: ServicePlacementNonPartiallyPlaceServicePolicyDescription
  description: >
    Describes the policy to be used for placement of a Service Fabric service where all replicas must be able to be placed in order for any replicas to be created.
  kind: object
  properties:
  - description: >
      The type of placement policy for a service fabric service. Following are the possible values.

        - Invalid - Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - InvalidDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1.
        - RequiredDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2.
        - PreferredPrimaryDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3.
        - RequiredDomainDistribution - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4.
        - NonPartiallyPlaceService - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5.
    types:
    - uid: NonPartiallyPlaceService
    typesTitle: string
    name: Type
- name: ServicePlacementPreferPrimaryDomainPolicyDescription
  description: >
    Describes the policy to be used for placement of a Service Fabric service where the service's Primary replicas should optimally be placed in a particular domain.


    This placement policy is usually used with fault domains in scenarios where the Service Fabric cluster is geographically distributed in order to indicate that a service's primary replica should be located in a particular fault domain, which in geo-distributed scenarios usually aligns with regional or datacenter boundaries. Note that since this is an optimization it is possible that the Primary replica may not end up located in this domain due to failures, capacity limits, or other constraints.
  kind: object
  properties:
  - description: >
      The type of placement policy for a service fabric service. Following are the possible values.

        - Invalid - Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - InvalidDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1.
        - RequiredDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2.
        - PreferredPrimaryDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3.
        - RequiredDomainDistribution - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4.
        - NonPartiallyPlaceService - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5.
    types:
    - uid: PreferPrimaryDomain
    typesTitle: string
    name: Type
  - description: The name of the domain that should used for placement as per this policy.
    types:
    - uid: string
    name: DomainName
- name: ServicePlacementRequiredDomainPolicyDescription
  description: Describes the policy to be used for placement of a Service Fabric service where the instances or replicas of that service must be placed in a particular domain
  kind: object
  properties:
  - description: >
      The type of placement policy for a service fabric service. Following are the possible values.

        - Invalid - Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - InvalidDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1.
        - RequiredDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2.
        - PreferredPrimaryDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3.
        - RequiredDomainDistribution - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4.
        - NonPartiallyPlaceService - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5.
    types:
    - uid: RequireDomain
    typesTitle: string
    name: Type
  - description: The name of the domain that should used for placement as per this policy.
    types:
    - uid: string
    name: DomainName
- name: ServicePlacementRequireDomainDistributionPolicyDescription
  description: >
    Describes the policy to be used for placement of a Service Fabric service where two replicas from the same partition should never be placed in the same fault or upgrade domain.


    While this is not common it can expose the service to an increased risk of concurrent failures due to unplanned outages or other cases of subsequent/concurrent failures. As an example, consider a case where replicas are deployed across different data center, with one replica per location. In the event that one of the datacenters goes offline, normally the replica that was placed in that datacenter will be packed into one of the remaining datacenters. If this is not desirable then this policy should be set.
  kind: object
  properties:
  - description: >
      The type of placement policy for a service fabric service. Following are the possible values.

        - Invalid - Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - InvalidDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1.
        - RequiredDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2.
        - PreferredPrimaryDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3.
        - RequiredDomainDistribution - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4.
        - NonPartiallyPlaceService - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5.
    types:
    - uid: RequireDomainDistribution
    typesTitle: string
    name: Type
  - description: The name of the domain that should used for placement as per this policy.
    types:
    - uid: string
    name: DomainName
- name: FabricError_Error
  description: Error object containing error code and error message.
  kind: object
  properties:
  - description: >
      Defines the fabric error codes that be returned as part of the error object in response to Service Fabric API operations that are not successful. Following are the error code values that can be returned for a specific HTTP status code.

        - Possible values of the error code for HTTP status code 400 (Bad Request)
          - "FABRIC_E_INVALID_PARTITION_KEY"
          - "FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR"
          - "FABRIC_E_INVALID_ADDRESS"
          - "FABRIC_E_APPLICATION_NOT_UPGRADING"
          - "FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR"
          - "FABRIC_E_FABRIC_NOT_UPGRADING"
          - "FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR"
          - "FABRIC_E_INVALID_CONFIGURATION"
          - "FABRIC_E_INVALID_NAME_URI"
          - "FABRIC_E_PATH_TOO_LONG"
          - "FABRIC_E_KEY_TOO_LARGE"
          - "FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED"
          - "FABRIC_E_INVALID_ATOMIC_GROUP"
          - "FABRIC_E_VALUE_EMPTY"

        - Possible values of the error code for HTTP status code 404 (Not Found)
          - "FABRIC_E_NODE_NOT_FOUND"
          - "FABRIC_E_APPLICATION_TYPE_NOT_FOUND"
          - "FABRIC_E_APPLICATION_NOT_FOUND"
          - "FABRIC_E_SERVICE_TYPE_NOT_FOUND"
          - "FABRIC_E_SERVICE_DOES_NOT_EXIST"
          - "FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND"
          - "FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND"
          - "FABRIC_E_PARTITION_NOT_FOUND"
          - "FABRIC_E_REPLICA_DOES_NOT_EXIST"
          - "FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST"
          - "FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND"
          - "FABRIC_E_DIRECTORY_NOT_FOUND"
          - "FABRIC_E_FABRIC_VERSION_NOT_FOUND"
          - "FABRIC_E_FILE_NOT_FOUND"
          - "FABRIC_E_NAME_DOES_NOT_EXIST"
          - "FABRIC_E_PROPERTY_DOES_NOT_EXIST"
          - "FABRIC_E_ENUMERATION_COMPLETED"
          - "FABRIC_E_SERVICE_MANIFEST_NOT_FOUND"
          - "FABRIC_E_KEY_NOT_FOUND"
          - "FABRIC_E_HEALTH_ENTITY_NOT_FOUND"

        - Possible values of the error code for HTTP status code 409 (Conflict)
          - "FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION"
          - "FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS"
          - "FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS"
          - "FABRIC_E_SERVICE_ALREADY_EXISTS"
          - "FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_TYPE_IN_USE"
          - "FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION"
          - "FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS"
          - "FABRIC_E_FABRIC_VERSION_IN_USE"
          - "FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS"
          - "FABRIC_E_NAME_ALREADY_EXISTS"
          - "FABRIC_E_NAME_NOT_EMPTY"
          - "FABRIC_E_PROPERTY_CHECK_FAILED"
          - "FABRIC_E_SERVICE_METADATA_MISMATCH"
          - "FABRIC_E_SERVICE_TYPE_MISMATCH"
          - "FABRIC_E_HEALTH_STALE_REPORT"
          - "FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED"
          - "FABRIC_E_NODE_HAS_NOT_STOPPED_YET"
          - "FABRIC_E_INSTANCE_ID_MISMATCH"

        - Possible values of the error code for HTTP status code 413 (Request Entity Too Large)
          - "FABRIC_E_VALUE_TOO_LARGE"

        - Possible values of the error code for HTTP status code 500 (Internal Server Error)
          - "FABRIC_E_NODE_IS_UP"

        - Possible values of the error code for HTTP status code 503 (Service Unavailable)
          - "FABRIC_E_NO_WRITE_QUORUM"
          - "FABRIC_E_NOT_PRIMARY"
          - "FABRIC_E_NOT_READY"
          - "FABRIC_E_RECONFIGURATION_PENDING"
          - "FABRIC_E_SERVICE_OFFLINE"
          - "E_ABORT"
          - "FABRIC_E_VALUE_TOO_LARGE"

        - Possible values of the error code for HTTP status code 504 (Gateway Timeout)
          - "FABRIC_E_COMMUNICATION_ERROR"
          - "FABRIC_E_OPERATION_NOT_COMPLETE"
          - "FABRIC_E_TIMEOUT"
    types:
    - uid: FabricErrorCodes
    name: Code
  - description: Error message.
    types:
    - uid: string
    name: Message
- name: ServicePlacementPolicyType
  description: >
    The type of placement policy for a service fabric service. Following are the possible values.

      - Invalid - Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
      - InvalidDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1.
      - RequiredDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2.
      - PreferredPrimaryDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3.
      - RequiredDomainDistribution - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4.
      - NonPartiallyPlaceService - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: InvalidDomain
  - types:
    - uid: string
    name: RequiredDomain
  - types:
    - uid: string
    name: PreferredPrimaryDomain
  - types:
    - uid: string
    name: RequiredDomainDistribution
  - types:
    - uid: string
    name: NonPartiallyPlaceService
- name: FabricErrorCodes
  description: >
    Defines the fabric error codes that be returned as part of the error object in response to Service Fabric API operations that are not successful. Following are the error code values that can be returned for a specific HTTP status code.

      - Possible values of the error code for HTTP status code 400 (Bad Request)
        - "FABRIC_E_INVALID_PARTITION_KEY"
        - "FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR"
        - "FABRIC_E_INVALID_ADDRESS"
        - "FABRIC_E_APPLICATION_NOT_UPGRADING"
        - "FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR"
        - "FABRIC_E_FABRIC_NOT_UPGRADING"
        - "FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR"
        - "FABRIC_E_INVALID_CONFIGURATION"
        - "FABRIC_E_INVALID_NAME_URI"
        - "FABRIC_E_PATH_TOO_LONG"
        - "FABRIC_E_KEY_TOO_LARGE"
        - "FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED"
        - "FABRIC_E_INVALID_ATOMIC_GROUP"
        - "FABRIC_E_VALUE_EMPTY"

      - Possible values of the error code for HTTP status code 404 (Not Found)
        - "FABRIC_E_NODE_NOT_FOUND"
        - "FABRIC_E_APPLICATION_TYPE_NOT_FOUND"
        - "FABRIC_E_APPLICATION_NOT_FOUND"
        - "FABRIC_E_SERVICE_TYPE_NOT_FOUND"
        - "FABRIC_E_SERVICE_DOES_NOT_EXIST"
        - "FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND"
        - "FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND"
        - "FABRIC_E_PARTITION_NOT_FOUND"
        - "FABRIC_E_REPLICA_DOES_NOT_EXIST"
        - "FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST"
        - "FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND"
        - "FABRIC_E_DIRECTORY_NOT_FOUND"
        - "FABRIC_E_FABRIC_VERSION_NOT_FOUND"
        - "FABRIC_E_FILE_NOT_FOUND"
        - "FABRIC_E_NAME_DOES_NOT_EXIST"
        - "FABRIC_E_PROPERTY_DOES_NOT_EXIST"
        - "FABRIC_E_ENUMERATION_COMPLETED"
        - "FABRIC_E_SERVICE_MANIFEST_NOT_FOUND"
        - "FABRIC_E_KEY_NOT_FOUND"
        - "FABRIC_E_HEALTH_ENTITY_NOT_FOUND"

      - Possible values of the error code for HTTP status code 409 (Conflict)
        - "FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS"
        - "FABRIC_E_APPLICATION_ALREADY_EXISTS"
        - "FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION"
        - "FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS"
        - "FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS"
        - "FABRIC_E_SERVICE_ALREADY_EXISTS"
        - "FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS"
        - "FABRIC_E_APPLICATION_TYPE_IN_USE"
        - "FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION"
        - "FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS"
        - "FABRIC_E_FABRIC_VERSION_IN_USE"
        - "FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS"
        - "FABRIC_E_NAME_ALREADY_EXISTS"
        - "FABRIC_E_NAME_NOT_EMPTY"
        - "FABRIC_E_PROPERTY_CHECK_FAILED"
        - "FABRIC_E_SERVICE_METADATA_MISMATCH"
        - "FABRIC_E_SERVICE_TYPE_MISMATCH"
        - "FABRIC_E_HEALTH_STALE_REPORT"
        - "FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED"
        - "FABRIC_E_NODE_HAS_NOT_STOPPED_YET"
        - "FABRIC_E_INSTANCE_ID_MISMATCH"

      - Possible values of the error code for HTTP status code 413 (Request Entity Too Large)
        - "FABRIC_E_VALUE_TOO_LARGE"

      - Possible values of the error code for HTTP status code 500 (Internal Server Error)
        - "FABRIC_E_NODE_IS_UP"

      - Possible values of the error code for HTTP status code 503 (Service Unavailable)
        - "FABRIC_E_NO_WRITE_QUORUM"
        - "FABRIC_E_NOT_PRIMARY"
        - "FABRIC_E_NOT_READY"
        - "FABRIC_E_RECONFIGURATION_PENDING"
        - "FABRIC_E_SERVICE_OFFLINE"
        - "E_ABORT"
        - "FABRIC_E_VALUE_TOO_LARGE"

      - Possible values of the error code for HTTP status code 504 (Gateway Timeout)
        - "FABRIC_E_COMMUNICATION_ERROR"
        - "FABRIC_E_OPERATION_NOT_COMPLETE"
        - "FABRIC_E_TIMEOUT"
  kind: enum
  properties:
  - types:
    - uid: string
    name: FABRIC_E_INVALID_PARTITION_KEY
  - types:
    - uid: string
    name: FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR
  - types:
    - uid: string
    name: FABRIC_E_INVALID_ADDRESS
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_NOT_UPGRADING
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_NOT_UPGRADING
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR
  - types:
    - uid: string
    name: FABRIC_E_INVALID_CONFIGURATION
  - types:
    - uid: string
    name: FABRIC_E_INVALID_NAME_URI
  - types:
    - uid: string
    name: FABRIC_E_PATH_TOO_LONG
  - types:
    - uid: string
    name: FABRIC_E_KEY_TOO_LARGE
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED
  - types:
    - uid: string
    name: FABRIC_E_INVALID_ATOMIC_GROUP
  - types:
    - uid: string
    name: FABRIC_E_VALUE_EMPTY
  - types:
    - uid: string
    name: FABRIC_E_NODE_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_TYPE_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_TYPE_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_DOES_NOT_EXIST
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_PARTITION_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_REPLICA_DOES_NOT_EXIST
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST
  - types:
    - uid: string
    name: FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_DIRECTORY_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_VERSION_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_FILE_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_NAME_DOES_NOT_EXIST
  - types:
    - uid: string
    name: FABRIC_E_PROPERTY_DOES_NOT_EXIST
  - types:
    - uid: string
    name: FABRIC_E_ENUMERATION_COMPLETED
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_MANIFEST_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_KEY_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_HEALTH_ENTITY_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_ALREADY_EXISTS
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_ALREADY_EXISTS
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_TYPE_IN_USE
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_VERSION_IN_USE
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS
  - types:
    - uid: string
    name: FABRIC_E_NAME_ALREADY_EXISTS
  - types:
    - uid: string
    name: FABRIC_E_NAME_NOT_EMPTY
  - types:
    - uid: string
    name: FABRIC_E_PROPERTY_CHECK_FAILED
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_METADATA_MISMATCH
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_TYPE_MISMATCH
  - types:
    - uid: string
    name: FABRIC_E_HEALTH_STALE_REPORT
  - types:
    - uid: string
    name: FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED
  - types:
    - uid: string
    name: FABRIC_E_NODE_HAS_NOT_STOPPED_YET
  - types:
    - uid: string
    name: FABRIC_E_INSTANCE_ID_MISMATCH
  - types:
    - uid: string
    name: FABRIC_E_VALUE_TOO_LARGE
  - types:
    - uid: string
    name: FABRIC_E_NO_WRITE_QUORUM
  - types:
    - uid: string
    name: FABRIC_E_NOT_PRIMARY
  - types:
    - uid: string
    name: FABRIC_E_NOT_READY
  - types:
    - uid: string
    name: FABRIC_E_RECONFIGURATION_PENDING
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_OFFLINE
  - types:
    - uid: string
    name: E_ABORT
  - types:
    - uid: string
    name: FABRIC_E_COMMUNICATION_ERROR
  - types:
    - uid: string
    name: FABRIC_E_OPERATION_NOT_COMPLETE
  - types:
    - uid: string
    name: FABRIC_E_TIMEOUT
  - types:
    - uid: string
    name: FABRIC_E_NODE_IS_UP
examples: []
security: []
name: UpdateService
uid: localhost:19080.servicefabric.updateservice.updateservice

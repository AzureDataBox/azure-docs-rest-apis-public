### YamlMime:RESTOperation
uid: localhost:19080.servicefabric.startapplicationupgrade.startapplicationupgrade
name: Start Application Upgrade
service: Service Fabric
groupName: Start Application Upgrade
apiVersion: 6.2.0.9
summary: "Starts upgrading an application in the Service Fabric cluster.  \nValidates the supplied application upgrade parameters and starts upgrading the application if the parameters are valid."
produces:
- application/json
paths:
- content: POST http://localhost:19080/Applications/{applicationId}/$/Upgrade?api-version=6.2.0.9
- content: POST http://localhost:19080/Applications/{applicationId}/$/Upgrade?api-version=6.2.0.9&timeout={timeout}
  isOptional: true
uriParameters:
- name: applicationId
  in: path
  isRequired: true
  description: >-
    The identity of the application. This is typically the full name of the application without the 'fabric:' URI scheme.

    Starting from version 6.0, hierarchical names are delimited with the "~" character.

    For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: >-
    The version of the API. This parameter is required and its value must be '6.0'.


    Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.


    Additionally the runtime accept any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0, but if the runtime is 6.1, in order to make it easier to write the clients, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
  types:
  - uid: ApiVersion_6-0_RequiredQueryParam
- name: timeout
  in: query
  description: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
  types:
  - uid: integer
  format: int64
responses:
- name: 200 OK
  description: A successful response means that the application upgrade has started. Use GetApplicationUpgrade operation to get the status of the upgrade.
- name: Other Status Codes
  description: The detailed error response.
  types:
  - uid: FabricError
requestBody:
- parameters:
  - name: Name
    in: body
    isRequired: true
    description: The name of the target application, including the 'fabric:' URI scheme.
    types:
    - uid: string
  - name: TargetApplicationTypeVersion
    in: body
    isRequired: true
    description: The target application type version (found in the application manifest) for the application upgrade.
    types:
    - uid: string
  - name: Parameters
    in: body
    isRequired: true
    description: List of application parameters with overridden values from their default values specified in the application manifest.
    types:
    - uid: ApplicationParameter
      isArray: true
  - name: UpgradeKind
    in: body
    isRequired: true
    description: The kind of upgrade out of the following possible values.
    types:
    - uid: UpgradeKind
  - name: RollingUpgradeMode
    in: body
    description: The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and Monitored.
    types:
    - uid: UpgradeMode
  - name: UpgradeReplicaSetCheckTimeoutInSeconds
    in: body
    description: The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer).
    types:
    - uid: integer
  - name: ForceRestart
    in: body
    description: If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).
    types:
    - uid: boolean
  - name: MonitoringPolicy
    in: body
    description: Describes the parameters for monitoring an upgrade in Monitored mode.
    types:
    - uid: MonitoringPolicyDescription
  - name: ApplicationHealthPolicy
    in: body
    description: Defines a health policy used to evaluate the health of an application or one of its children entities.
    types:
    - uid: ApplicationHealthPolicy
requestHeader: []
definitions:
- name: ApiVersion_6-0_RequiredQueryParam
  description: >-
    The version of the API. This parameter is required and its value must be '6.0'.


    Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.


    Additionally the runtime accept any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0, but if the runtime is 6.1, in order to make it easier to write the clients, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
  kind: enum
  properties:
  - name: "6.0"
    description: The 6.0 version of the API.
    types:
    - uid: string
- name: ApplicationParameter
  description: Describes an application parameter override to be applied when creating or upgrading an application.
  kind: object
  properties:
  - name: Key
    description: The name of the parameter.
    types:
    - uid: string
  - name: Value
    description: The value of the parameter.
    types:
    - uid: string
- name: MonitoringPolicyDescription
  description: Describes the parameters for monitoring an upgrade in Monitored mode.
  kind: object
  properties:
  - name: FailureAction
    description: >-
      The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations.

      Invalid indicates the failure action is invalid. Rollback specifies that the upgrade will start rolling back automatically.

      Manual indicates that the upgrade will switch to UnmonitoredManual upgrade mode.
    types:
    - uid: FailureAction
  - name: HealthCheckWaitDurationInMilliseconds
    description: The amount of time to wait after completing an upgrade domain before applying health policies. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
    types:
    - uid: string
  - name: HealthCheckStableDurationInMilliseconds
    description: The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
    types:
    - uid: string
  - name: HealthCheckRetryTimeoutInMilliseconds
    description: The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
    types:
    - uid: string
  - name: UpgradeTimeoutInMilliseconds
    description: The amount of time the overall upgrade has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
    types:
    - uid: string
  - name: UpgradeDomainTimeoutInMilliseconds
    description: The amount of time each upgrade domain has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
    types:
    - uid: string
- name: ApplicationHealthPolicy
  description: Defines a health policy used to evaluate the health of an application or one of its children entities.
  kind: object
  properties:
  - name: ConsiderWarningAsError
    description: Indicates whether warnings are treated with the same severity as errors.
    types:
    - uid: boolean
  - name: MaxPercentUnhealthyDeployedApplications
    description: >-
      The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.

      The percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.

      This is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.

      The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.
    types:
    - uid: integer
  - name: DefaultServiceTypeHealthPolicy
    description: The health policy used by default to evaluate the health of a service type.
    types:
    - uid: ServiceTypeHealthPolicy
  - name: ServiceTypeHealthPolicyMap
    description: The map with service type health policy per service type name. The map is empty by default.
    types:
    - uid: ServiceTypeHealthPolicyMapItem
      isArray: true
- name: FabricError
  description: The REST API operations for Service Fabric return standard HTTP status codes. This type defines the additional information returned from the Service Fabric API operations that are not successful.
  kind: object
  properties:
  - name: Error
    description: Error object containing error code and error message.
    types:
    - uid: FabricErrorError
- name: ApplicationUpgradeDescription
  description: Describes the parameters for an application upgrade. Please note that upgrade description replaces the existing application description. This means that if the parameters are not specified, the existing parameters on the applications will be overwritten with the empty parameters list. This would results in application using the default value of the parameters from the application manifest. If you do not want to change any existing parameter values, please get the application parameters first using the GetApplicationInfo query and then supply those values as Parameters in this ApplicationUpgradeDescription.
  kind: object
  properties:
  - name: Name
    description: The name of the target application, including the 'fabric:' URI scheme.
    types:
    - uid: string
  - name: TargetApplicationTypeVersion
    description: The target application type version (found in the application manifest) for the application upgrade.
    types:
    - uid: string
  - name: Parameters
    description: List of application parameters with overridden values from their default values specified in the application manifest.
    types:
    - uid: ApplicationParameter
      isArray: true
  - name: UpgradeKind
    description: The kind of upgrade out of the following possible values.
    types:
    - uid: UpgradeKind
  - name: RollingUpgradeMode
    description: The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and Monitored.
    types:
    - uid: UpgradeMode
  - name: UpgradeReplicaSetCheckTimeoutInSeconds
    description: The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer).
    types:
    - uid: integer
  - name: ForceRestart
    description: If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).
    types:
    - uid: boolean
  - name: MonitoringPolicy
    description: Describes the parameters for monitoring an upgrade in Monitored mode.
    types:
    - uid: MonitoringPolicyDescription
  - name: ApplicationHealthPolicy
    description: Defines a health policy used to evaluate the health of an application or one of its children entities.
    types:
    - uid: ApplicationHealthPolicy
- name: FailureAction
  description: >-
    The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations.

    Invalid indicates the failure action is invalid. Rollback specifies that the upgrade will start rolling back automatically.

    Manual indicates that the upgrade will switch to UnmonitoredManual upgrade mode.
  kind: enum
  properties:
  - name: Invalid
    description: Indicates the failure action is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
    types:
    - uid: string
  - name: Rollback
    description: The upgrade will start rolling back automatically. The value is 1
    types:
    - uid: string
  - name: Manual
    description: The upgrade will switch to UnmonitoredManual upgrade mode. The value is 2
    types:
    - uid: string
- name: ServiceTypeHealthPolicy
  description: Represents the health policy used to evaluate the health of services belonging to a service type.
  kind: object
  properties:
  - name: MaxPercentUnhealthyPartitionsPerService
    description: >-
      The maximum allowed percentage of unhealthy partitions per service. Allowed values are Byte values from zero to 100


      The percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.

      If the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.

      The percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.

      The computation rounds up to tolerate one failure on small numbers of partitions. Default percentage is zero.
    types:
    - uid: integer
  - name: MaxPercentUnhealthyReplicasPerPartition
    description: >-
      The maximum allowed percentage of unhealthy replicas per partition. Allowed values are Byte values from zero to 100.


      The percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.

      If the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.

      The percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.

      The computation rounds up to tolerate one failure on small numbers of replicas. Default percentage is zero.
    types:
    - uid: integer
  - name: MaxPercentUnhealthyServices
    description: >-
      The maximum maximum allowed percentage of unhealthy services. Allowed values are Byte values from zero to 100.


      The percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.

      If the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.

      This is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.

      The computation rounds up to tolerate one failure on small numbers of services. Default percentage is zero.
    types:
    - uid: integer
- name: ServiceTypeHealthPolicyMapItem
  description: Defines an item in ServiceTypeHealthPolicyMap.
  kind: object
  properties:
  - name: Key
    description: The key of the service type health policy map item. This is the name of the service type.
    types:
    - uid: string
  - name: Value
    description: The value of the service type health policy map item. This is the ServiceTypeHealthPolicy for this service type.
    types:
    - uid: ServiceTypeHealthPolicy
- name: FabricErrorError
  description: Error object containing error code and error message.
  kind: object
  properties:
  - name: Code
    description: >-
      Defines the fabric error codes that be returned as part of the error object in response to Service Fabric API operations that are not successful. Following are the error code values that can be returned for a specific HTTP status code.

        - Possible values of the error code for HTTP status code 400 (Bad Request)
          - "FABRIC_E_INVALID_PARTITION_KEY"
          - "FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR"
          - "FABRIC_E_INVALID_ADDRESS"
          - "FABRIC_E_APPLICATION_NOT_UPGRADING"
          - "FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR"
          - "FABRIC_E_FABRIC_NOT_UPGRADING"
          - "FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR"
          - "FABRIC_E_INVALID_CONFIGURATION"
          - "FABRIC_E_INVALID_NAME_URI"
          - "FABRIC_E_PATH_TOO_LONG"
          - "FABRIC_E_KEY_TOO_LARGE"
          - "FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED"
          - "FABRIC_E_INVALID_ATOMIC_GROUP"
          - "FABRIC_E_VALUE_EMPTY"
          - "FABRIC_E_BACKUP_IS_ENABLED"
          - "FABRIC_E_RESTORE_SOURCE_TARGET_PARTITION_MISMATCH"
          - "FABRIC_E_INVALID_FOR_STATELESS_SERVICES"
          - "FABRIC_E_INVALID_SERVICE_SCALING_POLICY"
          - "E_INVALIDARG"

        - Possible values of the error code for HTTP status code 404 (Not Found)
          - "FABRIC_E_NODE_NOT_FOUND"
          - "FABRIC_E_APPLICATION_TYPE_NOT_FOUND"
          - "FABRIC_E_APPLICATION_NOT_FOUND"
          - "FABRIC_E_SERVICE_TYPE_NOT_FOUND"
          - "FABRIC_E_SERVICE_DOES_NOT_EXIST"
          - "FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND"
          - "FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND"
          - "FABRIC_E_PARTITION_NOT_FOUND"
          - "FABRIC_E_REPLICA_DOES_NOT_EXIST"
          - "FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST"
          - "FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND"
          - "FABRIC_E_DIRECTORY_NOT_FOUND"
          - "FABRIC_E_FABRIC_VERSION_NOT_FOUND"
          - "FABRIC_E_FILE_NOT_FOUND"
          - "FABRIC_E_NAME_DOES_NOT_EXIST"
          - "FABRIC_E_PROPERTY_DOES_NOT_EXIST"
          - "FABRIC_E_ENUMERATION_COMPLETED"
          - "FABRIC_E_SERVICE_MANIFEST_NOT_FOUND"
          - "FABRIC_E_KEY_NOT_FOUND"
          - "FABRIC_E_HEALTH_ENTITY_NOT_FOUND"
          - "FABRIC_E_BACKUP_NOT_ENABLED"
          - "FABRIC_E_BACKUP_POLICY_NOT_EXISTING"
          - "FABRIC_E_FAULT_ANALYSIS_SERVICE_NOT_EXISTING"

        - Possible values of the error code for HTTP status code 409 (Conflict)
          - "FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION"
          - "FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS"
          - "FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS"
          - "FABRIC_E_SERVICE_ALREADY_EXISTS"
          - "FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_TYPE_IN_USE"
          - "FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION"
          - "FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS"
          - "FABRIC_E_FABRIC_VERSION_IN_USE"
          - "FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS"
          - "FABRIC_E_NAME_ALREADY_EXISTS"
          - "FABRIC_E_NAME_NOT_EMPTY"
          - "FABRIC_E_PROPERTY_CHECK_FAILED"
          - "FABRIC_E_SERVICE_METADATA_MISMATCH"
          - "FABRIC_E_SERVICE_TYPE_MISMATCH"
          - "FABRIC_E_HEALTH_STALE_REPORT"
          - "FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED"
          - "FABRIC_E_NODE_HAS_NOT_STOPPED_YET"
          - "FABRIC_E_INSTANCE_ID_MISMATCH"
          - "FABRIC_E_BACKUP_IN_PROGRESS"
          - "FABRIC_E_RESTORE_IN_PROGRESS"
          - "FABRIC_E_BACKUP_POLICY_ALREADY_EXISTING"

        - Possible values of the error code for HTTP status code 413 (Request Entity Too Large)
          - "FABRIC_E_VALUE_TOO_LARGE"

        - Possible values of the error code for HTTP status code 500 (Internal Server Error)
          - "FABRIC_E_NODE_IS_UP"
          - "E_FAIL"

        - Possible values of the error code for HTTP status code 503 (Service Unavailable)
          - "FABRIC_E_NO_WRITE_QUORUM"
          - "FABRIC_E_NOT_PRIMARY"
          - "FABRIC_E_NOT_READY"
          - "FABRIC_E_RECONFIGURATION_PENDING"
          - "FABRIC_E_SERVICE_OFFLINE"
          - "E_ABORT"
          - "FABRIC_E_VALUE_TOO_LARGE"

        - Possible values of the error code for HTTP status code 504 (Gateway Timeout)
          - "FABRIC_E_COMMUNICATION_ERROR"
          - "FABRIC_E_OPERATION_NOT_COMPLETE"
          - "FABRIC_E_TIMEOUT"
    types:
    - uid: FabricErrorCodes
  - name: Message
    description: Error message.
    types:
    - uid: string
- name: UpgradeKind
  description: The kind of upgrade out of the following possible values.
  kind: enum
  properties:
  - name: Invalid
    description: Indicates the upgrade kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
    types:
    - uid: string
  - name: Rolling
    description: The upgrade progresses one upgrade domain at a time. The value is 1
    types:
    - uid: string
- name: UpgradeMode
  description: The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and Monitored.
  kind: enum
  properties:
  - name: Invalid
    description: Indicates the upgrade mode is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
    types:
    - uid: string
  - name: UnmonitoredAuto
    description: The upgrade will proceed automatically without performing any health monitoring. The value is 1
    types:
    - uid: string
  - name: UnmonitoredManual
    description: The upgrade will stop after completing each upgrade domain, giving the opportunity to manually monitor health before proceeding. The value is 2
    types:
    - uid: string
  - name: Monitored
    description: The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 3
    types:
    - uid: string
- name: FabricErrorCodes
  description: >-
    Defines the fabric error codes that be returned as part of the error object in response to Service Fabric API operations that are not successful. Following are the error code values that can be returned for a specific HTTP status code.

      - Possible values of the error code for HTTP status code 400 (Bad Request)
        - "FABRIC_E_INVALID_PARTITION_KEY"
        - "FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR"
        - "FABRIC_E_INVALID_ADDRESS"
        - "FABRIC_E_APPLICATION_NOT_UPGRADING"
        - "FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR"
        - "FABRIC_E_FABRIC_NOT_UPGRADING"
        - "FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR"
        - "FABRIC_E_INVALID_CONFIGURATION"
        - "FABRIC_E_INVALID_NAME_URI"
        - "FABRIC_E_PATH_TOO_LONG"
        - "FABRIC_E_KEY_TOO_LARGE"
        - "FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED"
        - "FABRIC_E_INVALID_ATOMIC_GROUP"
        - "FABRIC_E_VALUE_EMPTY"
        - "FABRIC_E_BACKUP_IS_ENABLED"
        - "FABRIC_E_RESTORE_SOURCE_TARGET_PARTITION_MISMATCH"
        - "FABRIC_E_INVALID_FOR_STATELESS_SERVICES"
        - "FABRIC_E_INVALID_SERVICE_SCALING_POLICY"
        - "E_INVALIDARG"

      - Possible values of the error code for HTTP status code 404 (Not Found)
        - "FABRIC_E_NODE_NOT_FOUND"
        - "FABRIC_E_APPLICATION_TYPE_NOT_FOUND"
        - "FABRIC_E_APPLICATION_NOT_FOUND"
        - "FABRIC_E_SERVICE_TYPE_NOT_FOUND"
        - "FABRIC_E_SERVICE_DOES_NOT_EXIST"
        - "FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND"
        - "FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND"
        - "FABRIC_E_PARTITION_NOT_FOUND"
        - "FABRIC_E_REPLICA_DOES_NOT_EXIST"
        - "FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST"
        - "FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND"
        - "FABRIC_E_DIRECTORY_NOT_FOUND"
        - "FABRIC_E_FABRIC_VERSION_NOT_FOUND"
        - "FABRIC_E_FILE_NOT_FOUND"
        - "FABRIC_E_NAME_DOES_NOT_EXIST"
        - "FABRIC_E_PROPERTY_DOES_NOT_EXIST"
        - "FABRIC_E_ENUMERATION_COMPLETED"
        - "FABRIC_E_SERVICE_MANIFEST_NOT_FOUND"
        - "FABRIC_E_KEY_NOT_FOUND"
        - "FABRIC_E_HEALTH_ENTITY_NOT_FOUND"
        - "FABRIC_E_BACKUP_NOT_ENABLED"
        - "FABRIC_E_BACKUP_POLICY_NOT_EXISTING"
        - "FABRIC_E_FAULT_ANALYSIS_SERVICE_NOT_EXISTING"

      - Possible values of the error code for HTTP status code 409 (Conflict)
        - "FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS"
        - "FABRIC_E_APPLICATION_ALREADY_EXISTS"
        - "FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION"
        - "FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS"
        - "FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS"
        - "FABRIC_E_SERVICE_ALREADY_EXISTS"
        - "FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS"
        - "FABRIC_E_APPLICATION_TYPE_IN_USE"
        - "FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION"
        - "FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS"
        - "FABRIC_E_FABRIC_VERSION_IN_USE"
        - "FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS"
        - "FABRIC_E_NAME_ALREADY_EXISTS"
        - "FABRIC_E_NAME_NOT_EMPTY"
        - "FABRIC_E_PROPERTY_CHECK_FAILED"
        - "FABRIC_E_SERVICE_METADATA_MISMATCH"
        - "FABRIC_E_SERVICE_TYPE_MISMATCH"
        - "FABRIC_E_HEALTH_STALE_REPORT"
        - "FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED"
        - "FABRIC_E_NODE_HAS_NOT_STOPPED_YET"
        - "FABRIC_E_INSTANCE_ID_MISMATCH"
        - "FABRIC_E_BACKUP_IN_PROGRESS"
        - "FABRIC_E_RESTORE_IN_PROGRESS"
        - "FABRIC_E_BACKUP_POLICY_ALREADY_EXISTING"

      - Possible values of the error code for HTTP status code 413 (Request Entity Too Large)
        - "FABRIC_E_VALUE_TOO_LARGE"

      - Possible values of the error code for HTTP status code 500 (Internal Server Error)
        - "FABRIC_E_NODE_IS_UP"
        - "E_FAIL"

      - Possible values of the error code for HTTP status code 503 (Service Unavailable)
        - "FABRIC_E_NO_WRITE_QUORUM"
        - "FABRIC_E_NOT_PRIMARY"
        - "FABRIC_E_NOT_READY"
        - "FABRIC_E_RECONFIGURATION_PENDING"
        - "FABRIC_E_SERVICE_OFFLINE"
        - "E_ABORT"
        - "FABRIC_E_VALUE_TOO_LARGE"

      - Possible values of the error code for HTTP status code 504 (Gateway Timeout)
        - "FABRIC_E_COMMUNICATION_ERROR"
        - "FABRIC_E_OPERATION_NOT_COMPLETE"
        - "FABRIC_E_TIMEOUT"
  kind: enum
  properties:
  - name: FABRIC_E_INVALID_PARTITION_KEY
    types:
    - uid: string
  - name: FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR
    types:
    - uid: string
  - name: FABRIC_E_INVALID_ADDRESS
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_NOT_UPGRADING
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_NOT_UPGRADING
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR
    types:
    - uid: string
  - name: FABRIC_E_INVALID_CONFIGURATION
    types:
    - uid: string
  - name: FABRIC_E_INVALID_NAME_URI
    types:
    - uid: string
  - name: FABRIC_E_PATH_TOO_LONG
    types:
    - uid: string
  - name: FABRIC_E_KEY_TOO_LARGE
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED
    types:
    - uid: string
  - name: FABRIC_E_INVALID_ATOMIC_GROUP
    types:
    - uid: string
  - name: FABRIC_E_VALUE_EMPTY
    types:
    - uid: string
  - name: FABRIC_E_NODE_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_TYPE_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_TYPE_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_DOES_NOT_EXIST
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_PARTITION_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_REPLICA_DOES_NOT_EXIST
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST
    types:
    - uid: string
  - name: FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_DIRECTORY_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_VERSION_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_FILE_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_NAME_DOES_NOT_EXIST
    types:
    - uid: string
  - name: FABRIC_E_PROPERTY_DOES_NOT_EXIST
    types:
    - uid: string
  - name: FABRIC_E_ENUMERATION_COMPLETED
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_MANIFEST_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_KEY_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_HEALTH_ENTITY_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_ALREADY_EXISTS
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_ALREADY_EXISTS
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_TYPE_IN_USE
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_VERSION_IN_USE
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS
    types:
    - uid: string
  - name: FABRIC_E_NAME_ALREADY_EXISTS
    types:
    - uid: string
  - name: FABRIC_E_NAME_NOT_EMPTY
    types:
    - uid: string
  - name: FABRIC_E_PROPERTY_CHECK_FAILED
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_METADATA_MISMATCH
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_TYPE_MISMATCH
    types:
    - uid: string
  - name: FABRIC_E_HEALTH_STALE_REPORT
    types:
    - uid: string
  - name: FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED
    types:
    - uid: string
  - name: FABRIC_E_NODE_HAS_NOT_STOPPED_YET
    types:
    - uid: string
  - name: FABRIC_E_INSTANCE_ID_MISMATCH
    types:
    - uid: string
  - name: FABRIC_E_VALUE_TOO_LARGE
    types:
    - uid: string
  - name: FABRIC_E_NO_WRITE_QUORUM
    types:
    - uid: string
  - name: FABRIC_E_NOT_PRIMARY
    types:
    - uid: string
  - name: FABRIC_E_NOT_READY
    types:
    - uid: string
  - name: FABRIC_E_RECONFIGURATION_PENDING
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_OFFLINE
    types:
    - uid: string
  - name: E_ABORT
    types:
    - uid: string
  - name: FABRIC_E_COMMUNICATION_ERROR
    types:
    - uid: string
  - name: FABRIC_E_OPERATION_NOT_COMPLETE
    types:
    - uid: string
  - name: FABRIC_E_TIMEOUT
    types:
    - uid: string
  - name: FABRIC_E_NODE_IS_UP
    types:
    - uid: string
  - name: E_FAIL
    types:
    - uid: string
  - name: FABRIC_E_BACKUP_IS_ENABLED
    types:
    - uid: string
  - name: FABRIC_E_RESTORE_SOURCE_TARGET_PARTITION_MISMATCH
    types:
    - uid: string
  - name: FABRIC_E_INVALID_FOR_STATELESS_SERVICES
    types:
    - uid: string
  - name: FABRIC_E_BACKUP_NOT_ENABLED
    types:
    - uid: string
  - name: FABRIC_E_BACKUP_POLICY_NOT_EXISTING
    types:
    - uid: string
  - name: FABRIC_E_FAULT_ANALYSIS_SERVICE_NOT_EXISTING
    types:
    - uid: string
  - name: FABRIC_E_BACKUP_IN_PROGRESS
    types:
    - uid: string
  - name: FABRIC_E_RESTORE_IN_PROGRESS
    types:
    - uid: string
  - name: FABRIC_E_BACKUP_POLICY_ALREADY_EXISTING
    types:
    - uid: string
  - name: FABRIC_E_INVALID_SERVICE_SCALING_POLICY
    types:
    - uid: string
  - name: E_INVALIDARG
    types:
    - uid: string
examples: []
security: []

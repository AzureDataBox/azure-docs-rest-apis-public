### YamlMime:RESTOperation
uid: localhost:19080.servicefabric.getservicedescription.getservicedescription
name: Get Service Description
service: Service Fabric
groupName: Get Service Description
apiVersion: 6.0.0.1
summary: Gets the description of an existing Service Fabric service. Gets the description of an existing Service Fabric service. A service must be created before its description can be obtained.
produces:
- application/json
paths:
- content: GET http://localhost:19080/Services/{serviceId}/$/GetDescription?api-version=6.0.0.1
- content: GET http://localhost:19080/Services/{serviceId}/$/GetDescription?api-version=6.0.0.1&timeout={timeout}
  isOptional: true
uriParameters:
- name: serviceId
  in: path
  isRequired: true
  description: The identity of the service. This is typically the full name of the service without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the "~" character. For example, if the service name is "fabric://myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The version of the API. This is a required parameter and it's value must be "6.0".
  types:
  - uid: string
- name: timeout
  in: query
  description: The server timeout for performing the operation in seconds. This specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
  types:
  - uid: integer
  format: int64
responses:
- name: 200 OK
  description: A successful operation will return 200 status code.
  types:
  - uid: StatefulServiceDescription
  - uid: StatelessServiceDescription
  typesTitle: ServiceDescription
- name: Other Status Codes
  description: The detailed error response.
  types:
  - uid: FabricError
requestHeader: []
definitions:
- name: FabricError
  description: The REST API operations for Service Fabric return standard HTTP status codes. This type defines the additional information returned from the Service Fabric API operations that are not successful.
  kind: object
  properties:
  - name: Error
    description: Error object containing error code and error message.
    types:
    - uid: FabricError_Error
- name: StatefulServiceDescription
  description: Describes a stateful service.
  kind: object
  properties:
  - name: TargetReplicaSetSize
    description: The target replica set size as a number.
    types:
    - uid: integer
  - name: MinReplicaSetSize
    description: The minimum replica set size as a number.
    types:
    - uid: integer
  - name: HasPersistedState
    description: A flag indicating whether this is a persistent service which stores states on the local disk. If it is then the value of this property is true, if not it is false.
    types:
    - uid: boolean
  - name: Flags
    description: >-
      Flags indicating whether other properties are set. Each of the associated properties corresponds to a flag, specified below, which, if set, indicate that the property is specified.

      This property can be a combination of those flags obtained using bitwise 'OR' operator.

      For example, if the provided value is 6 then the flags for QuorumLossWaitDuration (2) and StandByReplicaKeepDuration(4) are set.


      - None - Does not indicate any other properties are set. The value is zero.

      - ReplicaRestartWaitDuration - Indicates the ReplicaRestartWaitDuration property is set. The value is 1.

      - QuorumLossWaitDuration - Indicates the QuorumLossWaitDuration property is set. The value is 2.

      - StandByReplicaKeepDuration - Indicates the StandByReplicaKeepDuration property is set. The value is 4.
    types:
    - uid: integer
  - name: ReplicaRestartWaitDurationSeconds
    description: The duration, in seconds, between when a replica goes down and when a new replica is created.
    types:
    - uid: integer
  - name: QuorumLossWaitDurationSeconds
    description: The maximum duration, in seconds, for which a partition is allowed to be in a state of quorum loss.
    types:
    - uid: integer
  - name: StandByReplicaKeepDurationSeconds
    description: The definition on how long StandBy replicas should be maintained before being removed.
    types:
    - uid: integer
  - name: ServiceKind
    description: >-
      The kind of service (Stateless or Stateful). Following are the possible values.


      - Invalid - Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1.

      - Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
    types:
    - uid: Stateful
    typesTitle: string
  - name: ApplicationName
    description: The name of the application, including the 'fabric:' URI scheme.
    types:
    - uid: string
  - name: ServiceName
    description: The full name of the service with 'fabric:' URI scheme.
    types:
    - uid: string
  - name: ServiceTypeName
    description: Name of the service type as specified in the service manifest.
    types:
    - uid: string
  - name: InitializationData
    description: Array of bytes to be sent as an integer array. Each element of array is a number between 0 and 255.
    types:
    - uid: integer
      isArray: true
  - name: PartitionDescription
    description: Describes how the service is partitioned.
    types:
    - uid: NamedPartitionSchemeDescription
    - uid: SingletonPartitionSchemeDescription
    - uid: UniformInt64RangePartitionSchemeDescription
    typesTitle: PartitionSchemeDescription
  - name: PlacementConstraints
    description: 'The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: "NodeColor == blue)".'
    types:
    - uid: string
  - name: CorrelationScheme
    description: Creates a particular correlation between services.
    types:
    - uid: ServiceCorrelationDescription
      isArray: true
  - name: ServiceLoadMetrics
    description: Specifies a metric to load balance a service during runtime.
    types:
    - uid: ServiceLoadMetricDescription
      isArray: true
  - name: ServicePlacementPolicies
    description: Describes the policy to be used for placement of a Service Fabric service.
    types:
    - uid: ServicePlacementInvalidDomainPolicyDescription
      isArray: true
    - uid: ServicePlacementNonPartiallyPlaceServicePolicyDescription
      isArray: true
    - uid: ServicePlacementPreferPrimaryDomainPolicyDescription
      isArray: true
    - uid: ServicePlacementRequiredDomainPolicyDescription
      isArray: true
    - uid: ServicePlacementRequireDomainDistributionPolicyDescription
      isArray: true
    typesTitle: ServicePlacementPolicyDescription[]
  - name: DefaultMoveCost
    description: >-
      Specifies the move cost for the service. Possible values are the following.

        - Zero - Zero move cost. This value is zero.
        - Low - Specifies the move cost of the service as Low. The value is 1.
        - Medium - Specifies the move cost of the service as Medium. The value is 2.
        - High - Specifies the move cost of the service as High. The value is 3.
    types:
    - uid: MoveCost
  - name: IsDefaultMoveCostSpecified
    description: Indicates if the DefaultMoveCost property is specified.
    types:
    - uid: boolean
  - name: ServicePackageActivationMode
    description: >-
      The activation mode of service package to be used for a Service Fabric service. This is specified at the time of creating the Service. Possible values are following.

        - SharedProcess - This is the default activation mode. With this activation mode, replicas or instances from different partition(s) of service, on a given node, will share same activation of service package on a node. The value is zero.
        - ExclusiveProcess - With this activation mode, each replica or instance of service, on a given node, will have its own dedicated activation of service package on a node. The value is 1.
    types:
    - uid: ServicePackageActivationMode
  - name: ServiceDnsName
    description: The DNS name of the service. It requires the DNS system service to be enabled in Service Fabric cluster.
    types:
    - uid: string
- name: StatelessServiceDescription
  description: Describes a stateless service.
  kind: object
  properties:
  - name: InstanceCount
    description: The instance count.
    types:
    - uid: integer
  - name: ServiceKind
    description: >-
      The kind of service (Stateless or Stateful). Following are the possible values.


      - Invalid - Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1.

      - Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
    types:
    - uid: Stateless
    typesTitle: string
  - name: ApplicationName
    description: The name of the application, including the 'fabric:' URI scheme.
    types:
    - uid: string
  - name: ServiceName
    description: The full name of the service with 'fabric:' URI scheme.
    types:
    - uid: string
  - name: ServiceTypeName
    description: Name of the service type as specified in the service manifest.
    types:
    - uid: string
  - name: InitializationData
    description: Array of bytes to be sent as an integer array. Each element of array is a number between 0 and 255.
    types:
    - uid: integer
      isArray: true
  - name: PartitionDescription
    description: Describes how the service is partitioned.
    types:
    - uid: NamedPartitionSchemeDescription
    - uid: SingletonPartitionSchemeDescription
    - uid: UniformInt64RangePartitionSchemeDescription
    typesTitle: PartitionSchemeDescription
  - name: PlacementConstraints
    description: 'The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: "NodeColor == blue)".'
    types:
    - uid: string
  - name: CorrelationScheme
    description: Creates a particular correlation between services.
    types:
    - uid: ServiceCorrelationDescription
      isArray: true
  - name: ServiceLoadMetrics
    description: Specifies a metric to load balance a service during runtime.
    types:
    - uid: ServiceLoadMetricDescription
      isArray: true
  - name: ServicePlacementPolicies
    description: Describes the policy to be used for placement of a Service Fabric service.
    types:
    - uid: ServicePlacementInvalidDomainPolicyDescription
      isArray: true
    - uid: ServicePlacementNonPartiallyPlaceServicePolicyDescription
      isArray: true
    - uid: ServicePlacementPreferPrimaryDomainPolicyDescription
      isArray: true
    - uid: ServicePlacementRequiredDomainPolicyDescription
      isArray: true
    - uid: ServicePlacementRequireDomainDistributionPolicyDescription
      isArray: true
    typesTitle: ServicePlacementPolicyDescription[]
  - name: DefaultMoveCost
    description: >-
      Specifies the move cost for the service. Possible values are the following.

        - Zero - Zero move cost. This value is zero.
        - Low - Specifies the move cost of the service as Low. The value is 1.
        - Medium - Specifies the move cost of the service as Medium. The value is 2.
        - High - Specifies the move cost of the service as High. The value is 3.
    types:
    - uid: MoveCost
  - name: IsDefaultMoveCostSpecified
    description: Indicates if the DefaultMoveCost property is specified.
    types:
    - uid: boolean
  - name: ServicePackageActivationMode
    description: >-
      The activation mode of service package to be used for a Service Fabric service. This is specified at the time of creating the Service. Possible values are following.

        - SharedProcess - This is the default activation mode. With this activation mode, replicas or instances from different partition(s) of service, on a given node, will share same activation of service package on a node. The value is zero.
        - ExclusiveProcess - With this activation mode, each replica or instance of service, on a given node, will have its own dedicated activation of service package on a node. The value is 1.
    types:
    - uid: ServicePackageActivationMode
  - name: ServiceDnsName
    description: The DNS name of the service. It requires the DNS system service to be enabled in Service Fabric cluster.
    types:
    - uid: string
- name: FabricError_Error
  description: Error object containing error code and error message.
  kind: object
  properties:
  - name: Code
    description: >-
      Defines the fabric error codes that be returned as part of the error object in response to Service Fabric API operations that are not successful. Following are the error code values that can be returned for a specific HTTP status code.

        - Possible values of the error code for HTTP status code 400 (Bad Request)
          - "FABRIC_E_INVALID_PARTITION_KEY"
          - "FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR"
          - "FABRIC_E_INVALID_ADDRESS"
          - "FABRIC_E_APPLICATION_NOT_UPGRADING"
          - "FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR"
          - "FABRIC_E_FABRIC_NOT_UPGRADING"
          - "FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR"
          - "FABRIC_E_INVALID_CONFIGURATION"
          - "FABRIC_E_INVALID_NAME_URI"
          - "FABRIC_E_PATH_TOO_LONG"
          - "FABRIC_E_KEY_TOO_LARGE"
          - "FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED"
          - "FABRIC_E_INVALID_ATOMIC_GROUP"
          - "FABRIC_E_VALUE_EMPTY"

        - Possible values of the error code for HTTP status code 404 (Not Found)
          - "FABRIC_E_NODE_NOT_FOUND"
          - "FABRIC_E_APPLICATION_TYPE_NOT_FOUND"
          - "FABRIC_E_APPLICATION_NOT_FOUND"
          - "FABRIC_E_SERVICE_TYPE_NOT_FOUND"
          - "FABRIC_E_SERVICE_DOES_NOT_EXIST"
          - "FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND"
          - "FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND"
          - "FABRIC_E_PARTITION_NOT_FOUND"
          - "FABRIC_E_REPLICA_DOES_NOT_EXIST"
          - "FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST"
          - "FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND"
          - "FABRIC_E_DIRECTORY_NOT_FOUND"
          - "FABRIC_E_FABRIC_VERSION_NOT_FOUND"
          - "FABRIC_E_FILE_NOT_FOUND"
          - "FABRIC_E_NAME_DOES_NOT_EXIST"
          - "FABRIC_E_PROPERTY_DOES_NOT_EXIST"
          - "FABRIC_E_ENUMERATION_COMPLETED"
          - "FABRIC_E_SERVICE_MANIFEST_NOT_FOUND"
          - "FABRIC_E_KEY_NOT_FOUND"
          - "FABRIC_E_HEALTH_ENTITY_NOT_FOUND"

        - Possible values of the error code for HTTP status code 409 (Conflict)
          - "FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION"
          - "FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS"
          - "FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS"
          - "FABRIC_E_SERVICE_ALREADY_EXISTS"
          - "FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_TYPE_IN_USE"
          - "FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION"
          - "FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS"
          - "FABRIC_E_FABRIC_VERSION_IN_USE"
          - "FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS"
          - "FABRIC_E_NAME_ALREADY_EXISTS"
          - "FABRIC_E_NAME_NOT_EMPTY"
          - "FABRIC_E_PROPERTY_CHECK_FAILED"
          - "FABRIC_E_SERVICE_METADATA_MISMATCH"
          - "FABRIC_E_SERVICE_TYPE_MISMATCH"
          - "FABRIC_E_HEALTH_STALE_REPORT"
          - "FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED"
          - "FABRIC_E_NODE_HAS_NOT_STOPPED_YET"
          - "FABRIC_E_INSTANCE_ID_MISMATCH"

        - Possible values of the error code for HTTP status code 413 (Request Entity Too Large)
          - "FABRIC_E_VALUE_TOO_LARGE"

        - Possible values of the error code for HTTP status code 500 (Internal Server Error)
          - "FABRIC_E_NODE_IS_UP"

        - Possible values of the error code for HTTP status code 503 (Service Unavailable)
          - "FABRIC_E_NO_WRITE_QUORUM"
          - "FABRIC_E_NOT_PRIMARY"
          - "FABRIC_E_NOT_READY"
          - "FABRIC_E_RECONFIGURATION_PENDING"
          - "FABRIC_E_SERVICE_OFFLINE"
          - "E_ABORT"
          - "FABRIC_E_VALUE_TOO_LARGE"

        - Possible values of the error code for HTTP status code 504 (Gateway Timeout)
          - "FABRIC_E_COMMUNICATION_ERROR"
          - "FABRIC_E_OPERATION_NOT_COMPLETE"
          - "FABRIC_E_TIMEOUT"
    types:
    - uid: FabricErrorCodes
  - name: Message
    description: Error message.
    types:
    - uid: string
- name: ServiceKind
  description: >-
    The kind of service (Stateless or Stateful). Following are the possible values.


    - Invalid - Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

    - Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1.

    - Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
  kind: enum
  properties:
  - name: Invalid
    types:
    - uid: string
  - name: Stateless
    types:
    - uid: string
  - name: Stateful
    types:
    - uid: string
- name: ServiceCorrelationDescription
  description: Creates a particular correlation between services.
  kind: object
  properties:
  - name: Scheme
    description: >-
      The service correlation scheme. Possible values are following.

        - Invalid - An invalid correlation scheme. Cannot be used. The value is zero.
        - Affinity - Indicates that this service has an affinity relationship with another service. Provided for backwards compatibility, consider preferring the Aligned or NonAlignedAffinity options. The value is 1.
        - AlignedAffinity - Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 2.
        - NonAlignedAffinity - Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 3.
    types:
    - uid: ServiceCorrelationScheme
  - name: ServiceName
    description: The full name of the service with 'fabric:' URI scheme.
    types:
    - uid: string
- name: ServiceLoadMetricDescription
  description: Specifies a metric to load balance a service during runtime.
  kind: object
  properties:
  - name: Name
    description: The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive.
    types:
    - uid: string
  - name: Weight
    description: >-
      Determines the metric weight relative to the other metrics that are configured for this service. During runtime, if two metrics end up in conflict, the Cluster Resource Manager prefers the metric with the higher weight. Possible values are following.

        - Zero - Disables resource balancing for this metric. This value is zero.
        - Low - Specifies the metric weight of the service load as Low. The value is 1.
        - Medium - Specifies the metric weight of the service load as Medium. The value is 2.
        - High - Specifies the metric weight of the service load as High. The value is 3.
    types:
    - uid: ServiceLoadMetricWeight
  - name: PrimaryDefaultLoad
    description: Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica.
    types:
    - uid: integer
  - name: SecondaryDefaultLoad
    description: Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica.
    types:
    - uid: integer
  - name: DefaultLoad
    description: Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric.
    types:
    - uid: integer
- name: MoveCost
  description: >-
    Specifies the move cost for the service. Possible values are the following.

      - Zero - Zero move cost. This value is zero.
      - Low - Specifies the move cost of the service as Low. The value is 1.
      - Medium - Specifies the move cost of the service as Medium. The value is 2.
      - High - Specifies the move cost of the service as High. The value is 3.
  kind: enum
  properties:
  - name: Zero
    types:
    - uid: string
  - name: Low
    types:
    - uid: string
  - name: Medium
    types:
    - uid: string
  - name: High
    types:
    - uid: string
- name: ServicePackageActivationMode
  description: >-
    The activation mode of service package to be used for a Service Fabric service. This is specified at the time of creating the Service. Possible values are following.

      - SharedProcess - This is the default activation mode. With this activation mode, replicas or instances from different partition(s) of service, on a given node, will share same activation of service package on a node. The value is zero.
      - ExclusiveProcess - With this activation mode, each replica or instance of service, on a given node, will have its own dedicated activation of service package on a node. The value is 1.
  kind: enum
  properties:
  - name: SharedProcess
    types:
    - uid: string
  - name: ExclusiveProcess
    types:
    - uid: string
- name: FabricErrorCodes
  description: >-
    Defines the fabric error codes that be returned as part of the error object in response to Service Fabric API operations that are not successful. Following are the error code values that can be returned for a specific HTTP status code.

      - Possible values of the error code for HTTP status code 400 (Bad Request)
        - "FABRIC_E_INVALID_PARTITION_KEY"
        - "FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR"
        - "FABRIC_E_INVALID_ADDRESS"
        - "FABRIC_E_APPLICATION_NOT_UPGRADING"
        - "FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR"
        - "FABRIC_E_FABRIC_NOT_UPGRADING"
        - "FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR"
        - "FABRIC_E_INVALID_CONFIGURATION"
        - "FABRIC_E_INVALID_NAME_URI"
        - "FABRIC_E_PATH_TOO_LONG"
        - "FABRIC_E_KEY_TOO_LARGE"
        - "FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED"
        - "FABRIC_E_INVALID_ATOMIC_GROUP"
        - "FABRIC_E_VALUE_EMPTY"

      - Possible values of the error code for HTTP status code 404 (Not Found)
        - "FABRIC_E_NODE_NOT_FOUND"
        - "FABRIC_E_APPLICATION_TYPE_NOT_FOUND"
        - "FABRIC_E_APPLICATION_NOT_FOUND"
        - "FABRIC_E_SERVICE_TYPE_NOT_FOUND"
        - "FABRIC_E_SERVICE_DOES_NOT_EXIST"
        - "FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND"
        - "FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND"
        - "FABRIC_E_PARTITION_NOT_FOUND"
        - "FABRIC_E_REPLICA_DOES_NOT_EXIST"
        - "FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST"
        - "FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND"
        - "FABRIC_E_DIRECTORY_NOT_FOUND"
        - "FABRIC_E_FABRIC_VERSION_NOT_FOUND"
        - "FABRIC_E_FILE_NOT_FOUND"
        - "FABRIC_E_NAME_DOES_NOT_EXIST"
        - "FABRIC_E_PROPERTY_DOES_NOT_EXIST"
        - "FABRIC_E_ENUMERATION_COMPLETED"
        - "FABRIC_E_SERVICE_MANIFEST_NOT_FOUND"
        - "FABRIC_E_KEY_NOT_FOUND"
        - "FABRIC_E_HEALTH_ENTITY_NOT_FOUND"

      - Possible values of the error code for HTTP status code 409 (Conflict)
        - "FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS"
        - "FABRIC_E_APPLICATION_ALREADY_EXISTS"
        - "FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION"
        - "FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS"
        - "FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS"
        - "FABRIC_E_SERVICE_ALREADY_EXISTS"
        - "FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS"
        - "FABRIC_E_APPLICATION_TYPE_IN_USE"
        - "FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION"
        - "FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS"
        - "FABRIC_E_FABRIC_VERSION_IN_USE"
        - "FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS"
        - "FABRIC_E_NAME_ALREADY_EXISTS"
        - "FABRIC_E_NAME_NOT_EMPTY"
        - "FABRIC_E_PROPERTY_CHECK_FAILED"
        - "FABRIC_E_SERVICE_METADATA_MISMATCH"
        - "FABRIC_E_SERVICE_TYPE_MISMATCH"
        - "FABRIC_E_HEALTH_STALE_REPORT"
        - "FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED"
        - "FABRIC_E_NODE_HAS_NOT_STOPPED_YET"
        - "FABRIC_E_INSTANCE_ID_MISMATCH"

      - Possible values of the error code for HTTP status code 413 (Request Entity Too Large)
        - "FABRIC_E_VALUE_TOO_LARGE"

      - Possible values of the error code for HTTP status code 500 (Internal Server Error)
        - "FABRIC_E_NODE_IS_UP"

      - Possible values of the error code for HTTP status code 503 (Service Unavailable)
        - "FABRIC_E_NO_WRITE_QUORUM"
        - "FABRIC_E_NOT_PRIMARY"
        - "FABRIC_E_NOT_READY"
        - "FABRIC_E_RECONFIGURATION_PENDING"
        - "FABRIC_E_SERVICE_OFFLINE"
        - "E_ABORT"
        - "FABRIC_E_VALUE_TOO_LARGE"

      - Possible values of the error code for HTTP status code 504 (Gateway Timeout)
        - "FABRIC_E_COMMUNICATION_ERROR"
        - "FABRIC_E_OPERATION_NOT_COMPLETE"
        - "FABRIC_E_TIMEOUT"
  kind: enum
  properties:
  - name: FABRIC_E_INVALID_PARTITION_KEY
    types:
    - uid: string
  - name: FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR
    types:
    - uid: string
  - name: FABRIC_E_INVALID_ADDRESS
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_NOT_UPGRADING
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_NOT_UPGRADING
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR
    types:
    - uid: string
  - name: FABRIC_E_INVALID_CONFIGURATION
    types:
    - uid: string
  - name: FABRIC_E_INVALID_NAME_URI
    types:
    - uid: string
  - name: FABRIC_E_PATH_TOO_LONG
    types:
    - uid: string
  - name: FABRIC_E_KEY_TOO_LARGE
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED
    types:
    - uid: string
  - name: FABRIC_E_INVALID_ATOMIC_GROUP
    types:
    - uid: string
  - name: FABRIC_E_VALUE_EMPTY
    types:
    - uid: string
  - name: FABRIC_E_NODE_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_TYPE_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_TYPE_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_DOES_NOT_EXIST
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_PARTITION_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_REPLICA_DOES_NOT_EXIST
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST
    types:
    - uid: string
  - name: FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_DIRECTORY_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_VERSION_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_FILE_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_NAME_DOES_NOT_EXIST
    types:
    - uid: string
  - name: FABRIC_E_PROPERTY_DOES_NOT_EXIST
    types:
    - uid: string
  - name: FABRIC_E_ENUMERATION_COMPLETED
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_MANIFEST_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_KEY_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_HEALTH_ENTITY_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_ALREADY_EXISTS
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_ALREADY_EXISTS
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_TYPE_IN_USE
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_VERSION_IN_USE
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS
    types:
    - uid: string
  - name: FABRIC_E_NAME_ALREADY_EXISTS
    types:
    - uid: string
  - name: FABRIC_E_NAME_NOT_EMPTY
    types:
    - uid: string
  - name: FABRIC_E_PROPERTY_CHECK_FAILED
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_METADATA_MISMATCH
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_TYPE_MISMATCH
    types:
    - uid: string
  - name: FABRIC_E_HEALTH_STALE_REPORT
    types:
    - uid: string
  - name: FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED
    types:
    - uid: string
  - name: FABRIC_E_NODE_HAS_NOT_STOPPED_YET
    types:
    - uid: string
  - name: FABRIC_E_INSTANCE_ID_MISMATCH
    types:
    - uid: string
  - name: FABRIC_E_VALUE_TOO_LARGE
    types:
    - uid: string
  - name: FABRIC_E_NO_WRITE_QUORUM
    types:
    - uid: string
  - name: FABRIC_E_NOT_PRIMARY
    types:
    - uid: string
  - name: FABRIC_E_NOT_READY
    types:
    - uid: string
  - name: FABRIC_E_RECONFIGURATION_PENDING
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_OFFLINE
    types:
    - uid: string
  - name: E_ABORT
    types:
    - uid: string
  - name: FABRIC_E_COMMUNICATION_ERROR
    types:
    - uid: string
  - name: FABRIC_E_OPERATION_NOT_COMPLETE
    types:
    - uid: string
  - name: FABRIC_E_TIMEOUT
    types:
    - uid: string
  - name: FABRIC_E_NODE_IS_UP
    types:
    - uid: string
- name: NamedPartitionSchemeDescription
  description: Describes the named partition scheme of the service.
  kind: object
  properties:
  - name: Count
    description: The number of partitions.
    types:
    - uid: integer
  - name: Names
    description: Array of size specified by the ‘Count’ parameter, for the names of the partitions.
    types:
    - uid: string
      isArray: true
  - name: PartitionScheme
    description: >-
      Enumerates the ways that a service can be partitioned. Possible values are:


      - Invalid - Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Singleton - Indicates that the partition is based on string names, and is a SingletonPartitionSchemeDescription object, The value is 1.

      - UniformInt64Range - Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionSchemeDescription object. The value is 2.

      - Named - Indicates that the partition is based on string names, and is a NamedPartitionSchemeDescription object. The value is 3
    types:
    - uid: Named
    typesTitle: string
- name: SingletonPartitionSchemeDescription
  description: Describes the partition scheme of a singleton-partitioned, or non-partitioned service.
  kind: object
  properties:
  - name: PartitionScheme
    description: >-
      Enumerates the ways that a service can be partitioned. Possible values are:


      - Invalid - Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Singleton - Indicates that the partition is based on string names, and is a SingletonPartitionSchemeDescription object, The value is 1.

      - UniformInt64Range - Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionSchemeDescription object. The value is 2.

      - Named - Indicates that the partition is based on string names, and is a NamedPartitionSchemeDescription object. The value is 3
    types:
    - uid: Singleton
    typesTitle: string
- name: UniformInt64RangePartitionSchemeDescription
  description: Describes a partitioning scheme where an integer range is allocated evenly across a number of partitions.
  kind: object
  properties:
  - name: Count
    description: The number of partitions.
    types:
    - uid: integer
  - name: LowKey
    description: >-
      String indicating the lower bound of the partition key range that

      should be split between the partition ‘Count’
    types:
    - uid: string
  - name: HighKey
    description: >-
      String indicating the upper bound of the partition key range that

      should be split between the partition ‘Count’
    types:
    - uid: string
  - name: PartitionScheme
    description: >-
      Enumerates the ways that a service can be partitioned. Possible values are:


      - Invalid - Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - Singleton - Indicates that the partition is based on string names, and is a SingletonPartitionSchemeDescription object, The value is 1.

      - UniformInt64Range - Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionSchemeDescription object. The value is 2.

      - Named - Indicates that the partition is based on string names, and is a NamedPartitionSchemeDescription object. The value is 3
    types:
    - uid: UniformInt64Range
    typesTitle: string
- name: ServiceCorrelationScheme
  description: >-
    The service correlation scheme. Possible values are following.

      - Invalid - An invalid correlation scheme. Cannot be used. The value is zero.
      - Affinity - Indicates that this service has an affinity relationship with another service. Provided for backwards compatibility, consider preferring the Aligned or NonAlignedAffinity options. The value is 1.
      - AlignedAffinity - Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 2.
      - NonAlignedAffinity - Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 3.
  kind: enum
  properties:
  - name: Invalid
    types:
    - uid: string
  - name: Affinity
    types:
    - uid: string
  - name: AlignedAffinity
    types:
    - uid: string
  - name: NonAlignedAffinity
    types:
    - uid: string
- name: ServiceLoadMetricWeight
  description: >-
    Determines the metric weight relative to the other metrics that are configured for this service. During runtime, if two metrics end up in conflict, the Cluster Resource Manager prefers the metric with the higher weight. Possible values are following.

      - Zero - Disables resource balancing for this metric. This value is zero.
      - Low - Specifies the metric weight of the service load as Low. The value is 1.
      - Medium - Specifies the metric weight of the service load as Medium. The value is 2.
      - High - Specifies the metric weight of the service load as High. The value is 3.
  kind: enum
  properties:
  - name: Zero
    types:
    - uid: string
  - name: Low
    types:
    - uid: string
  - name: Medium
    types:
    - uid: string
  - name: High
    types:
    - uid: string
- name: ServicePlacementInvalidDomainPolicyDescription
  description: Describes the policy to be used for placement of a Service Fabric service where a particular fault or upgrade domain should not be used for placement of the instances or replicas of that service.
  kind: object
  properties:
  - name: Type
    description: >-
      The type of placement policy for a service fabric service. Following are the possible values.

        - Invalid - Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - InvalidDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1.
        - RequiredDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2.
        - PreferredPrimaryDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3.
        - RequiredDomainDistribution - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4.
        - NonPartiallyPlaceService - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5.
    types:
    - uid: InvalidDomain
    typesTitle: string
  - name: DomainName
    description: The name of the domain that should not be used for placement.
    types:
    - uid: string
- name: ServicePlacementNonPartiallyPlaceServicePolicyDescription
  description: Describes the policy to be used for placement of a Service Fabric service where all replicas must be able to be placed in order for any replicas to be created.
  kind: object
  properties:
  - name: Type
    description: >-
      The type of placement policy for a service fabric service. Following are the possible values.

        - Invalid - Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - InvalidDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1.
        - RequiredDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2.
        - PreferredPrimaryDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3.
        - RequiredDomainDistribution - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4.
        - NonPartiallyPlaceService - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5.
    types:
    - uid: NonPartiallyPlaceService
    typesTitle: string
- name: ServicePlacementPreferPrimaryDomainPolicyDescription
  description: >-
    Describes the policy to be used for placement of a Service Fabric service where the service's Primary replicas should optimally be placed in a particular domain.


    This placement policy is usually used with fault domains in scenarios where the Service Fabric cluster is geographically distributed in order to indicate that a service's primary replica should be located in a particular fault domain, which in geo-distributed scenarios usually aligns with regional or datacenter boundaries. Note that since this is an optimization it is possible that the Primary replica may not end up located in this domain due to failures, capacity limits, or other constraints.
  kind: object
  properties:
  - name: Type
    description: >-
      The type of placement policy for a service fabric service. Following are the possible values.

        - Invalid - Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - InvalidDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1.
        - RequiredDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2.
        - PreferredPrimaryDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3.
        - RequiredDomainDistribution - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4.
        - NonPartiallyPlaceService - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5.
    types:
    - uid: PreferPrimaryDomain
    typesTitle: string
  - name: DomainName
    description: The name of the domain that should used for placement as per this policy.
    types:
    - uid: string
- name: ServicePlacementRequiredDomainPolicyDescription
  description: Describes the policy to be used for placement of a Service Fabric service where the instances or replicas of that service must be placed in a particular domain
  kind: object
  properties:
  - name: Type
    description: >-
      The type of placement policy for a service fabric service. Following are the possible values.

        - Invalid - Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - InvalidDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1.
        - RequiredDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2.
        - PreferredPrimaryDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3.
        - RequiredDomainDistribution - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4.
        - NonPartiallyPlaceService - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5.
    types:
    - uid: RequireDomain
    typesTitle: string
  - name: DomainName
    description: The name of the domain that should used for placement as per this policy.
    types:
    - uid: string
- name: ServicePlacementRequireDomainDistributionPolicyDescription
  description: >-
    Describes the policy to be used for placement of a Service Fabric service where two replicas from the same partition should never be placed in the same fault or upgrade domain.


    While this is not common it can expose the service to an increased risk of concurrent failures due to unplanned outages or other cases of subsequent/concurrent failures. As an example, consider a case where replicas are deployed across different data center, with one replica per location. In the event that one of the datacenters goes offline, normally the replica that was placed in that datacenter will be packed into one of the remaining datacenters. If this is not desirable then this policy should be set.
  kind: object
  properties:
  - name: Type
    description: >-
      The type of placement policy for a service fabric service. Following are the possible values.

        - Invalid - Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - InvalidDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1.
        - RequiredDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2.
        - PreferredPrimaryDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3.
        - RequiredDomainDistribution - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4.
        - NonPartiallyPlaceService - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5.
    types:
    - uid: RequireDomainDistribution
    typesTitle: string
  - name: DomainName
    description: The name of the domain that should used for placement as per this policy.
    types:
    - uid: string
- name: PartitionScheme
  description: >-
    Enumerates the ways that a service can be partitioned. Possible values are:


    - Invalid - Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

    - Singleton - Indicates that the partition is based on string names, and is a SingletonPartitionSchemeDescription object, The value is 1.

    - UniformInt64Range - Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionSchemeDescription object. The value is 2.

    - Named - Indicates that the partition is based on string names, and is a NamedPartitionSchemeDescription object. The value is 3
  kind: enum
  properties:
  - name: Invalid
    types:
    - uid: string
  - name: Singleton
    types:
    - uid: string
  - name: UniformInt64Range
    types:
    - uid: string
  - name: Named
    types:
    - uid: string
- name: ServicePlacementPolicyType
  description: >-
    The type of placement policy for a service fabric service. Following are the possible values.

      - Invalid - Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
      - InvalidDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1.
      - RequiredDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2.
      - PreferredPrimaryDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3.
      - RequiredDomainDistribution - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4.
      - NonPartiallyPlaceService - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5.
  kind: enum
  properties:
  - name: Invalid
    types:
    - uid: string
  - name: InvalidDomain
    types:
    - uid: string
  - name: RequiredDomain
    types:
    - uid: string
  - name: PreferredPrimaryDomain
    types:
    - uid: string
  - name: RequiredDomainDistribution
    types:
    - uid: string
  - name: NonPartiallyPlaceService
    types:
    - uid: string
examples: []
security: []

### YamlMime:RESTOperation
uid: localhost:19080.servicefabric.createrepairtask.createrepairtask
name: Create Repair Task
service: Service Fabric
groupName: Create Repair Task
apiVersion: 6.2.0.9
summary: "Creates a new repair task.  \nFor clusters that have the Repair Manager Service configured,\nthis API provides a way to create repair tasks that run automatically or manually.\nFor repair tasks that run automatically, an appropriate repair executor\nmust be running for each repair action to run automatically.\nThese are currently only available in specially-configured Azure Cloud Services.\n\nTo create a manual repair task, provide the set of impacted node names and the\nexpected impact. When the state of the created repair task changes to approved,\nyou can safely perform repair actions on those nodes.\n\nThis API supports the Service Fabric platform; it is not meant to be used directly from your code."
produces:
- application/json
paths:
- content: POST http://localhost:19080/$/CreateRepairTask?api-version=6.2.0.9
uriParameters:
- name: api-version
  in: query
  isRequired: true
  description: >-
    The version of the API. This parameter is required and its value must be '6.0'.


    Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.


    Additionally the runtime accept any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0, but if the runtime is 6.1, in order to make it easier to write the clients, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
  types:
  - uid: ApiVersion_6-0_RequiredQueryParam
responses:
- name: 200 OK
  description: >-
    A successful operation will return 200 status code.

    The response body provides information about the created repair task.
  types:
  - uid: RepairTaskUpdateInfo
- name: Other Status Codes
  description: The detailed error response.
  types:
  - uid: FabricError
requestBody:
- parameters:
  - name: TaskId
    in: body
    isRequired: true
    description: The ID of the repair task.
    types:
    - uid: string
  - name: Version
    in: body
    description: >-
      The version of the repair task.

      When creating a new repair task, the version must be set to zero.  When updating a repair task,

      the version is used for optimistic concurrency checks.  If the version is

      set to zero, the update will not check for write conflicts.  If the version is set to a non-zero value, then the

      update will only succeed if the actual current version of the repair task matches this value.
    types:
    - uid: string
  - name: Description
    in: body
    description: >-
      A description of the purpose of the repair task, or other informational details.

      May be set when the repair task is created, and is immutable once set.
    types:
    - uid: string
  - name: State
    in: body
    isRequired: true
    description: The workflow state of the repair task. Valid initial states are Created, Claimed, and Preparing.
    types:
    - uid: State
  - name: Flags
    in: body
    description: >-
      A bitwise-OR of the following values, which gives additional details about the status of the repair task.

      - 1 - Cancellation of the repair has been requested

      - 2 - Abort of the repair has been requested

      - 4 - Approval of the repair was forced via client request
    types:
    - uid: integer
  - name: Action
    in: body
    isRequired: true
    description: The requested repair action. Must be specified when the repair task is created, and is immutable once set.
    types:
    - uid: string
  - name: Target
    in: body
    description: >-
      The target object determines what actions the system will take to prepare for the impact of the repair, prior to approving execution of the repair.

      May be set when the repair task is created, and is immutable once set.
    types:
    - uid: NodeRepairTargetDescription
    typesTitle: RepairTargetDescriptionBase
  - name: Executor
    in: body
    description: The name of the repair executor. Must be specified in Claimed and later states, and is immutable once set.
    types:
    - uid: string
  - name: ExecutorData
    in: body
    description: A data string that the repair executor can use to store its internal state.
    types:
    - uid: string
  - name: Impact
    in: body
    description: >-
      The impact object determines what actions the system will take to prepare for the impact of the repair, prior to approving execution of the repair.

      Impact must be specified by the repair executor when transitioning to the Preparing state, and is immutable once set.
    types:
    - uid: NodeRepairImpactDescription
    typesTitle: RepairImpactDescriptionBase
  - name: ResultStatus
    in: body
    description: A value describing the overall result of the repair task execution. Must be specified in the Restoring and later states, and is immutable once set.
    types:
    - uid: ResultStatus
  - name: ResultCode
    in: body
    description: >-
      A numeric value providing additional details about the result of the repair task execution.

      May be specified in the Restoring and later states, and is immutable once set.
    types:
    - uid: integer
  - name: ResultDetails
    in: body
    description: >-
      A string providing additional details about the result of the repair task execution.

      May be specified in the Restoring and later states, and is immutable once set.
    types:
    - uid: string
  - name: History
    in: body
    description: >-
      An object that contains timestamps of the repair task's state transitions.

      These timestamps are updated by the system, and cannot be directly modified.
    types:
    - uid: RepairTaskHistory
  - name: PreparingHealthCheckState
    in: body
    description: The workflow state of the health check when the repair task is in the Preparing state.
    types:
    - uid: RepairTaskHealthCheckState
  - name: RestoringHealthCheckState
    in: body
    description: The workflow state of the health check when the repair task is in the Restoring state.
    types:
    - uid: RepairTaskHealthCheckState
  - name: PerformPreparingHealthCheck
    in: body
    description: A value to determine if health checks will be performed when the repair task enters the Preparing state.
    types:
    - uid: boolean
  - name: PerformRestoringHealthCheck
    in: body
    description: A value to determine if health checks will be performed when the repair task enters the Restoring state.
    types:
    - uid: boolean
requestHeader: []
definitions:
- name: ApiVersion_6-0_RequiredQueryParam
  description: >-
    The version of the API. This parameter is required and its value must be '6.0'.


    Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.


    Additionally the runtime accept any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0, but if the runtime is 6.1, in order to make it easier to write the clients, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
  kind: enum
  properties:
  - name: "6.0"
    description: The 6.0 version of the API.
    types:
    - uid: string
- name: RepairTaskHistory
  description: >-
    A record of the times when the repair task entered each state.


    This type supports the Service Fabric platform; it is not meant to be used directly from your code.
  kind: object
  properties:
  - name: CreatedUtcTimestamp
    description: The time when the repair task entered the Created state.
    types:
    - uid: string
  - name: ClaimedUtcTimestamp
    description: The time when the repair task entered the Claimed state.
    types:
    - uid: string
  - name: PreparingUtcTimestamp
    description: The time when the repair task entered the Preparing state.
    types:
    - uid: string
  - name: ApprovedUtcTimestamp
    description: The time when the repair task entered the Approved state
    types:
    - uid: string
  - name: ExecutingUtcTimestamp
    description: The time when the repair task entered the Executing state
    types:
    - uid: string
  - name: RestoringUtcTimestamp
    description: The time when the repair task entered the Restoring state
    types:
    - uid: string
  - name: CompletedUtcTimestamp
    description: The time when the repair task entered the Completed state
    types:
    - uid: string
  - name: PreparingHealthCheckStartUtcTimestamp
    description: The time when the repair task started the health check in the Preparing state.
    types:
    - uid: string
  - name: PreparingHealthCheckEndUtcTimestamp
    description: The time when the repair task completed the health check in the Preparing state.
    types:
    - uid: string
  - name: RestoringHealthCheckStartUtcTimestamp
    description: The time when the repair task started the health check in the Restoring state.
    types:
    - uid: string
  - name: RestoringHealthCheckEndUtcTimestamp
    description: The time when the repair task completed the health check in the Restoring state.
    types:
    - uid: string
- name: RepairTaskUpdateInfo
  description: >-
    Describes the result of an operation that created or updated a repair task.


    This type supports the Service Fabric platform; it is not meant to be used directly from your code.
  kind: object
  properties:
  - name: Version
    description: The new version of the repair task.
    types:
    - uid: string
- name: FabricError
  description: The REST API operations for Service Fabric return standard HTTP status codes. This type defines the additional information returned from the Service Fabric API operations that are not successful.
  kind: object
  properties:
  - name: Error
    description: Error object containing error code and error message.
    types:
    - uid: FabricErrorError
- name: RepairTask
  description: >-
    Represents a repair task, which includes information about what kind of repair was requested, what its progress is, and what its final result was.


    This type supports the Service Fabric platform; it is not meant to be used directly from your code.
  kind: object
  properties:
  - name: TaskId
    description: The ID of the repair task.
    types:
    - uid: string
  - name: Version
    description: >-
      The version of the repair task.

      When creating a new repair task, the version must be set to zero.  When updating a repair task,

      the version is used for optimistic concurrency checks.  If the version is

      set to zero, the update will not check for write conflicts.  If the version is set to a non-zero value, then the

      update will only succeed if the actual current version of the repair task matches this value.
    types:
    - uid: string
  - name: Description
    description: >-
      A description of the purpose of the repair task, or other informational details.

      May be set when the repair task is created, and is immutable once set.
    types:
    - uid: string
  - name: State
    description: The workflow state of the repair task. Valid initial states are Created, Claimed, and Preparing.
    types:
    - uid: State
  - name: Flags
    description: >-
      A bitwise-OR of the following values, which gives additional details about the status of the repair task.

      - 1 - Cancellation of the repair has been requested

      - 2 - Abort of the repair has been requested

      - 4 - Approval of the repair was forced via client request
    types:
    - uid: integer
  - name: Action
    description: The requested repair action. Must be specified when the repair task is created, and is immutable once set.
    types:
    - uid: string
  - name: Target
    description: >-
      The target object determines what actions the system will take to prepare for the impact of the repair, prior to approving execution of the repair.

      May be set when the repair task is created, and is immutable once set.
    types:
    - uid: NodeRepairTargetDescription
    typesTitle: RepairTargetDescriptionBase
  - name: Executor
    description: The name of the repair executor. Must be specified in Claimed and later states, and is immutable once set.
    types:
    - uid: string
  - name: ExecutorData
    description: A data string that the repair executor can use to store its internal state.
    types:
    - uid: string
  - name: Impact
    description: >-
      The impact object determines what actions the system will take to prepare for the impact of the repair, prior to approving execution of the repair.

      Impact must be specified by the repair executor when transitioning to the Preparing state, and is immutable once set.
    types:
    - uid: NodeRepairImpactDescription
    typesTitle: RepairImpactDescriptionBase
  - name: ResultStatus
    description: A value describing the overall result of the repair task execution. Must be specified in the Restoring and later states, and is immutable once set.
    types:
    - uid: ResultStatus
  - name: ResultCode
    description: >-
      A numeric value providing additional details about the result of the repair task execution.

      May be specified in the Restoring and later states, and is immutable once set.
    types:
    - uid: integer
  - name: ResultDetails
    description: >-
      A string providing additional details about the result of the repair task execution.

      May be specified in the Restoring and later states, and is immutable once set.
    types:
    - uid: string
  - name: History
    description: >-
      An object that contains timestamps of the repair task's state transitions.

      These timestamps are updated by the system, and cannot be directly modified.
    types:
    - uid: RepairTaskHistory
  - name: PreparingHealthCheckState
    description: The workflow state of the health check when the repair task is in the Preparing state.
    types:
    - uid: RepairTaskHealthCheckState
  - name: RestoringHealthCheckState
    description: The workflow state of the health check when the repair task is in the Restoring state.
    types:
    - uid: RepairTaskHealthCheckState
  - name: PerformPreparingHealthCheck
    description: A value to determine if health checks will be performed when the repair task enters the Preparing state.
    types:
    - uid: boolean
  - name: PerformRestoringHealthCheck
    description: A value to determine if health checks will be performed when the repair task enters the Restoring state.
    types:
    - uid: boolean
- name: NodeRepairTargetDescription
  description: >-
    Describes the list of nodes targeted by a repair action.


    This type supports the Service Fabric platform; it is not meant to be used directly from your code.
  kind: object
  properties:
  - name: Kind
    description: The kind of repair target described by the current object.
    types:
    - uid: Node
    typesTitle: string
  - name: NodeNames
    description: The list of nodes targeted by a repair action.
    types:
    - uid: string
      isArray: true
- name: NodeRepairImpactDescription
  description: >-
    Describes the expected impact of a repair on a set of nodes.


    This type supports the Service Fabric platform; it is not meant to be used directly from your code.
  kind: object
  properties:
  - name: Kind
    description: The kind of repair impact represented by the current object.
    types:
    - uid: Node
    typesTitle: string
  - name: NodeImpactList
    description: The list of nodes impacted by a repair action and their respective expected impact.
    types:
    - uid: NodeImpact
      isArray: true
- name: FabricErrorError
  description: Error object containing error code and error message.
  kind: object
  properties:
  - name: Code
    description: >-
      Defines the fabric error codes that be returned as part of the error object in response to Service Fabric API operations that are not successful. Following are the error code values that can be returned for a specific HTTP status code.

        - Possible values of the error code for HTTP status code 400 (Bad Request)
          - "FABRIC_E_INVALID_PARTITION_KEY"
          - "FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR"
          - "FABRIC_E_INVALID_ADDRESS"
          - "FABRIC_E_APPLICATION_NOT_UPGRADING"
          - "FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR"
          - "FABRIC_E_FABRIC_NOT_UPGRADING"
          - "FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR"
          - "FABRIC_E_INVALID_CONFIGURATION"
          - "FABRIC_E_INVALID_NAME_URI"
          - "FABRIC_E_PATH_TOO_LONG"
          - "FABRIC_E_KEY_TOO_LARGE"
          - "FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED"
          - "FABRIC_E_INVALID_ATOMIC_GROUP"
          - "FABRIC_E_VALUE_EMPTY"
          - "FABRIC_E_BACKUP_IS_ENABLED"
          - "FABRIC_E_RESTORE_SOURCE_TARGET_PARTITION_MISMATCH"
          - "FABRIC_E_INVALID_FOR_STATELESS_SERVICES"
          - "FABRIC_E_INVALID_SERVICE_SCALING_POLICY"
          - "E_INVALIDARG"

        - Possible values of the error code for HTTP status code 404 (Not Found)
          - "FABRIC_E_NODE_NOT_FOUND"
          - "FABRIC_E_APPLICATION_TYPE_NOT_FOUND"
          - "FABRIC_E_APPLICATION_NOT_FOUND"
          - "FABRIC_E_SERVICE_TYPE_NOT_FOUND"
          - "FABRIC_E_SERVICE_DOES_NOT_EXIST"
          - "FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND"
          - "FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND"
          - "FABRIC_E_PARTITION_NOT_FOUND"
          - "FABRIC_E_REPLICA_DOES_NOT_EXIST"
          - "FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST"
          - "FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND"
          - "FABRIC_E_DIRECTORY_NOT_FOUND"
          - "FABRIC_E_FABRIC_VERSION_NOT_FOUND"
          - "FABRIC_E_FILE_NOT_FOUND"
          - "FABRIC_E_NAME_DOES_NOT_EXIST"
          - "FABRIC_E_PROPERTY_DOES_NOT_EXIST"
          - "FABRIC_E_ENUMERATION_COMPLETED"
          - "FABRIC_E_SERVICE_MANIFEST_NOT_FOUND"
          - "FABRIC_E_KEY_NOT_FOUND"
          - "FABRIC_E_HEALTH_ENTITY_NOT_FOUND"
          - "FABRIC_E_BACKUP_NOT_ENABLED"
          - "FABRIC_E_BACKUP_POLICY_NOT_EXISTING"
          - "FABRIC_E_FAULT_ANALYSIS_SERVICE_NOT_EXISTING"

        - Possible values of the error code for HTTP status code 409 (Conflict)
          - "FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION"
          - "FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS"
          - "FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS"
          - "FABRIC_E_SERVICE_ALREADY_EXISTS"
          - "FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_TYPE_IN_USE"
          - "FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION"
          - "FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS"
          - "FABRIC_E_FABRIC_VERSION_IN_USE"
          - "FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS"
          - "FABRIC_E_NAME_ALREADY_EXISTS"
          - "FABRIC_E_NAME_NOT_EMPTY"
          - "FABRIC_E_PROPERTY_CHECK_FAILED"
          - "FABRIC_E_SERVICE_METADATA_MISMATCH"
          - "FABRIC_E_SERVICE_TYPE_MISMATCH"
          - "FABRIC_E_HEALTH_STALE_REPORT"
          - "FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED"
          - "FABRIC_E_NODE_HAS_NOT_STOPPED_YET"
          - "FABRIC_E_INSTANCE_ID_MISMATCH"
          - "FABRIC_E_BACKUP_IN_PROGRESS"
          - "FABRIC_E_RESTORE_IN_PROGRESS"
          - "FABRIC_E_BACKUP_POLICY_ALREADY_EXISTING"

        - Possible values of the error code for HTTP status code 413 (Request Entity Too Large)
          - "FABRIC_E_VALUE_TOO_LARGE"

        - Possible values of the error code for HTTP status code 500 (Internal Server Error)
          - "FABRIC_E_NODE_IS_UP"
          - "E_FAIL"

        - Possible values of the error code for HTTP status code 503 (Service Unavailable)
          - "FABRIC_E_NO_WRITE_QUORUM"
          - "FABRIC_E_NOT_PRIMARY"
          - "FABRIC_E_NOT_READY"
          - "FABRIC_E_RECONFIGURATION_PENDING"
          - "FABRIC_E_SERVICE_OFFLINE"
          - "E_ABORT"
          - "FABRIC_E_VALUE_TOO_LARGE"

        - Possible values of the error code for HTTP status code 504 (Gateway Timeout)
          - "FABRIC_E_COMMUNICATION_ERROR"
          - "FABRIC_E_OPERATION_NOT_COMPLETE"
          - "FABRIC_E_TIMEOUT"
    types:
    - uid: FabricErrorCodes
  - name: Message
    description: Error message.
    types:
    - uid: string
- name: State
  description: The workflow state of the repair task. Valid initial states are Created, Claimed, and Preparing.
  kind: enum
  properties:
  - name: Invalid
    description: Indicates that the repair task state is invalid. All Service Fabric enumerations have the invalid value.
    types:
    - uid: string
  - name: Created
    description: Indicates that the repair task has been created.
    types:
    - uid: string
  - name: Claimed
    description: Indicates that the repair task has been claimed by a repair executor.
    types:
    - uid: string
  - name: Preparing
    description: Indicates that the Repair Manager is preparing the system to handle the impact of the repair task, usually by taking resources offline gracefully.
    types:
    - uid: string
  - name: Approved
    description: Indicates that the repair task has been approved by the Repair Manager and is safe to execute.
    types:
    - uid: string
  - name: Executing
    description: Indicates that execution of the repair task is in progress.
    types:
    - uid: string
  - name: Restoring
    description: Indicates that the Repair Manager is restoring the system to its pre-repair state, usually by bringing resources back online.
    types:
    - uid: string
  - name: Completed
    description: Indicates that the repair task has completed, and no further state changes will occur.
    types:
    - uid: string
- name: ResultStatus
  description: A value describing the overall result of the repair task execution. Must be specified in the Restoring and later states, and is immutable once set.
  kind: enum
  properties:
  - name: Invalid
    description: Indicates that the repair task result is invalid. All Service Fabric enumerations have the invalid value.
    types:
    - uid: string
  - name: Succeeded
    description: Indicates that the repair task completed execution successfully.
    types:
    - uid: string
  - name: Cancelled
    description: Indicates that the repair task was cancelled prior to execution.
    types:
    - uid: string
  - name: Interrupted
    description: Indicates that execution of the repair task was interrupted by a cancellation request after some work had already been performed.
    types:
    - uid: string
  - name: Failed
    description: Indicates that there was a failure during execution of the repair task. Some work may have been performed.
    types:
    - uid: string
  - name: Pending
    description: Indicates that the repair task result is not yet available, because the repair task has not finished executing.
    types:
    - uid: string
- name: RepairTaskHealthCheckState
  description: Specifies the workflow state of a repair task's health check. This type supports the Service Fabric platform; it is not meant to be used directly from your code.
  kind: enum
  properties:
  - name: NotStarted
    description: Indicates that the health check has not started.
    types:
    - uid: string
  - name: InProgress
    description: Indicates that the health check is in progress.
    types:
    - uid: string
  - name: Succeeded
    description: Indicates that the health check succeeded.
    types:
    - uid: string
  - name: Skipped
    description: Indicates that the health check was skipped.
    types:
    - uid: string
  - name: TimedOut
    description: Indicates that the health check timed out.
    types:
    - uid: string
- name: RepairTargetKind
  description: Specifies the kind of the repair target. This type supports the Service Fabric platform; it is not meant to be used directly from your code.'
  kind: enum
  properties:
  - name: Invalid
    description: The repair target is not valid or is of an unknown type.
    types:
    - uid: string
  - name: Node
    description: The repair target is a set of Service Fabric nodes.
    types:
    - uid: string
- name: RepairImpactKind
  description: Specifies the kind of the impact. This type supports the Service Fabric platform; it is not meant to be used directly from your code.'
  kind: enum
  properties:
  - name: Invalid
    description: The repair impact is not valid or is of an unknown type.
    types:
    - uid: string
  - name: Node
    description: The repair impact affects a set of Service Fabric nodes.
    types:
    - uid: string
- name: NodeImpact
  description: >-
    Describes the expected impact of a repair to a particular node.


    This type supports the Service Fabric platform; it is not meant to be used directly from your code.
  kind: object
  properties:
  - name: NodeName
    description: The name of the impacted node.
    types:
    - uid: string
  - name: ImpactLevel
    description: The level of impact expected.
    types:
    - uid: ImpactLevel
- name: FabricErrorCodes
  description: >-
    Defines the fabric error codes that be returned as part of the error object in response to Service Fabric API operations that are not successful. Following are the error code values that can be returned for a specific HTTP status code.

      - Possible values of the error code for HTTP status code 400 (Bad Request)
        - "FABRIC_E_INVALID_PARTITION_KEY"
        - "FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR"
        - "FABRIC_E_INVALID_ADDRESS"
        - "FABRIC_E_APPLICATION_NOT_UPGRADING"
        - "FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR"
        - "FABRIC_E_FABRIC_NOT_UPGRADING"
        - "FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR"
        - "FABRIC_E_INVALID_CONFIGURATION"
        - "FABRIC_E_INVALID_NAME_URI"
        - "FABRIC_E_PATH_TOO_LONG"
        - "FABRIC_E_KEY_TOO_LARGE"
        - "FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED"
        - "FABRIC_E_INVALID_ATOMIC_GROUP"
        - "FABRIC_E_VALUE_EMPTY"
        - "FABRIC_E_BACKUP_IS_ENABLED"
        - "FABRIC_E_RESTORE_SOURCE_TARGET_PARTITION_MISMATCH"
        - "FABRIC_E_INVALID_FOR_STATELESS_SERVICES"
        - "FABRIC_E_INVALID_SERVICE_SCALING_POLICY"
        - "E_INVALIDARG"

      - Possible values of the error code for HTTP status code 404 (Not Found)
        - "FABRIC_E_NODE_NOT_FOUND"
        - "FABRIC_E_APPLICATION_TYPE_NOT_FOUND"
        - "FABRIC_E_APPLICATION_NOT_FOUND"
        - "FABRIC_E_SERVICE_TYPE_NOT_FOUND"
        - "FABRIC_E_SERVICE_DOES_NOT_EXIST"
        - "FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND"
        - "FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND"
        - "FABRIC_E_PARTITION_NOT_FOUND"
        - "FABRIC_E_REPLICA_DOES_NOT_EXIST"
        - "FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST"
        - "FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND"
        - "FABRIC_E_DIRECTORY_NOT_FOUND"
        - "FABRIC_E_FABRIC_VERSION_NOT_FOUND"
        - "FABRIC_E_FILE_NOT_FOUND"
        - "FABRIC_E_NAME_DOES_NOT_EXIST"
        - "FABRIC_E_PROPERTY_DOES_NOT_EXIST"
        - "FABRIC_E_ENUMERATION_COMPLETED"
        - "FABRIC_E_SERVICE_MANIFEST_NOT_FOUND"
        - "FABRIC_E_KEY_NOT_FOUND"
        - "FABRIC_E_HEALTH_ENTITY_NOT_FOUND"
        - "FABRIC_E_BACKUP_NOT_ENABLED"
        - "FABRIC_E_BACKUP_POLICY_NOT_EXISTING"
        - "FABRIC_E_FAULT_ANALYSIS_SERVICE_NOT_EXISTING"

      - Possible values of the error code for HTTP status code 409 (Conflict)
        - "FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS"
        - "FABRIC_E_APPLICATION_ALREADY_EXISTS"
        - "FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION"
        - "FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS"
        - "FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS"
        - "FABRIC_E_SERVICE_ALREADY_EXISTS"
        - "FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS"
        - "FABRIC_E_APPLICATION_TYPE_IN_USE"
        - "FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION"
        - "FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS"
        - "FABRIC_E_FABRIC_VERSION_IN_USE"
        - "FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS"
        - "FABRIC_E_NAME_ALREADY_EXISTS"
        - "FABRIC_E_NAME_NOT_EMPTY"
        - "FABRIC_E_PROPERTY_CHECK_FAILED"
        - "FABRIC_E_SERVICE_METADATA_MISMATCH"
        - "FABRIC_E_SERVICE_TYPE_MISMATCH"
        - "FABRIC_E_HEALTH_STALE_REPORT"
        - "FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED"
        - "FABRIC_E_NODE_HAS_NOT_STOPPED_YET"
        - "FABRIC_E_INSTANCE_ID_MISMATCH"
        - "FABRIC_E_BACKUP_IN_PROGRESS"
        - "FABRIC_E_RESTORE_IN_PROGRESS"
        - "FABRIC_E_BACKUP_POLICY_ALREADY_EXISTING"

      - Possible values of the error code for HTTP status code 413 (Request Entity Too Large)
        - "FABRIC_E_VALUE_TOO_LARGE"

      - Possible values of the error code for HTTP status code 500 (Internal Server Error)
        - "FABRIC_E_NODE_IS_UP"
        - "E_FAIL"

      - Possible values of the error code for HTTP status code 503 (Service Unavailable)
        - "FABRIC_E_NO_WRITE_QUORUM"
        - "FABRIC_E_NOT_PRIMARY"
        - "FABRIC_E_NOT_READY"
        - "FABRIC_E_RECONFIGURATION_PENDING"
        - "FABRIC_E_SERVICE_OFFLINE"
        - "E_ABORT"
        - "FABRIC_E_VALUE_TOO_LARGE"

      - Possible values of the error code for HTTP status code 504 (Gateway Timeout)
        - "FABRIC_E_COMMUNICATION_ERROR"
        - "FABRIC_E_OPERATION_NOT_COMPLETE"
        - "FABRIC_E_TIMEOUT"
  kind: enum
  properties:
  - name: FABRIC_E_INVALID_PARTITION_KEY
    types:
    - uid: string
  - name: FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR
    types:
    - uid: string
  - name: FABRIC_E_INVALID_ADDRESS
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_NOT_UPGRADING
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_NOT_UPGRADING
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR
    types:
    - uid: string
  - name: FABRIC_E_INVALID_CONFIGURATION
    types:
    - uid: string
  - name: FABRIC_E_INVALID_NAME_URI
    types:
    - uid: string
  - name: FABRIC_E_PATH_TOO_LONG
    types:
    - uid: string
  - name: FABRIC_E_KEY_TOO_LARGE
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED
    types:
    - uid: string
  - name: FABRIC_E_INVALID_ATOMIC_GROUP
    types:
    - uid: string
  - name: FABRIC_E_VALUE_EMPTY
    types:
    - uid: string
  - name: FABRIC_E_NODE_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_TYPE_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_TYPE_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_DOES_NOT_EXIST
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_PARTITION_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_REPLICA_DOES_NOT_EXIST
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST
    types:
    - uid: string
  - name: FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_DIRECTORY_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_VERSION_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_FILE_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_NAME_DOES_NOT_EXIST
    types:
    - uid: string
  - name: FABRIC_E_PROPERTY_DOES_NOT_EXIST
    types:
    - uid: string
  - name: FABRIC_E_ENUMERATION_COMPLETED
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_MANIFEST_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_KEY_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_HEALTH_ENTITY_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_ALREADY_EXISTS
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_ALREADY_EXISTS
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_TYPE_IN_USE
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_VERSION_IN_USE
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS
    types:
    - uid: string
  - name: FABRIC_E_NAME_ALREADY_EXISTS
    types:
    - uid: string
  - name: FABRIC_E_NAME_NOT_EMPTY
    types:
    - uid: string
  - name: FABRIC_E_PROPERTY_CHECK_FAILED
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_METADATA_MISMATCH
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_TYPE_MISMATCH
    types:
    - uid: string
  - name: FABRIC_E_HEALTH_STALE_REPORT
    types:
    - uid: string
  - name: FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED
    types:
    - uid: string
  - name: FABRIC_E_NODE_HAS_NOT_STOPPED_YET
    types:
    - uid: string
  - name: FABRIC_E_INSTANCE_ID_MISMATCH
    types:
    - uid: string
  - name: FABRIC_E_VALUE_TOO_LARGE
    types:
    - uid: string
  - name: FABRIC_E_NO_WRITE_QUORUM
    types:
    - uid: string
  - name: FABRIC_E_NOT_PRIMARY
    types:
    - uid: string
  - name: FABRIC_E_NOT_READY
    types:
    - uid: string
  - name: FABRIC_E_RECONFIGURATION_PENDING
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_OFFLINE
    types:
    - uid: string
  - name: E_ABORT
    types:
    - uid: string
  - name: FABRIC_E_COMMUNICATION_ERROR
    types:
    - uid: string
  - name: FABRIC_E_OPERATION_NOT_COMPLETE
    types:
    - uid: string
  - name: FABRIC_E_TIMEOUT
    types:
    - uid: string
  - name: FABRIC_E_NODE_IS_UP
    types:
    - uid: string
  - name: E_FAIL
    types:
    - uid: string
  - name: FABRIC_E_BACKUP_IS_ENABLED
    types:
    - uid: string
  - name: FABRIC_E_RESTORE_SOURCE_TARGET_PARTITION_MISMATCH
    types:
    - uid: string
  - name: FABRIC_E_INVALID_FOR_STATELESS_SERVICES
    types:
    - uid: string
  - name: FABRIC_E_BACKUP_NOT_ENABLED
    types:
    - uid: string
  - name: FABRIC_E_BACKUP_POLICY_NOT_EXISTING
    types:
    - uid: string
  - name: FABRIC_E_FAULT_ANALYSIS_SERVICE_NOT_EXISTING
    types:
    - uid: string
  - name: FABRIC_E_BACKUP_IN_PROGRESS
    types:
    - uid: string
  - name: FABRIC_E_RESTORE_IN_PROGRESS
    types:
    - uid: string
  - name: FABRIC_E_BACKUP_POLICY_ALREADY_EXISTING
    types:
    - uid: string
  - name: FABRIC_E_INVALID_SERVICE_SCALING_POLICY
    types:
    - uid: string
  - name: E_INVALIDARG
    types:
    - uid: string
- name: ImpactLevel
  description: The level of impact expected.
  kind: enum
  properties:
  - name: Invalid
    types:
    - uid: string
  - name: None
    types:
    - uid: string
  - name: Restart
    types:
    - uid: string
  - name: RemoveData
    types:
    - uid: string
  - name: RemoveNode
    types:
    - uid: string
examples: []
security: []

### YamlMime:RESTOperation
summary: Gets the progress of the current cluster upgrade. Gets the current progress of the ongoing cluster upgrade. If no upgrade is currently in progress, gets the last state of the previous cluster upgrade.
service: Service Fabric
apiVersion: 6.0.0.1
groupName: Get Cluster Upgrade Progress
produces:
- application/json
paths:
- content: GET http://localhost:19080/$/GetUpgradeProgress?api-version=6.0.0.1
- content: GET http://localhost:19080/$/GetUpgradeProgress?api-version=6.0.0.1&timeout={timeout}
  isOptional: true
uriParameters:
- in: query
  isRequired: true
  description: The version of the API. This is a required parameter and it's value must be "6.0".
  types:
  - uid: string
  name: api-version
- in: query
  description: The server timeout for performing the operation in seconds. This specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
  types:
  - uid: integer
  format: int64
  name: timeout
responses:
- description: A successful operation will return 200 status code and the requested cluster upgrade progress.
  types:
  - uid: ClusterUpgradeProgressObject
  name: 200 OK
- description: The detailed error response.
  types:
  - uid: FabricError
  name: Other Status Codes
requestHeader: []
definitions:
- name: ClusterUpgradeProgressObject
  description: Information about a cluster upgrade.
  kind: object
  properties:
  - description: The ServiceFabric code version of the cluster.
    types:
    - uid: string
    name: CodeVersion
  - description: The cluster configuration version (specified in the cluster manifest).
    types:
    - uid: string
    name: ConfigVersion
  - description: List of upgrade domains and their statuses.
    types:
    - uid: UpgradeDomainInfo
    name: UpgradeDomains
  - description: >
      The state of the upgrade domain.

          - Invalid - Indicates the upgrade state is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          - RollingBackInProgress - The upgrade is rolling back to the previous version but is not complete yet. The value is 1
          - RollingBackCompleted - The upgrade has finished rolling back. The value is 2
          - RollingForwardPending - The current upgrade domain has finished upgrading. The overall upgrade is waiting for an explicit move next request in UnmonitoredManual mode or performing health checks in Monitored mode. The value is 3
          - RollingForwardInProgress - The upgrade is rolling forward to the target version but is not complete yet. The value is 4
          - RollingForwardCompleted - The upgrade has finished rolling forward. The value is 5
          - Failed - The upgrade has failed and is unable to execute FailureAction. The value is 6
    types:
    - uid: UpgradeState
    name: UpgradeState
  - description: The name of the next upgrade domain to be processed.
    types:
    - uid: string
    name: NextUpgradeDomain
  - description: >
      The mode used to monitor health during a rolling upgrade.

          - Invalid - Indicates the upgrade mode is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          - UnmonitoredAuto - The upgrade will proceed automatically without performing any health monitoring. The value is 1
          - UnmonitoredManual - The upgrade will stop after completing each upgrade domain, giving the opportunity to manually monitor health before proceeding. The value is 2
          - Monitored - The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 3
    types:
    - uid: UpgradeMode
    name: RollingUpgradeMode
  - description: Represents a ServiceFabric cluster upgrade
    types:
    - uid: ClusterUpgradeDescriptionObject
    name: UpgradeDescription
  - description: The estimated elapsed time spent processing the current overall upgrade.
    types:
    - uid: string
    name: UpgradeDurationInMilliseconds
  - description: The estimated elapsed time spent processing the current upgrade domain.
    types:
    - uid: string
    name: UpgradeDomainDurationInMilliseconds
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
  - description: Information about the current in-progress upgrade domain.
    types:
    - uid: CurrentUpgradeDomainProgressInfo
    name: CurrentUpgradeDomainProgress
  - description: The start time of the upgrade in UTC.
    types:
    - uid: string
    name: StartTimestampUtc
  - description: The failure time of the upgrade in UTC.
    types:
    - uid: string
    name: FailureTimestampUtc
  - description: >
      The cause of an upgrade failure that resulted in FailureAction being executed.

          - None - Indicates the reason is invalid or unknown. All Service Fabric enumerations have the invalid type. The value is zero.
          - Interrupted - There was an external request to rollback the upgrade. The value is 1
          - HealthCheck - The upgrade failed due to health policy violations. The value is 2
          - UpgradeDomainTimeout - An upgrade domain took longer than the allowed upgrade domain timeout to process. The value is 3
          - UpgradeTimeout - The overall upgrade took longer than the allowed upgrade timeout to process. The value is 4
    types:
    - uid: FailureReason
    name: FailureReason
  - description: The detailed upgrade progress for nodes in the current upgrade domain at the point of failure.
    types:
    - uid: FailedUpgradeDomainProgressObject
    name: UpgradeDomainProgressAtFailure
- name: FabricError
  description: >
    The REST API operations for Service Fabric return standard HTTP status codes. This type defines the additional information returned from the Service Fabric API operations that are not successful.
  kind: object
  properties:
  - description: Error object containing error code and error message.
    types:
    - uid: FabricError_Error
    name: Error
- name: UpgradeDomainInfo
  description: List of upgrade domains and their statuses.
  kind: object
  properties:
  - description: The name of the upgrade domain
    types:
    - uid: string
    name: Name
  - description: >
      The state of the upgrade domain.

          - Invalid - Indicates the upgrade domain state is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          - Pending - The upgrade domain has not started upgrading yet. The value is 1
          - InProgress - The upgrade domain is being upgraded but not complete yet. The value is 2
          - Completed - The upgrade domain has completed upgrade. The value is 3
    types:
    - uid: UpgradeDomainState
    name: State
- name: UpgradeState
  description: >
    The state of the upgrade domain.

        - Invalid - Indicates the upgrade state is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - RollingBackInProgress - The upgrade is rolling back to the previous version but is not complete yet. The value is 1
        - RollingBackCompleted - The upgrade has finished rolling back. The value is 2
        - RollingForwardPending - The current upgrade domain has finished upgrading. The overall upgrade is waiting for an explicit move next request in UnmonitoredManual mode or performing health checks in Monitored mode. The value is 3
        - RollingForwardInProgress - The upgrade is rolling forward to the target version but is not complete yet. The value is 4
        - RollingForwardCompleted - The upgrade has finished rolling forward. The value is 5
        - Failed - The upgrade has failed and is unable to execute FailureAction. The value is 6
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: RollingBackInProgress
  - types:
    - uid: string
    name: RollingBackCompleted
  - types:
    - uid: string
    name: RollingForwardPending
  - types:
    - uid: string
    name: RollingForwardInProgress
  - types:
    - uid: string
    name: RollingForwardCompleted
  - types:
    - uid: string
    name: Failed
- name: UpgradeMode
  description: >
    The mode used to monitor health during a rolling upgrade.

        - Invalid - Indicates the upgrade mode is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - UnmonitoredAuto - The upgrade will proceed automatically without performing any health monitoring. The value is 1
        - UnmonitoredManual - The upgrade will stop after completing each upgrade domain, giving the opportunity to manually monitor health before proceeding. The value is 2
        - Monitored - The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 3
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: UnmonitoredAuto
  - types:
    - uid: string
    name: UnmonitoredManual
  - types:
    - uid: string
    name: Monitored
- name: ClusterUpgradeDescriptionObject
  description: Represents a ServiceFabric cluster upgrade
  kind: object
  properties:
  - description: The cluster configuration version (specified in the cluster manifest).
    types:
    - uid: string
    name: ConfigVersion
  - description: The ServiceFabric code version of the cluster.
    types:
    - uid: string
    name: CodeVersion
  - description: >
      The kind of upgrade out of the following possible values.

          - Invalid - Indicates the upgrade kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          - Rolling - The upgrade progresses one upgrade domain at a time. The value is 1
    types:
    - uid: UpgradeKind
    name: UpgradeKind
  - description: >
      The mode used to monitor health during a rolling upgrade.

          - Invalid - Indicates the upgrade mode is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          - UnmonitoredAuto - The upgrade will proceed automatically without performing any health monitoring. The value is 1
          - UnmonitoredManual - The upgrade will stop after completing each upgrade domain, giving the opportunity to manually monitor health before proceeding. The value is 2
          - Monitored - The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 3
    types:
    - uid: UpgradeMode
    name: RollingUpgradeMode
  - description: The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer).
    types:
    - uid: integer
    name: UpgradeReplicaSetCheckTimeoutInSeconds
  - description: If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).
    types:
    - uid: boolean
    name: ForceRestart
  - description: When true, enables delta health evaluation rather than absolute health evaluation after completion of each upgrade domain.
    types:
    - uid: boolean
    name: EnableDeltaHealthEvaluation
  - description: Describes the parameters for monitoring an upgrade in Monitored mode.
    types:
    - uid: MonitoringPolicyDescription
    name: MonitoringPolicy
  - description: >
      Defines a health policy used to evaluate the health of the cluster or of a cluster node.
    types:
    - uid: ClusterHealthPolicy
    name: ClusterHealthPolicy
  - description: Defines a health policy used to evaluate the health of the cluster during a cluster upgrade.
    types:
    - uid: ClusterUpgradeHealthPolicyObject
    name: ClusterUpgradeHealthPolicy
  - description: >
      Defines a map that contains specific application health policies for different applications.

      Each entry specifies as key the application name and as value an ApplicationHealthPolicy used to evaluate the application health.

      If an application is not specified in the map, the application health evaluation uses the ApplicationHealthPolicy found in its application manifest or the default application health policy (if no health policy is defined in the manifest).

      The map is empty by default.
    types:
    - uid: ApplicationHealthPolicyMapItem
    name: ApplicationHealthPolicyMap
- name: HealthEvaluationWrapper
  description: List of health evaluations that resulted in the current aggregated health state.
  kind: object
  properties:
  - description: Represents a health evaluation which describes the data and the algorithm used by health manager to evaluate the health of an entity.
    types:
    - uid: ApplicationHealthEvaluation
    - uid: ApplicationsHealthEvaluation
    - uid: ApplicationTypeApplicationsHealthEvaluation
    - uid: DeltaNodesCheckHealthEvaluation
    - uid: DeployedApplicationHealthEvaluation
    - uid: DeployedApplicationsHealthEvaluation
    - uid: DeployedServicePackageHealthEvaluation
    - uid: DeployedServicePackagesHealthEvaluation
    - uid: EventHealthEvaluation
    - uid: NodeHealthEvaluation
    - uid: NodesHealthEvaluation
    - uid: PartitionHealthEvaluation
    - uid: PartitionsHealthEvaluation
    - uid: ReplicaHealthEvaluation
    - uid: ReplicasHealthEvaluation
    - uid: ServiceHealthEvaluation
    - uid: ServicesHealthEvaluation
    - uid: SystemApplicationHealthEvaluation
    - uid: UpgradeDomainDeltaNodesCheckHealthEvaluation
    - uid: UpgradeDomainNodesHealthEvaluation
    typesTitle: HealthEvaluation
    name: HealthEvaluation
- name: CurrentUpgradeDomainProgressInfo
  description: Information about the current in-progress upgrade domain.
  kind: object
  properties:
  - description: The name of the upgrade domain
    types:
    - uid: string
    name: DomainName
  - description: List of upgrading nodes and their statuses
    types:
    - uid: NodeUpgradeProgressInfo
    name: NodeUpgradeProgressList
- name: FailureReason
  description: >
    The cause of an upgrade failure that resulted in FailureAction being executed.

        - None - Indicates the reason is invalid or unknown. All Service Fabric enumerations have the invalid type. The value is zero.
        - Interrupted - There was an external request to rollback the upgrade. The value is 1
        - HealthCheck - The upgrade failed due to health policy violations. The value is 2
        - UpgradeDomainTimeout - An upgrade domain took longer than the allowed upgrade domain timeout to process. The value is 3
        - UpgradeTimeout - The overall upgrade took longer than the allowed upgrade timeout to process. The value is 4
  kind: enum
  properties:
  - types:
    - uid: string
    name: None
  - types:
    - uid: string
    name: Interrupted
  - types:
    - uid: string
    name: HealthCheck
  - types:
    - uid: string
    name: UpgradeDomainTimeout
  - types:
    - uid: string
    name: UpgradeTimeout
- name: FailedUpgradeDomainProgressObject
  description: The detailed upgrade progress for nodes in the current upgrade domain at the point of failure.
  kind: object
  properties:
  - description: The name of the upgrade domain
    types:
    - uid: string
    name: DomainName
  - description: List of upgrading nodes and their statuses
    types:
    - uid: NodeUpgradeProgressInfo
    name: NodeUpgradeProgressList
- name: FabricError_Error
  description: Error object containing error code and error message.
  kind: object
  properties:
  - description: >
      Defines the fabric error codes that be returned as part of the error object in response to Service Fabric API operations that are not successful. Following are the error code values that can be returned for a specific HTTP status code.

        - Possible values of the error code for HTTP status code 400 (Bad Request)
          - "FABRIC_E_INVALID_PARTITION_KEY"
          - "FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR"
          - "FABRIC_E_INVALID_ADDRESS"
          - "FABRIC_E_APPLICATION_NOT_UPGRADING"
          - "FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR"
          - "FABRIC_E_FABRIC_NOT_UPGRADING"
          - "FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR"
          - "FABRIC_E_INVALID_CONFIGURATION"
          - "FABRIC_E_INVALID_NAME_URI"
          - "FABRIC_E_PATH_TOO_LONG"
          - "FABRIC_E_KEY_TOO_LARGE"
          - "FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED"
          - "FABRIC_E_INVALID_ATOMIC_GROUP"
          - "FABRIC_E_VALUE_EMPTY"

        - Possible values of the error code for HTTP status code 404 (Not Found)
          - "FABRIC_E_NODE_NOT_FOUND"
          - "FABRIC_E_APPLICATION_TYPE_NOT_FOUND"
          - "FABRIC_E_APPLICATION_NOT_FOUND"
          - "FABRIC_E_SERVICE_TYPE_NOT_FOUND"
          - "FABRIC_E_SERVICE_DOES_NOT_EXIST"
          - "FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND"
          - "FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND"
          - "FABRIC_E_PARTITION_NOT_FOUND"
          - "FABRIC_E_REPLICA_DOES_NOT_EXIST"
          - "FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST"
          - "FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND"
          - "FABRIC_E_DIRECTORY_NOT_FOUND"
          - "FABRIC_E_FABRIC_VERSION_NOT_FOUND"
          - "FABRIC_E_FILE_NOT_FOUND"
          - "FABRIC_E_NAME_DOES_NOT_EXIST"
          - "FABRIC_E_PROPERTY_DOES_NOT_EXIST"
          - "FABRIC_E_ENUMERATION_COMPLETED"
          - "FABRIC_E_SERVICE_MANIFEST_NOT_FOUND"
          - "FABRIC_E_KEY_NOT_FOUND"
          - "FABRIC_E_HEALTH_ENTITY_NOT_FOUND"

        - Possible values of the error code for HTTP status code 409 (Conflict)
          - "FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION"
          - "FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS"
          - "FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS"
          - "FABRIC_E_SERVICE_ALREADY_EXISTS"
          - "FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_TYPE_IN_USE"
          - "FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION"
          - "FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS"
          - "FABRIC_E_FABRIC_VERSION_IN_USE"
          - "FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS"
          - "FABRIC_E_NAME_ALREADY_EXISTS"
          - "FABRIC_E_NAME_NOT_EMPTY"
          - "FABRIC_E_PROPERTY_CHECK_FAILED"
          - "FABRIC_E_SERVICE_METADATA_MISMATCH"
          - "FABRIC_E_SERVICE_TYPE_MISMATCH"
          - "FABRIC_E_HEALTH_STALE_REPORT"
          - "FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED"
          - "FABRIC_E_NODE_HAS_NOT_STOPPED_YET"
          - "FABRIC_E_INSTANCE_ID_MISMATCH"

        - Possible values of the error code for HTTP status code 413 (Request Entity Too Large)
          - "FABRIC_E_VALUE_TOO_LARGE"

        - Possible values of the error code for HTTP status code 500 (Internal Server Error)
          - "FABRIC_E_NODE_IS_UP"

        - Possible values of the error code for HTTP status code 503 (Service Unavailable)
          - "FABRIC_E_NO_WRITE_QUORUM"
          - "FABRIC_E_NOT_PRIMARY"
          - "FABRIC_E_NOT_READY"
          - "FABRIC_E_RECONFIGURATION_PENDING"
          - "FABRIC_E_SERVICE_OFFLINE"
          - "E_ABORT"
          - "FABRIC_E_VALUE_TOO_LARGE"

        - Possible values of the error code for HTTP status code 504 (Gateway Timeout)
          - "FABRIC_E_COMMUNICATION_ERROR"
          - "FABRIC_E_OPERATION_NOT_COMPLETE"
          - "FABRIC_E_TIMEOUT"
    types:
    - uid: FabricErrorCodes
    name: Code
  - description: Error message.
    types:
    - uid: string
    name: Message
- name: UpgradeDomainState
  description: >
    The state of the upgrade domain.

        - Invalid - Indicates the upgrade domain state is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - Pending - The upgrade domain has not started upgrading yet. The value is 1
        - InProgress - The upgrade domain is being upgraded but not complete yet. The value is 2
        - Completed - The upgrade domain has completed upgrade. The value is 3
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: Pending
  - types:
    - uid: string
    name: InProgress
  - types:
    - uid: string
    name: Completed
- name: UpgradeKind
  description: >
    The kind of upgrade out of the following possible values.

        - Invalid - Indicates the upgrade kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - Rolling - The upgrade progresses one upgrade domain at a time. The value is 1
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: Rolling
- name: MonitoringPolicyDescription
  description: Describes the parameters for monitoring an upgrade in Monitored mode.
  kind: object
  properties:
  - description: >
      The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations.

          - Invalid - Indicates the failure action is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          - Rollback - The upgrade will start rolling back automatically. The value is 1
          - Manual - The upgrade will switch to UnmonitoredManual upgrade mode. The value is 2
    types:
    - uid: FailureAction
    name: FailureAction
  - description: The amount of time to wait after completing an upgrade domain before applying health policies. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
    types:
    - uid: string
    name: HealthCheckWaitDurationInMilliseconds
  - description: The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
    types:
    - uid: string
    name: HealthCheckStableDurationInMilliseconds
  - description: The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
    types:
    - uid: string
    name: HealthCheckRetryTimeoutInMilliseconds
  - description: The amount of time the overall upgrade has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
    types:
    - uid: string
    name: UpgradeTimeoutInMilliseconds
  - description: The amount of time each upgrade domain has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
    types:
    - uid: string
    name: UpgradeDomainTimeoutInMilliseconds
- name: ClusterHealthPolicy
  description: >
    Defines a health policy used to evaluate the health of the cluster or of a cluster node.
  kind: object
  properties:
  - description: Indicates whether warnings are treated with the same severity as errors.
    types:
    - uid: boolean
    name: ConsiderWarningAsError
  - description: >
      The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.


      The percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.

      If the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.

      The percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.

      The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.


      In large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.
    types:
    - uid: integer
    name: MaxPercentUnhealthyNodes
  - description: >
      The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.


      The percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.

      If the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.

      This is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.

      The computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.
    types:
    - uid: integer
    name: MaxPercentUnhealthyApplications
  - description: >
      Defines a map with max percentage unhealthy applications for specific application types.

      Each entry specifies as key the application type name and as value an integer that represents the MaxPercentUnhealthyApplications percentage used to evaluate the applications of the specified application type.


      The application type health policy map can be used during cluster health evaluation to describe special application types.

      The application types included in the map are evaluated against the percentage specified in the map, and not with the global MaxPercentUnhealthyApplications defined in the cluster health policy.

      The applications of application types specified in the map are not counted against the global pool of applications.

      For example, if some applications of a type are critical, the cluster administrator can add an entry to the map for that application type

      and assign it a value of 0% (that is, do not tolerate any failures).

      All other applications can be evaluated with MaxPercentUnhealthyApplications set to 20% to tolerate some failures out of the thousands of application instances.

      The application type health policy map is used only if the cluster manifest enables application type health evaluation using the configuration entry for HealthManager/EnableApplicationTypeHealthEvaluation.
    types:
    - uid: ApplicationTypeHealthPolicyMapItem
    name: ApplicationTypeHealthPolicyMap
- name: ClusterUpgradeHealthPolicyObject
  description: Defines a health policy used to evaluate the health of the cluster during a cluster upgrade.
  kind: object
  properties:
  - description: The maximum allowed percentage of nodes health degradation allowed during cluster upgrades. The delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation. The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. The default value is 10%.
    types:
    - uid: integer
    name: MaxPercentDeltaUnhealthyNodes
  - description: The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades. The delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation. The check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits. The default value is 15%.
    types:
    - uid: integer
    name: MaxPercentUpgradeDomainDeltaUnhealthyNodes
- name: ApplicationHealthPolicyMapItem
  description: >
    Defines a map that contains specific application health policies for different applications.

    Each entry specifies as key the application name and as value an ApplicationHealthPolicy used to evaluate the application health.

    If an application is not specified in the map, the application health evaluation uses the ApplicationHealthPolicy found in its application manifest or the default application health policy (if no health policy is defined in the manifest).

    The map is empty by default.
  kind: object
  properties:
  - description: The name of the application, including the 'fabric:' URI scheme.
    types:
    - uid: string
    name: Key
  - description: >
      Defines a health policy used to evaluate the health of an application or one of its children entities.
    types:
    - uid: ApplicationHealthPolicy
    name: Value
- name: NodeUpgradeProgressInfo
  description: List of upgrading nodes and their statuses
  kind: object
  properties:
  - description: The name of a Service Fabric node.
    types:
    - uid: string
    name: NodeName
  - description: >
      The state of the upgrading node.

        - Invalid - Indicates the upgrade state is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - PreUpgradeSafetyCheck - The upgrade has not started yet due to pending safety checks. The value is 1
        - Upgrading - The upgrade is in progress. The value is 2
        - PostUpgradeSafetyCheck - The upgrade has completed and post upgrade safety checks are being performed. The value is 3
    types:
    - uid: NodeUpgradePhase
    name: UpgradePhase
  - description: List of pending safety checks
    types:
    - uid: SafetyCheckWrapper
    name: PendingSafetyChecks
- name: FabricErrorCodes
  description: >
    Defines the fabric error codes that be returned as part of the error object in response to Service Fabric API operations that are not successful. Following are the error code values that can be returned for a specific HTTP status code.

      - Possible values of the error code for HTTP status code 400 (Bad Request)
        - "FABRIC_E_INVALID_PARTITION_KEY"
        - "FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR"
        - "FABRIC_E_INVALID_ADDRESS"
        - "FABRIC_E_APPLICATION_NOT_UPGRADING"
        - "FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR"
        - "FABRIC_E_FABRIC_NOT_UPGRADING"
        - "FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR"
        - "FABRIC_E_INVALID_CONFIGURATION"
        - "FABRIC_E_INVALID_NAME_URI"
        - "FABRIC_E_PATH_TOO_LONG"
        - "FABRIC_E_KEY_TOO_LARGE"
        - "FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED"
        - "FABRIC_E_INVALID_ATOMIC_GROUP"
        - "FABRIC_E_VALUE_EMPTY"

      - Possible values of the error code for HTTP status code 404 (Not Found)
        - "FABRIC_E_NODE_NOT_FOUND"
        - "FABRIC_E_APPLICATION_TYPE_NOT_FOUND"
        - "FABRIC_E_APPLICATION_NOT_FOUND"
        - "FABRIC_E_SERVICE_TYPE_NOT_FOUND"
        - "FABRIC_E_SERVICE_DOES_NOT_EXIST"
        - "FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND"
        - "FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND"
        - "FABRIC_E_PARTITION_NOT_FOUND"
        - "FABRIC_E_REPLICA_DOES_NOT_EXIST"
        - "FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST"
        - "FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND"
        - "FABRIC_E_DIRECTORY_NOT_FOUND"
        - "FABRIC_E_FABRIC_VERSION_NOT_FOUND"
        - "FABRIC_E_FILE_NOT_FOUND"
        - "FABRIC_E_NAME_DOES_NOT_EXIST"
        - "FABRIC_E_PROPERTY_DOES_NOT_EXIST"
        - "FABRIC_E_ENUMERATION_COMPLETED"
        - "FABRIC_E_SERVICE_MANIFEST_NOT_FOUND"
        - "FABRIC_E_KEY_NOT_FOUND"
        - "FABRIC_E_HEALTH_ENTITY_NOT_FOUND"

      - Possible values of the error code for HTTP status code 409 (Conflict)
        - "FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS"
        - "FABRIC_E_APPLICATION_ALREADY_EXISTS"
        - "FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION"
        - "FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS"
        - "FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS"
        - "FABRIC_E_SERVICE_ALREADY_EXISTS"
        - "FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS"
        - "FABRIC_E_APPLICATION_TYPE_IN_USE"
        - "FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION"
        - "FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS"
        - "FABRIC_E_FABRIC_VERSION_IN_USE"
        - "FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS"
        - "FABRIC_E_NAME_ALREADY_EXISTS"
        - "FABRIC_E_NAME_NOT_EMPTY"
        - "FABRIC_E_PROPERTY_CHECK_FAILED"
        - "FABRIC_E_SERVICE_METADATA_MISMATCH"
        - "FABRIC_E_SERVICE_TYPE_MISMATCH"
        - "FABRIC_E_HEALTH_STALE_REPORT"
        - "FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED"
        - "FABRIC_E_NODE_HAS_NOT_STOPPED_YET"
        - "FABRIC_E_INSTANCE_ID_MISMATCH"

      - Possible values of the error code for HTTP status code 413 (Request Entity Too Large)
        - "FABRIC_E_VALUE_TOO_LARGE"

      - Possible values of the error code for HTTP status code 500 (Internal Server Error)
        - "FABRIC_E_NODE_IS_UP"

      - Possible values of the error code for HTTP status code 503 (Service Unavailable)
        - "FABRIC_E_NO_WRITE_QUORUM"
        - "FABRIC_E_NOT_PRIMARY"
        - "FABRIC_E_NOT_READY"
        - "FABRIC_E_RECONFIGURATION_PENDING"
        - "FABRIC_E_SERVICE_OFFLINE"
        - "E_ABORT"
        - "FABRIC_E_VALUE_TOO_LARGE"

      - Possible values of the error code for HTTP status code 504 (Gateway Timeout)
        - "FABRIC_E_COMMUNICATION_ERROR"
        - "FABRIC_E_OPERATION_NOT_COMPLETE"
        - "FABRIC_E_TIMEOUT"
  kind: enum
  properties:
  - types:
    - uid: string
    name: FABRIC_E_INVALID_PARTITION_KEY
  - types:
    - uid: string
    name: FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR
  - types:
    - uid: string
    name: FABRIC_E_INVALID_ADDRESS
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_NOT_UPGRADING
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_NOT_UPGRADING
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR
  - types:
    - uid: string
    name: FABRIC_E_INVALID_CONFIGURATION
  - types:
    - uid: string
    name: FABRIC_E_INVALID_NAME_URI
  - types:
    - uid: string
    name: FABRIC_E_PATH_TOO_LONG
  - types:
    - uid: string
    name: FABRIC_E_KEY_TOO_LARGE
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED
  - types:
    - uid: string
    name: FABRIC_E_INVALID_ATOMIC_GROUP
  - types:
    - uid: string
    name: FABRIC_E_VALUE_EMPTY
  - types:
    - uid: string
    name: FABRIC_E_NODE_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_TYPE_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_TYPE_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_DOES_NOT_EXIST
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_PARTITION_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_REPLICA_DOES_NOT_EXIST
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST
  - types:
    - uid: string
    name: FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_DIRECTORY_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_VERSION_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_FILE_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_NAME_DOES_NOT_EXIST
  - types:
    - uid: string
    name: FABRIC_E_PROPERTY_DOES_NOT_EXIST
  - types:
    - uid: string
    name: FABRIC_E_ENUMERATION_COMPLETED
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_MANIFEST_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_KEY_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_HEALTH_ENTITY_NOT_FOUND
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_ALREADY_EXISTS
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_ALREADY_EXISTS
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS
  - types:
    - uid: string
    name: FABRIC_E_APPLICATION_TYPE_IN_USE
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_VERSION_IN_USE
  - types:
    - uid: string
    name: FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS
  - types:
    - uid: string
    name: FABRIC_E_NAME_ALREADY_EXISTS
  - types:
    - uid: string
    name: FABRIC_E_NAME_NOT_EMPTY
  - types:
    - uid: string
    name: FABRIC_E_PROPERTY_CHECK_FAILED
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_METADATA_MISMATCH
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_TYPE_MISMATCH
  - types:
    - uid: string
    name: FABRIC_E_HEALTH_STALE_REPORT
  - types:
    - uid: string
    name: FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED
  - types:
    - uid: string
    name: FABRIC_E_NODE_HAS_NOT_STOPPED_YET
  - types:
    - uid: string
    name: FABRIC_E_INSTANCE_ID_MISMATCH
  - types:
    - uid: string
    name: FABRIC_E_VALUE_TOO_LARGE
  - types:
    - uid: string
    name: FABRIC_E_NO_WRITE_QUORUM
  - types:
    - uid: string
    name: FABRIC_E_NOT_PRIMARY
  - types:
    - uid: string
    name: FABRIC_E_NOT_READY
  - types:
    - uid: string
    name: FABRIC_E_RECONFIGURATION_PENDING
  - types:
    - uid: string
    name: FABRIC_E_SERVICE_OFFLINE
  - types:
    - uid: string
    name: E_ABORT
  - types:
    - uid: string
    name: FABRIC_E_COMMUNICATION_ERROR
  - types:
    - uid: string
    name: FABRIC_E_OPERATION_NOT_COMPLETE
  - types:
    - uid: string
    name: FABRIC_E_TIMEOUT
  - types:
    - uid: string
    name: FABRIC_E_NODE_IS_UP
- name: FailureAction
  description: >
    The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations.

        - Invalid - Indicates the failure action is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
        - Rollback - The upgrade will start rolling back automatically. The value is 1
        - Manual - The upgrade will switch to UnmonitoredManual upgrade mode. The value is 2
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: Rollback
  - types:
    - uid: string
    name: Manual
- name: ApplicationTypeHealthPolicyMapItem
  description: >
    Defines an item in ApplicationTypeHealthPolicyMap.
  kind: object
  properties:
  - description: The key of the application type health policy map item. This is the name of the application type.
    types:
    - uid: string
    name: Key
  - description: >
      The value of the application type health policy map item.

      The max percent unhealthy applications allowed for the application type. Must be between zero and 100.
    types:
    - uid: integer
    name: Value
- name: ApplicationHealthPolicy
  description: >
    Defines a health policy used to evaluate the health of an application or one of its children entities.
  kind: object
  properties:
  - description: Indicates whether warnings are treated with the same severity as errors.
    types:
    - uid: boolean
    name: ConsiderWarningAsError
  - description: >
      The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.

      The percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.

      This is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.

      The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.
    types:
    - uid: integer
    name: MaxPercentUnhealthyDeployedApplications
  - description: >
      Represents the health policy used to evaluate the health of services belonging to a service type.
    types:
    - uid: ServiceTypeHealthPolicy
    name: DefaultServiceTypeHealthPolicy
  - description: >
      Defines a ServiceTypeHealthPolicy per service type name.


      The entries in the map replace the default service type health policy for each specified service type. For example, in an application that contains both a stateless gateway service type and a stateful engine service type, the health policies for the stateless and stateful services can be configured differently. With policy per service type, there's more granular control of the health of the service.


      If no policy is specified for a service type name, the DefaultServiceTypeHealthPolicy is used for evaluation.
    types:
    - uid: ServiceTypeHealthPolicyMapItem
    name: ServiceTypeHealthPolicyMap
- name: ApplicationHealthEvaluation
  description: Represents health evaluation for an application, containing information about the data and the algorithm used by the health store to evaluate health.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: Application
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: The name of the application, including the 'fabric:' URI scheme.
    types:
    - uid: string
    name: ApplicationName
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: ApplicationsHealthEvaluation
  description: Represents health evaluation for applications, containing health evaluations for each unhealthy application that impacted current aggregated health state.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: Applications
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: Maximum allowed percentage of unhealthy applications from the ClusterHealthPolicy.
    types:
    - uid: integer
    name: MaxPercentUnhealthyApplications
  - description: Total number of applications from the health store.
    types:
    - uid: integer
    name: TotalCount
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: ApplicationTypeApplicationsHealthEvaluation
  description: Represents health evaluation for applications of a particular application type. The application type applications evaluation can be returned when cluster health evaluation returns unhealthy aggregated health state, either Error or Warning. It contains health evaluations for each unhealthy application of the included application type that impacted current aggregated health state.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: ApplicationTypeApplications
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: The application type name as defined in the application manifest.
    types:
    - uid: string
    name: ApplicationTypeName
  - description: Maximum allowed percentage of unhealthy applications for the application type, specified as an entry in ApplicationTypeHealthPolicyMap.
    types:
    - uid: integer
    name: MaxPercentUnhealthyApplications
  - description: Total number of applications of the application type found in the health store.
    types:
    - uid: integer
    name: TotalCount
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: DeltaNodesCheckHealthEvaluation
  description: >
    Represents health evaluation for delta nodes, containing health evaluations for each unhealthy node that impacted current aggregated health state.

    Can be returned during cluster upgrade when the aggregated health state of the cluster is Warning or Error.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: DeltaNodesCheck
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: Number of nodes with aggregated heath state Error in the health store at the beginning of the cluster upgrade.
    types:
    - uid: integer
    name: BaselineErrorCount
  - description: Total number of nodes in the health store at the beginning of the cluster upgrade.
    types:
    - uid: integer
    name: BaselineTotalCount
  - description: Maximum allowed percentage of delta unhealthy nodes from the ClusterUpgradeHealthPolicy.
    types:
    - uid: integer
    name: MaxPercentDeltaUnhealthyNodes
  - description: Total number of nodes in the health store.
    types:
    - uid: integer
    name: TotalCount
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: DeployedApplicationHealthEvaluation
  description: >
    Represents health evaluation for a deployed application, containing information about the data and the algorithm used by the health store to evaluate health.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: DeployedApplication
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: The name of a Service Fabric node.
    types:
    - uid: string
    name: NodeName
  - description: The name of the application, including the 'fabric:' URI scheme.
    types:
    - uid: string
    name: ApplicationName
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: DeployedApplicationsHealthEvaluation
  description: >
    Represents health evaluation for deployed applications, containing health evaluations for each unhealthy deployed application that impacted current aggregated health state.

    Can be returned when evaluating application health and the aggregated health state is either Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: DeployedApplications
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: Maximum allowed percentage of unhealthy deployed applications from the ApplicationHealthPolicy.
    types:
    - uid: integer
    name: MaxPercentUnhealthyDeployedApplications
  - description: Total number of deployed applications of the application in the health store.
    types:
    - uid: integer
    name: TotalCount
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: DeployedServicePackageHealthEvaluation
  description: Represents health evaluation for a deployed service package, containing information about the data and the algorithm used by health store to evaluate health. The evaluation is returned only when the aggregated health state is either Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: DeployedServicePackage
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: The name of a Service Fabric node.
    types:
    - uid: string
    name: NodeName
  - description: The name of the application, including the 'fabric:' URI scheme.
    types:
    - uid: string
    name: ApplicationName
  - description: The name of the service manifest.
    types:
    - uid: string
    name: ServiceManifestName
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: DeployedServicePackagesHealthEvaluation
  description: Represents health evaluation for deployed service packages, containing health evaluations for each unhealthy deployed service package that impacted current aggregated health state. Can be returned when evaluating deployed application health and the aggregated health state is either Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: DeployedServicePackages
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: Total number of deployed service packages of the deployed application in the health store.
    types:
    - uid: integer
    name: TotalCount
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: EventHealthEvaluation
  description: >
    Represents health evaluation of a HealthEvent that was reported on the entity.

    The health evaluation is returned when evaluating health of an entity results in Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: Event
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: Indicates whether warnings are treated with the same severity as errors. The field is specified in the health policy used to evaluate the entity.
    types:
    - uid: boolean
    name: ConsiderWarningAsError
  - description: >
      Represents health information reported on a health entity, such as cluster, application or node, with additional metadata added by the Health Manager.
    types:
    - uid: HealthEvent
    name: UnhealthyEvent
- name: NodeHealthEvaluation
  description: Represents health evaluation for a node, containing information about the data and the algorithm used by health store to evaluate health. The evaluation is returned only when the aggregated health state is either Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: Node
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: The name of a Service Fabric node.
    types:
    - uid: string
    name: NodeName
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: NodesHealthEvaluation
  description: Represents health evaluation for nodes, containing health evaluations for each unhealthy node that impacted current aggregated health state. Can be returned when evaluating cluster health and the aggregated health state is either Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: Nodes
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: Maximum allowed percentage of unhealthy nodes from the ClusterHealthPolicy.
    types:
    - uid: integer
    name: MaxPercentUnhealthyNodes
  - description: Total number of nodes found in the health store.
    types:
    - uid: integer
    name: TotalCount
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: PartitionHealthEvaluation
  description: Represents health evaluation for a partition, containing information about the data and the algorithm used by health store to evaluate health. The evaluation is returned only when the aggregated health state is either Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: Partition
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition id is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the ids of its partitions would be different.
    types:
    - uid: string
    name: PartitionId
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: PartitionsHealthEvaluation
  description: Represents health evaluation for the partitions of a service, containing health evaluations for each unhealthy partition that impacts current aggregated health state. Can be returned when evaluating service health and the aggregated health state is either Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: Partitions
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: Maximum allowed percentage of unhealthy partitions per service from the ServiceTypeHealthPolicy.
    types:
    - uid: integer
    name: MaxPercentUnhealthyPartitionsPerService
  - description: Total number of partitions of the service from the health store.
    types:
    - uid: integer
    name: TotalCount
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: ReplicaHealthEvaluation
  description: Represents health evaluation for a replica, containing information about the data and the algorithm used by health store to evaluate health. The evaluation is returned only when the aggregated health state is either Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: Replica
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition id is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the ids of its partitions would be different.
    types:
    - uid: string
    name: PartitionId
  - description: Id of a stateful service replica or a stateless service instance. This id is used in the queries that apply to both stateful and stateless services. It is used by Service Fabric to uniquely identify a replica of a partition of a stateful service or an instance of a stateless service partition. It is unique within a partition and does not change for the lifetime of the replica or the instance. If a stateful replica gets dropped and another replica gets created on the same node for the same partition, it will get a different value for the id. If a staless instance is failed over on the same or different node it will get a different value for the id.
    types:
    - uid: string
    name: ReplicaOrInstanceId
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: ReplicasHealthEvaluation
  description: Represents health evaluation for replicas, containing health evaluations for each unhealthy replica that impacted current aggregated health state. Can be returned when evaluating partition health and the aggregated health state is either Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: Replicas
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: Maximum allowed percentage of unhealthy replicas per partition from the ApplicationHealthPolicy.
    types:
    - uid: integer
    name: MaxPercentUnhealthyReplicasPerPartition
  - description: Total number of replicas in the partition from the health store.
    types:
    - uid: integer
    name: TotalCount
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: ServiceHealthEvaluation
  description: Represents health evaluation for a service, containing information about the data and the algorithm used by health store to evaluate health. The evaluation is returned only when the aggregated health state is either Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: Service
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: The full name of the service with 'fabric:' URI scheme.
    types:
    - uid: string
    name: ServiceName
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: ServicesHealthEvaluation
  description: Represents health evaluation for services of a certain service type belonging to an application, containing health evaluations for each unhealthy service that impacted current aggregated health state. Can be returned when evaluating application health and the aggregated health state is either Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: Services
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: Name of the service type of the services.
    types:
    - uid: string
    name: ServiceTypeName
  - description: Maximum allowed percentage of unhealthy services from the ServiceTypeHealthPolicy.
    types:
    - uid: integer
    name: MaxPercentUnhealthyServices
  - description: Total number of services of the current service type in the application from the health store.
    types:
    - uid: integer
    name: TotalCount
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: SystemApplicationHealthEvaluation
  description: Represents health evaluation for the fabric:/System application, containing information about the data and the algorithm used by health store to evaluate health. The evaluation is returned only when the aggregated health state of the cluster is either Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: SystemApplication
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: UpgradeDomainDeltaNodesCheckHealthEvaluation
  description: >
    Represents health evaluation for delta unhealthy cluster nodes in an upgrade domain, containing health evaluations for each unhealthy node that impacted current aggregated health state.

    Can be returned during cluster upgrade when cluster aggregated health state is Warning or Error.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: UpgradeDomainDeltaNodesCheck
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: Name of the upgrade domain where nodes health is currently evaluated.
    types:
    - uid: string
    name: UpgradeDomainName
  - description: Number of upgrade domain nodes with aggregated heath state Error in the health store at the beginning of the cluster upgrade.
    types:
    - uid: integer
    name: BaselineErrorCount
  - description: Total number of upgrade domain nodes in the health store at the beginning of the cluster upgrade.
    types:
    - uid: integer
    name: BaselineTotalCount
  - description: Maximum allowed percentage of upgrade domain delta unhealthy nodes from the ClusterUpgradeHealthPolicy.
    types:
    - uid: integer
    name: MaxPercentDeltaUnhealthyNodes
  - description: Total number of upgrade domain nodes in the health store.
    types:
    - uid: integer
    name: TotalCount
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: UpgradeDomainNodesHealthEvaluation
  description: Represents health evaluation for cluster nodes in an upgrade domain, containing health evaluations for each unhealthy node that impacted current aggregated health state. Can be returned when evaluating cluster health during cluster upgrade and the aggregated health state is either Error or Warning.
  kind: object
  properties:
  - description: >
      The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

        - Invalid - Indicates that the health evaluation is invalid. The value is zero.
        - Event - Indicates that the health evaluation is for a health event. The value is 1.
        - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
        - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
        - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
        - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
        - Services - Indicates that the health evaluation is for services of an application. The value is 6.
        - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
        - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
        - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
        - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
        - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
        - Node - Indicates that the health evaluation is for a node. The value is 12.
        - Replica - Indicates that the health evaluation is for a replica. The value is 13.
        - Partition - Indicates that the health evaluation is for a partition. The value is 14.
        - Service - Indicates that the health evaluation is for a service. The value is 15.
        - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
        - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
        - Application - Indicates that the health evaluation is for an application. The value is 18.
        - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
        - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
        - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
    types:
    - uid: UpgradeDomainNodes
    typesTitle: string
    name: Kind
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: AggregatedHealthState
  - description: Description of the health evaluation, which represents a summary of the evaluation process.
    types:
    - uid: string
    name: Description
  - description: Name of the upgrade domain where nodes health is currently evaluated.
    types:
    - uid: string
    name: UpgradeDomainName
  - description: Maximum allowed percentage of unhealthy nodes from the ClusterHealthPolicy.
    types:
    - uid: integer
    name: MaxPercentUnhealthyNodes
  - description: Total number of nodes in the current upgrade domain.
    types:
    - uid: integer
    name: TotalCount
  - description: List of health evaluations that resulted in the current aggregated health state.
    types:
    - uid: HealthEvaluationWrapper
    name: UnhealthyEvaluations
- name: NodeUpgradePhase
  description: >
    The state of the upgrading node.

      - Invalid - Indicates the upgrade state is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
      - PreUpgradeSafetyCheck - The upgrade has not started yet due to pending safety checks. The value is 1
      - Upgrading - The upgrade is in progress. The value is 2
      - PostUpgradeSafetyCheck - The upgrade has completed and post upgrade safety checks are being performed. The value is 3
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: PreUpgradeSafetyCheck
  - types:
    - uid: string
    name: Upgrading
  - types:
    - uid: string
    name: PostUpgradeSafetyCheck
- name: SafetyCheckWrapper
  description: List of pending safety checks
  kind: object
  properties:
  - description: Represents a safety check performed by service fabric before continuing with the operations. These checks ensure the availability of the service and the reliability of the state.
    types:
    - uid: PartitionSafetyCheck
    - uid: SeedNodeSafetyCheck
    typesTitle: SafetyCheck
    name: SafetyCheck
- name: ServiceTypeHealthPolicy
  description: >
    Represents the health policy used to evaluate the health of services belonging to a service type.
  kind: object
  properties:
  - description: >
      The maximum allowed percentage of unhealthy partitions per service. Allowed values are Byte values from zero to 100


      The percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.

      If the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.

      The percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.

      The computation rounds up to tolerate one failure on small numbers of partitions. Default percentage is zero.
    types:
    - uid: integer
    name: MaxPercentUnhealthyPartitionsPerService
  - description: >
      The maximum allowed percentage of unhealthy replicas per partition. Allowed values are Byte values from zero to 100.


      The percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.

      If the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.

      The percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.

      The computation rounds up to tolerate one failure on small numbers of replicas. Default percentage is zero.
    types:
    - uid: integer
    name: MaxPercentUnhealthyReplicasPerPartition
  - description: >
      The maximum maximum allowed percentage of unhealthy services. Allowed values are Byte values from zero to 100.


      The percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.

      If the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.

      This is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.

      The computation rounds up to tolerate one failure on small numbers of services. Default percentage is zero.
    types:
    - uid: integer
    name: MaxPercentUnhealthyServices
- name: ServiceTypeHealthPolicyMapItem
  description: >
    Defines a ServiceTypeHealthPolicy per service type name.


    The entries in the map replace the default service type health policy for each specified service type. For example, in an application that contains both a stateless gateway service type and a stateful engine service type, the health policies for the stateless and stateful services can be configured differently. With policy per service type, there's more granular control of the health of the service.


    If no policy is specified for a service type name, the DefaultServiceTypeHealthPolicy is used for evaluation.
  kind: object
  properties:
  - description: The key of the service type health policy map item. This is the name of the service type.
    types:
    - uid: string
    name: Key
  - description: >
      Represents the health policy used to evaluate the health of services belonging to a service type.
    types:
    - uid: ServiceTypeHealthPolicy
    name: Value
- name: HealthEvaluationKind
  description: >
    The health manager in the cluster performs health evalautions in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.

      - Invalid - Indicates that the health evaluation is invalid. The value is zero.
      - Event - Indicates that the health evaluation is for a health event. The value is 1.
      - Replicas - Indicates that the health evaluation is for the replicas of a partition. The value is 2.
      - Partitions - Indicates that the health evaluation is for the partitions of a service. The value is 3.
      - DeployedServicePackages - Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
      - DeployedApplications - Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
      - Services - Indicates that the health evaluation is for services of an application. The value is 6.
      - Nodes - Indicates that the health evaluation is for the cluster nodes. The value is 7.
      - Applications - Indicates that the health evaluation is for the cluster applications. The value is 8.
      - SystemApplication - Indicates that the health evaluation is for the system application. The value is 9.
      - UpgradeDomainDeployedApplications - Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
      - UpgradeDomainNodes - Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
      - Node - Indicates that the health evaluation is for a node. The value is 12.
      - Replica - Indicates that the health evaluation is for a replica. The value is 13.
      - Partition - Indicates that the health evaluation is for a partition. The value is 14.
      - Service - Indicates that the health evaluation is for a service. The value is 15.
      - DeployedServicePackage - Indicates that the health evaluation is for a deployed service package. The value is 16.
      - DeployedApplication - Indicates that the health evaluation is for a deployed application. The value is 17.
      - Application - Indicates that the health evaluation is for an application. The value is 18.
      - DeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
      - UpgradeDomainDeltaNodesCheck - Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
      - ApplicationTypeApplications – Indicates that the health evaluation is for applications of an application type. The value is 21.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: Event
  - types:
    - uid: string
    name: Replicas
  - types:
    - uid: string
    name: Partitions
  - types:
    - uid: string
    name: DeployedServicePackages
  - types:
    - uid: string
    name: DeployedApplications
  - types:
    - uid: string
    name: Services
  - types:
    - uid: string
    name: Nodes
  - types:
    - uid: string
    name: Applications
  - types:
    - uid: string
    name: SystemApplication
  - types:
    - uid: string
    name: UpgradeDomainDeployedApplications
  - types:
    - uid: string
    name: UpgradeDomainNodes
  - types:
    - uid: string
    name: Replica
  - types:
    - uid: string
    name: Partition
  - types:
    - uid: string
    name: DeployedServicePackage
  - types:
    - uid: string
    name: DeployedApplication
  - types:
    - uid: string
    name: Service
  - types:
    - uid: string
    name: Node
  - types:
    - uid: string
    name: Application
  - types:
    - uid: string
    name: DeltaNodesCheck
  - types:
    - uid: string
    name: UpgradeDomainDeltaNodesCheck
  - types:
    - uid: string
    name: ApplicationTypeApplications
- name: HealthState
  description: >
    The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

      - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
      - Ok - Indicates the health state is okay. The value is 1.
      - Warning - Indicates the health state is at a warning level. The value is 2.
      - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
      - Unknown - Indicates an unknown health status. The value is 65535.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: Ok
  - types:
    - uid: string
    name: Warning
  - types:
    - uid: string
    name: Error
  - types:
    - uid: string
    name: Unknown
- name: HealthEvent
  description: The list of health events reported on the entity.
  kind: object
  properties:
  - description: >
      The source name which identifies the client/watchdog/system component which generated the health information.
    types:
    - uid: string
    name: SourceId
  - description: >
      The property of the health information. An entity can have health reports for different properties.

      The property is a string and not a fixed enumeration to allow the reporter flexibility to categorize the state condition that triggers the report.

      For example, a reporter with SourceId "LocalWatchdog" can monitor the state of the available disk on a node,

      so it can report "AvailableDisk" property on that node.

      The same reporter can monitor the node connectivity, so it can report a property "Connectivity" on the same node.

      In the health store, these reports are treated as separate health events for the specified node.


      Together with the SourceId, the property uniquely identifies the health information.
    types:
    - uid: string
    name: Property
  - description: >
      The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.

        - Invalid - Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
        - Ok - Indicates the health state is okay. The value is 1.
        - Warning - Indicates the health state is at a warning level. The value is 2.
        - Error - Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
        - Unknown - Indicates an unknown health status. The value is 65535.
    types:
    - uid: HealthState
    name: HealthState
  - description: >
      The duration for which this health report is valid. This field is using ISO8601 format for specifying the duration.

      When clients report periodically, they should send reports with higher frequency than time to live.

      If clients report on transition, they can set the time to live to infinite.

      When time to live expires, the health event that contains the health information

      is either removed from health store, if RemoveWhenExpired is true, or evaluated at error, if RemoveWhenExpired false.


      If not specified, time to live defaults to infinite value.
    types:
    - uid: string
    name: TimeToLiveInMilliSeconds
  - description: >
      The description of the health information. It represents free text used to add human readable information about the report.

      The maximum string length for the description is 4096 characters.

      If the provided string is longer, it will be automatically truncated.

      When truncated, the last characters of the description contain a marker "[Truncated]", and total string size is 4096 characters.

      The presence of the marker indicates to users that truncation occurred.

      Note that when truncated, the description has less than 4096 characters from the original string.
    types:
    - uid: string
    name: Description
  - description: >
      The sequence number for this health report as a numeric string.

      The report sequence number is used by the health store to detect stale reports.

      If not specified, a sequence number is auto-generated by the health client when a report is added.
    types:
    - uid: string
    name: SequenceNumber
  - description: >
      Value that indicates whether the report is removed from health store when it expires.

      If set to true, the report is remopved from the health store after it expires.

      If set to false, the report is treated as an error when expired. The value of this property is false by default.

      When clients report periodically, they should set RemoveWhenExpired false (default).

      This way, is the reporter has issues (eg. deadlock) and can't report, the entity is evaluated at error when the health report expires.

      This flags the entity as being in Error health state.
    types:
    - uid: boolean
    name: RemoveWhenExpired
  - description: Returns true if the health event is expired, otherwise false.
    types:
    - uid: boolean
    name: IsExpired
  - description: The date and time when the health report was sent by the source.
    types:
    - uid: string
    name: SourceUtcTimestamp
  - description: The date and time when the health report was last modified by the health store.
    types:
    - uid: string
    name: LastModifiedUtcTimestamp
  - description: >
      If the current health state is 'Ok', this property returns the time at which the health report was first reported with 'Ok'.

      For periodic reporting, many reports with the same state may have been generated.

      This property returns the date and time when the first 'Ok' health report was received.


      If the current health state is 'Error' or 'Warning', returns the date and time at which the health state was last in 'Ok', before transitioning to a different state.


      If the health state was never 'Ok', the value will be zero date-time.
    types:
    - uid: string
    name: LastOkTransitionAt
  - description: >
      If the current health state is 'Warning', this property returns the time at which the health report was first reported with 'Warning'. For periodic reporting, many reports with the same state may have been generated however, this property returns only the date and time at the first 'Warning' health report was received.


      If the current health state is 'Ok' or 'Error', returns the date and time at which the health state was last in 'Warning', before transitioning to a different state.


      If the health state was never 'Warning', the value will be zero date-time.
    types:
    - uid: string
    name: LastWarningTransitionAt
  - description: >
      If the current health state is 'Error', this property returns the time at which the health report was first reported with 'Error'. For periodic reporting, many reports with the same state may have been generated however, this property returns only the date and time at the first 'Error' health report was received.


      If the current health state is 'Ok' or 'Warning', returns the date and time at which the health state was last in 'Error', before transitioning to a different state.


      If the health state was never 'Error', the value will be zero date-time.
    types:
    - uid: string
    name: LastErrorTransitionAt
- name: SeedNodeSafetyCheck
  description: Represents a safety check for the seed nodes being performed by service fabric before continuing with node level operations.
  kind: object
  properties:
  - description: >
      The kind of safety check performed by service fabric before continuing with the operations. These checks ensure the availability of the service and the reliability of the state. Following are the kinds of safety checks.


      - Invalid - Indicates that the upgrade safety check kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - EnsureSeedNodeQuorum - Indicates that if we bring down the node then this will result in global seed node quorum loss. The value is 1.

      - EnsurePartitionQuorum - Indicates that there is some partition for which if we bring down the replica on the node, it will result in quorum loss for that partition. The value is 2.

      - WaitForPrimaryPlacement - Indicates that there is some replica on the node that was moved out of this node due to upgrade. Service Fabric is now waiting for the primary to be moved back to this node. The value is 3.

      - WaitForPrimarySwap - Indicates that Service Fabric is waiting for a primary replica to be moved out of the node before starting upgrade on that node. The value is 4.

      - WaitForReconfiguration - Indicates that there is some replica on the node that is involved in a reconfiguration. Service Fabric is waiting for the reconfiguration to be complete before staring upgrade on that node. The value is 5.

      - WaitForInbuildReplica - Indicates that there is either a replica on the node that is going through copy, or there is a primary replica on the node that is copying data to some other replica. In both cases, bringing down the replica on the node due to upgrade will abort the copy. The value is 6.

      - EnsureAvailability - Indicates that there is either a stateless service partition on the node having exactly one instance, or there is a primary replica on the node for which the partition is quorum loss. In both cases, bringing down the replicas due to upgrade will result in loss of availability. The value is 7.
    types:
    - uid: EnsureSeedNodeQuorum
    typesTitle: string
    name: Kind
- name: EnsureAvailabilitySafetyCheck
  description: Safety check that waits to ensure the availability of the partition. It waits until there are replicas available such that bringing down this replica will not cause availability loss for the partition.
  kind: object
  properties:
  - description: >
      The kind of safety check performed by service fabric before continuing with the operations. These checks ensure the availability of the service and the reliability of the state. Following are the kinds of safety checks.


      - Invalid - Indicates that the upgrade safety check kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - EnsureSeedNodeQuorum - Indicates that if we bring down the node then this will result in global seed node quorum loss. The value is 1.

      - EnsurePartitionQuorum - Indicates that there is some partition for which if we bring down the replica on the node, it will result in quorum loss for that partition. The value is 2.

      - WaitForPrimaryPlacement - Indicates that there is some replica on the node that was moved out of this node due to upgrade. Service Fabric is now waiting for the primary to be moved back to this node. The value is 3.

      - WaitForPrimarySwap - Indicates that Service Fabric is waiting for a primary replica to be moved out of the node before starting upgrade on that node. The value is 4.

      - WaitForReconfiguration - Indicates that there is some replica on the node that is involved in a reconfiguration. Service Fabric is waiting for the reconfiguration to be complete before staring upgrade on that node. The value is 5.

      - WaitForInbuildReplica - Indicates that there is either a replica on the node that is going through copy, or there is a primary replica on the node that is copying data to some other replica. In both cases, bringing down the replica on the node due to upgrade will abort the copy. The value is 6.

      - EnsureAvailability - Indicates that there is either a stateless service partition on the node having exactly one instance, or there is a primary replica on the node for which the partition is quorum loss. In both cases, bringing down the replicas due to upgrade will result in loss of availability. The value is 7.
    types:
    - uid: EnsureAvailability
    typesTitle: string
    name: Kind
  - description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition id is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the ids of its partitions would be different.
    types:
    - uid: string
    name: PartitionId
- name: EnsurePartitionQurumSafetyCheck
  description: Safety check that ensures that a quorum of replicas are not lost for a partition.
  kind: object
  properties:
  - description: >
      The kind of safety check performed by service fabric before continuing with the operations. These checks ensure the availability of the service and the reliability of the state. Following are the kinds of safety checks.


      - Invalid - Indicates that the upgrade safety check kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - EnsureSeedNodeQuorum - Indicates that if we bring down the node then this will result in global seed node quorum loss. The value is 1.

      - EnsurePartitionQuorum - Indicates that there is some partition for which if we bring down the replica on the node, it will result in quorum loss for that partition. The value is 2.

      - WaitForPrimaryPlacement - Indicates that there is some replica on the node that was moved out of this node due to upgrade. Service Fabric is now waiting for the primary to be moved back to this node. The value is 3.

      - WaitForPrimarySwap - Indicates that Service Fabric is waiting for a primary replica to be moved out of the node before starting upgrade on that node. The value is 4.

      - WaitForReconfiguration - Indicates that there is some replica on the node that is involved in a reconfiguration. Service Fabric is waiting for the reconfiguration to be complete before staring upgrade on that node. The value is 5.

      - WaitForInbuildReplica - Indicates that there is either a replica on the node that is going through copy, or there is a primary replica on the node that is copying data to some other replica. In both cases, bringing down the replica on the node due to upgrade will abort the copy. The value is 6.

      - EnsureAvailability - Indicates that there is either a stateless service partition on the node having exactly one instance, or there is a primary replica on the node for which the partition is quorum loss. In both cases, bringing down the replicas due to upgrade will result in loss of availability. The value is 7.
    types:
    - uid: EnsurePartitionQuorum
    typesTitle: string
    name: Kind
  - description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition id is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the ids of its partitions would be different.
    types:
    - uid: string
    name: PartitionId
- name: WaitForInbuildReplicaSafetyCheck
  description: Safety check that waits for the replica build operation to finish. This indiciates that there is a replica that is going through the copy or is providing data for building another replica. Bring the node down will abort this copy operation which are typoically expensive involving data movements.
  kind: object
  properties:
  - description: >
      The kind of safety check performed by service fabric before continuing with the operations. These checks ensure the availability of the service and the reliability of the state. Following are the kinds of safety checks.


      - Invalid - Indicates that the upgrade safety check kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - EnsureSeedNodeQuorum - Indicates that if we bring down the node then this will result in global seed node quorum loss. The value is 1.

      - EnsurePartitionQuorum - Indicates that there is some partition for which if we bring down the replica on the node, it will result in quorum loss for that partition. The value is 2.

      - WaitForPrimaryPlacement - Indicates that there is some replica on the node that was moved out of this node due to upgrade. Service Fabric is now waiting for the primary to be moved back to this node. The value is 3.

      - WaitForPrimarySwap - Indicates that Service Fabric is waiting for a primary replica to be moved out of the node before starting upgrade on that node. The value is 4.

      - WaitForReconfiguration - Indicates that there is some replica on the node that is involved in a reconfiguration. Service Fabric is waiting for the reconfiguration to be complete before staring upgrade on that node. The value is 5.

      - WaitForInbuildReplica - Indicates that there is either a replica on the node that is going through copy, or there is a primary replica on the node that is copying data to some other replica. In both cases, bringing down the replica on the node due to upgrade will abort the copy. The value is 6.

      - EnsureAvailability - Indicates that there is either a stateless service partition on the node having exactly one instance, or there is a primary replica on the node for which the partition is quorum loss. In both cases, bringing down the replicas due to upgrade will result in loss of availability. The value is 7.
    types:
    - uid: WaitForInbuildReplica
    typesTitle: string
    name: Kind
  - description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition id is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the ids of its partitions would be different.
    types:
    - uid: string
    name: PartitionId
- name: WaitForPrimaryPlacementSafetyCheck
  description: Safety check that waits for the primary replica that was moved out of the node due to upgrade to be placed back again on that node.
  kind: object
  properties:
  - description: >
      The kind of safety check performed by service fabric before continuing with the operations. These checks ensure the availability of the service and the reliability of the state. Following are the kinds of safety checks.


      - Invalid - Indicates that the upgrade safety check kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - EnsureSeedNodeQuorum - Indicates that if we bring down the node then this will result in global seed node quorum loss. The value is 1.

      - EnsurePartitionQuorum - Indicates that there is some partition for which if we bring down the replica on the node, it will result in quorum loss for that partition. The value is 2.

      - WaitForPrimaryPlacement - Indicates that there is some replica on the node that was moved out of this node due to upgrade. Service Fabric is now waiting for the primary to be moved back to this node. The value is 3.

      - WaitForPrimarySwap - Indicates that Service Fabric is waiting for a primary replica to be moved out of the node before starting upgrade on that node. The value is 4.

      - WaitForReconfiguration - Indicates that there is some replica on the node that is involved in a reconfiguration. Service Fabric is waiting for the reconfiguration to be complete before staring upgrade on that node. The value is 5.

      - WaitForInbuildReplica - Indicates that there is either a replica on the node that is going through copy, or there is a primary replica on the node that is copying data to some other replica. In both cases, bringing down the replica on the node due to upgrade will abort the copy. The value is 6.

      - EnsureAvailability - Indicates that there is either a stateless service partition on the node having exactly one instance, or there is a primary replica on the node for which the partition is quorum loss. In both cases, bringing down the replicas due to upgrade will result in loss of availability. The value is 7.
    types:
    - uid: WaitForPrimaryPlacement
    typesTitle: string
    name: Kind
  - description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition id is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the ids of its partitions would be different.
    types:
    - uid: string
    name: PartitionId
- name: WaitForPrimarySwapSafetyCheck
  description: Safety check that waits for the primary replica to be moved out of the node before starting an upgrade to ensure the availability of the primary replica for the partition.
  kind: object
  properties:
  - description: >
      The kind of safety check performed by service fabric before continuing with the operations. These checks ensure the availability of the service and the reliability of the state. Following are the kinds of safety checks.


      - Invalid - Indicates that the upgrade safety check kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - EnsureSeedNodeQuorum - Indicates that if we bring down the node then this will result in global seed node quorum loss. The value is 1.

      - EnsurePartitionQuorum - Indicates that there is some partition for which if we bring down the replica on the node, it will result in quorum loss for that partition. The value is 2.

      - WaitForPrimaryPlacement - Indicates that there is some replica on the node that was moved out of this node due to upgrade. Service Fabric is now waiting for the primary to be moved back to this node. The value is 3.

      - WaitForPrimarySwap - Indicates that Service Fabric is waiting for a primary replica to be moved out of the node before starting upgrade on that node. The value is 4.

      - WaitForReconfiguration - Indicates that there is some replica on the node that is involved in a reconfiguration. Service Fabric is waiting for the reconfiguration to be complete before staring upgrade on that node. The value is 5.

      - WaitForInbuildReplica - Indicates that there is either a replica on the node that is going through copy, or there is a primary replica on the node that is copying data to some other replica. In both cases, bringing down the replica on the node due to upgrade will abort the copy. The value is 6.

      - EnsureAvailability - Indicates that there is either a stateless service partition on the node having exactly one instance, or there is a primary replica on the node for which the partition is quorum loss. In both cases, bringing down the replicas due to upgrade will result in loss of availability. The value is 7.
    types:
    - uid: WaitForPrimarySwap
    typesTitle: string
    name: Kind
  - description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition id is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the ids of its partitions would be different.
    types:
    - uid: string
    name: PartitionId
- name: WaitForReconfigurationSafetyCheck
  description: Safety check that waits for the current reconfiguration of the partition to be completed before starting an upgrade.
  kind: object
  properties:
  - description: >
      The kind of safety check performed by service fabric before continuing with the operations. These checks ensure the availability of the service and the reliability of the state. Following are the kinds of safety checks.


      - Invalid - Indicates that the upgrade safety check kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

      - EnsureSeedNodeQuorum - Indicates that if we bring down the node then this will result in global seed node quorum loss. The value is 1.

      - EnsurePartitionQuorum - Indicates that there is some partition for which if we bring down the replica on the node, it will result in quorum loss for that partition. The value is 2.

      - WaitForPrimaryPlacement - Indicates that there is some replica on the node that was moved out of this node due to upgrade. Service Fabric is now waiting for the primary to be moved back to this node. The value is 3.

      - WaitForPrimarySwap - Indicates that Service Fabric is waiting for a primary replica to be moved out of the node before starting upgrade on that node. The value is 4.

      - WaitForReconfiguration - Indicates that there is some replica on the node that is involved in a reconfiguration. Service Fabric is waiting for the reconfiguration to be complete before staring upgrade on that node. The value is 5.

      - WaitForInbuildReplica - Indicates that there is either a replica on the node that is going through copy, or there is a primary replica on the node that is copying data to some other replica. In both cases, bringing down the replica on the node due to upgrade will abort the copy. The value is 6.

      - EnsureAvailability - Indicates that there is either a stateless service partition on the node having exactly one instance, or there is a primary replica on the node for which the partition is quorum loss. In both cases, bringing down the replicas due to upgrade will result in loss of availability. The value is 7.
    types:
    - uid: WaitForReconfiguration
    typesTitle: string
    name: Kind
  - description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition id is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the ids of its partitions would be different.
    types:
    - uid: string
    name: PartitionId
- name: SafetyCheckKind
  description: >
    The kind of safety check performed by service fabric before continuing with the operations. These checks ensure the availability of the service and the reliability of the state. Following are the kinds of safety checks.


    - Invalid - Indicates that the upgrade safety check kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.

    - EnsureSeedNodeQuorum - Indicates that if we bring down the node then this will result in global seed node quorum loss. The value is 1.

    - EnsurePartitionQuorum - Indicates that there is some partition for which if we bring down the replica on the node, it will result in quorum loss for that partition. The value is 2.

    - WaitForPrimaryPlacement - Indicates that there is some replica on the node that was moved out of this node due to upgrade. Service Fabric is now waiting for the primary to be moved back to this node. The value is 3.

    - WaitForPrimarySwap - Indicates that Service Fabric is waiting for a primary replica to be moved out of the node before starting upgrade on that node. The value is 4.

    - WaitForReconfiguration - Indicates that there is some replica on the node that is involved in a reconfiguration. Service Fabric is waiting for the reconfiguration to be complete before staring upgrade on that node. The value is 5.

    - WaitForInbuildReplica - Indicates that there is either a replica on the node that is going through copy, or there is a primary replica on the node that is copying data to some other replica. In both cases, bringing down the replica on the node due to upgrade will abort the copy. The value is 6.

    - EnsureAvailability - Indicates that there is either a stateless service partition on the node having exactly one instance, or there is a primary replica on the node for which the partition is quorum loss. In both cases, bringing down the replicas due to upgrade will result in loss of availability. The value is 7.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Invalid
  - types:
    - uid: string
    name: EnsureSeedNodeQuorum
  - types:
    - uid: string
    name: EnsurePartitionQuorum
  - types:
    - uid: string
    name: WaitForPrimaryPlacement
  - types:
    - uid: string
    name: WaitForPrimarySwap
  - types:
    - uid: string
    name: WaitForReconfiguration
  - types:
    - uid: string
    name: WaitForInbuildReplica
  - types:
    - uid: string
    name: EnsureAvailability
examples: []
security: []
name: GetClusterUpgradeProgress
uid: localhost:19080.servicefabric.getclusterupgradeprogress.getclusterupgradeprogress

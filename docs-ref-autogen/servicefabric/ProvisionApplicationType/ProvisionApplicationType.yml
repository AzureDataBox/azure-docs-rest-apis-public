### YamlMime:RESTOperation
uid: localhost:19080.servicefabric.provisionapplicationtype.provisionapplicationtype
name: Provision Application Type
service: Service Fabric
groupName: Provision Application Type
apiVersion: 6.2.0.9
summary: "Provisions or registers a Service Fabric application type with the cluster using the '.sfpkg' package in the external store or using the application package in the image store.  \nProvisions a Service Fabric application type with the cluster. The provision is required before any new applications can be instantiated.\nThe provision operation can be performed either on the application package specified by the relativePathInImageStore, or by using the URI of the external '.sfpkg'."
produces:
- application/json
paths:
- content: POST http://localhost:19080/ApplicationTypes/$/Provision?api-version=6.2.0.9
- content: POST http://localhost:19080/ApplicationTypes/$/Provision?api-version=6.2.0.9&timeout={timeout}
  isOptional: true
uriParameters:
- name: api-version
  in: query
  isRequired: true
  description: >-
    The version of the API. This parameter is required and its value must be '6.2'.


    Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.


    Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
  types:
  - uid: ApiVersion_6-2_RequiredQueryParam
- name: timeout
  in: query
  description: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
  types:
  - uid: integer
  format: int64
responses:
- name: 200 OK
  description: A successful provision will return 200 status code.
- name: 202 Accepted
  description: A 202 status code indicates the operation was accepted and the provision operation has been initiated.
- name: Other Status Codes
  description: The detailed error response.
  types:
  - uid: FabricError
requestBody:
- name: ProvisionApplicationTypeDescription
  description: Describes the operation to register or provision an application type using an application package uploaded to the Service Fabric image store.
  parameters:
  - name: Kind
    in: body
    isRequired: true
    description: The kind of application type registration or provision requested. The application package can be registered or provisioned either from the image store or from an external store. Following are the kinds of the application type provision.
    types:
    - uid: ImageStorePath
    typesTitle: string
  - name: Async
    in: body
    isRequired: true
    description: Indicates whether or not provisioning should occur asynchronously. When set to true, the provision operation returns when the request is accepted by the system, and the provision operation continues without any timeout limit. The default value is false. For large application packages, we recommend setting the value to true.
    types:
    - uid: boolean
  - name: ApplicationTypeBuildPath
    in: body
    description: The relative path for the application package in the image store specified during the prior upload operation.
    types:
    - uid: string
  - name: ApplicationPackageCleanupPolicy
    in: body
    description: The kind of action that needs to be taken for cleaning up the application package after successful provision.
    types:
    - uid: ApplicationPackageCleanupPolicy
- name: ExternalStoreProvisionApplicationTypeDescription
  description: Describes the operation to register or provision an application type using an application package from an external store instead of a package uploaded to the Service Fabric image store.
  parameters:
  - name: Kind
    in: body
    isRequired: true
    description: The kind of application type registration or provision requested. The application package can be registered or provisioned either from the image store or from an external store. Following are the kinds of the application type provision.
    types:
    - uid: ExternalStore
    typesTitle: string
  - name: Async
    in: body
    isRequired: true
    description: Indicates whether or not provisioning should occur asynchronously. When set to true, the provision operation returns when the request is accepted by the system, and the provision operation continues without any timeout limit. The default value is false. For large application packages, we recommend setting the value to true.
    types:
    - uid: boolean
  - name: ApplicationPackageDownloadUri
    in: body
    description: The path to the '.sfpkg' application package from where the application package can be downloaded using HTTP or HTTPS protocols. The application package can be stored in an external store that provides GET operation to download the file. Supported protocols are HTTP and HTTPS, and the path must allow READ access.
    types:
    - uid: string
  - name: ApplicationTypeName
    in: body
    description: The application type name represents the name of the application type found in the application manifest.
    types:
    - uid: string
  - name: ApplicationTypeVersion
    in: body
    description: The application type version represents the version of the application type found in the application manifest.
    types:
    - uid: string
requestHeader: []
definitions:
- name: ProvisionApplicationTypeDescription
  description: Describes the operation to register or provision an application type using an application package uploaded to the Service Fabric image store.
  kind: object
  properties:
  - name: Kind
    description: The kind of application type registration or provision requested. The application package can be registered or provisioned either from the image store or from an external store. Following are the kinds of the application type provision.
    types:
    - uid: ImageStorePath
    typesTitle: string
  - name: Async
    description: Indicates whether or not provisioning should occur asynchronously. When set to true, the provision operation returns when the request is accepted by the system, and the provision operation continues without any timeout limit. The default value is false. For large application packages, we recommend setting the value to true.
    types:
    - uid: boolean
  - name: ApplicationTypeBuildPath
    description: The relative path for the application package in the image store specified during the prior upload operation.
    types:
    - uid: string
  - name: ApplicationPackageCleanupPolicy
    description: The kind of action that needs to be taken for cleaning up the application package after successful provision.
    types:
    - uid: ApplicationPackageCleanupPolicy
- name: ExternalStoreProvisionApplicationTypeDescription
  description: Describes the operation to register or provision an application type using an application package from an external store instead of a package uploaded to the Service Fabric image store.
  kind: object
  properties:
  - name: Kind
    description: The kind of application type registration or provision requested. The application package can be registered or provisioned either from the image store or from an external store. Following are the kinds of the application type provision.
    types:
    - uid: ExternalStore
    typesTitle: string
  - name: Async
    description: Indicates whether or not provisioning should occur asynchronously. When set to true, the provision operation returns when the request is accepted by the system, and the provision operation continues without any timeout limit. The default value is false. For large application packages, we recommend setting the value to true.
    types:
    - uid: boolean
  - name: ApplicationPackageDownloadUri
    description: The path to the '.sfpkg' application package from where the application package can be downloaded using HTTP or HTTPS protocols. The application package can be stored in an external store that provides GET operation to download the file. Supported protocols are HTTP and HTTPS, and the path must allow READ access.
    types:
    - uid: string
  - name: ApplicationTypeName
    description: The application type name represents the name of the application type found in the application manifest.
    types:
    - uid: string
  - name: ApplicationTypeVersion
    description: The application type version represents the version of the application type found in the application manifest.
    types:
    - uid: string
- name: ApiVersion_6-2_RequiredQueryParam
  description: >-
    The version of the API. This parameter is required and its value must be '6.2'.


    Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.


    Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
  kind: enum
  properties:
  - name: "6.2"
    description: The 6.2 version of the API.
    types:
    - uid: string
- name: FabricError
  description: The REST API operations for Service Fabric return standard HTTP status codes. This type defines the additional information returned from the Service Fabric API operations that are not successful.
  kind: object
  properties:
  - name: Error
    description: Error object containing error code and error message.
    types:
    - uid: FabricErrorError
- name: ProvisionApplicationTypeKind
  description: The kind of application type registration or provision requested. The application package can be registered or provisioned either from the image store or from an external store. Following are the kinds of the application type provision.
  kind: enum
  properties:
  - name: Invalid
    description: Indicates that the provision kind is invalid. This value is default and should not be used. The value is zero.
    types:
    - uid: string
  - name: ImageStorePath
    description: Indicates that the provision is for a package that was previously uploaded to the image store. The value is 1.
    types:
    - uid: string
  - name: ExternalStore
    description: Indicates that the provision is for an application package that was previously uploaded to an external store. The application package ends with the extension *.sfpkg. The value is 2.
    types:
    - uid: string
- name: ApplicationPackageCleanupPolicy
  description: The kind of action that needs to be taken for cleaning up the application package after successful provision.
  kind: enum
  properties:
  - name: Invalid
    description: Indicates that the application package cleanup policy is invalid. This value is default. The value is zero.
    types:
    - uid: string
  - name: Default
    description: Indicates that the cleanup policy of application packages is based on the cluster setting "CleanupApplicationPackageOnProvisionSuccess." The value is 1.
    types:
    - uid: string
  - name: Automatic
    description: Indicates that the service fabric runtime determines when to do the application package cleanup. By default, cleanup is done on successful provision. The value is 2.
    types:
    - uid: string
  - name: Manual
    description: Indicates that the user has to explicitly clean up the application package. The value is 3.
    types:
    - uid: string
- name: FabricErrorError
  description: Error object containing error code and error message.
  kind: object
  properties:
  - name: Code
    description: >-
      Defines the fabric error codes that be returned as part of the error object in response to Service Fabric API operations that are not successful. Following are the error code values that can be returned for a specific HTTP status code.

        - Possible values of the error code for HTTP status code 400 (Bad Request)
          - "FABRIC_E_INVALID_PARTITION_KEY"
          - "FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR"
          - "FABRIC_E_INVALID_ADDRESS"
          - "FABRIC_E_APPLICATION_NOT_UPGRADING"
          - "FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR"
          - "FABRIC_E_FABRIC_NOT_UPGRADING"
          - "FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR"
          - "FABRIC_E_INVALID_CONFIGURATION"
          - "FABRIC_E_INVALID_NAME_URI"
          - "FABRIC_E_PATH_TOO_LONG"
          - "FABRIC_E_KEY_TOO_LARGE"
          - "FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED"
          - "FABRIC_E_INVALID_ATOMIC_GROUP"
          - "FABRIC_E_VALUE_EMPTY"
          - "FABRIC_E_BACKUP_IS_ENABLED"
          - "FABRIC_E_RESTORE_SOURCE_TARGET_PARTITION_MISMATCH"
          - "FABRIC_E_INVALID_FOR_STATELESS_SERVICES"
          - "FABRIC_E_INVALID_SERVICE_SCALING_POLICY"
          - "E_INVALIDARG"

        - Possible values of the error code for HTTP status code 404 (Not Found)
          - "FABRIC_E_NODE_NOT_FOUND"
          - "FABRIC_E_APPLICATION_TYPE_NOT_FOUND"
          - "FABRIC_E_APPLICATION_NOT_FOUND"
          - "FABRIC_E_SERVICE_TYPE_NOT_FOUND"
          - "FABRIC_E_SERVICE_DOES_NOT_EXIST"
          - "FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND"
          - "FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND"
          - "FABRIC_E_PARTITION_NOT_FOUND"
          - "FABRIC_E_REPLICA_DOES_NOT_EXIST"
          - "FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST"
          - "FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND"
          - "FABRIC_E_DIRECTORY_NOT_FOUND"
          - "FABRIC_E_FABRIC_VERSION_NOT_FOUND"
          - "FABRIC_E_FILE_NOT_FOUND"
          - "FABRIC_E_NAME_DOES_NOT_EXIST"
          - "FABRIC_E_PROPERTY_DOES_NOT_EXIST"
          - "FABRIC_E_ENUMERATION_COMPLETED"
          - "FABRIC_E_SERVICE_MANIFEST_NOT_FOUND"
          - "FABRIC_E_KEY_NOT_FOUND"
          - "FABRIC_E_HEALTH_ENTITY_NOT_FOUND"
          - "FABRIC_E_BACKUP_NOT_ENABLED"
          - "FABRIC_E_BACKUP_POLICY_NOT_EXISTING"
          - "FABRIC_E_FAULT_ANALYSIS_SERVICE_NOT_EXISTING"

        - Possible values of the error code for HTTP status code 409 (Conflict)
          - "FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION"
          - "FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS"
          - "FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS"
          - "FABRIC_E_SERVICE_ALREADY_EXISTS"
          - "FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_TYPE_IN_USE"
          - "FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION"
          - "FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS"
          - "FABRIC_E_FABRIC_VERSION_IN_USE"
          - "FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS"
          - "FABRIC_E_NAME_ALREADY_EXISTS"
          - "FABRIC_E_NAME_NOT_EMPTY"
          - "FABRIC_E_PROPERTY_CHECK_FAILED"
          - "FABRIC_E_SERVICE_METADATA_MISMATCH"
          - "FABRIC_E_SERVICE_TYPE_MISMATCH"
          - "FABRIC_E_HEALTH_STALE_REPORT"
          - "FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED"
          - "FABRIC_E_NODE_HAS_NOT_STOPPED_YET"
          - "FABRIC_E_INSTANCE_ID_MISMATCH"
          - "FABRIC_E_BACKUP_IN_PROGRESS"
          - "FABRIC_E_RESTORE_IN_PROGRESS"
          - "FABRIC_E_BACKUP_POLICY_ALREADY_EXISTING"

        - Possible values of the error code for HTTP status code 413 (Request Entity Too Large)
          - "FABRIC_E_VALUE_TOO_LARGE"

        - Possible values of the error code for HTTP status code 500 (Internal Server Error)
          - "FABRIC_E_NODE_IS_UP"
          - "E_FAIL"

        - Possible values of the error code for HTTP status code 503 (Service Unavailable)
          - "FABRIC_E_NO_WRITE_QUORUM"
          - "FABRIC_E_NOT_PRIMARY"
          - "FABRIC_E_NOT_READY"
          - "FABRIC_E_RECONFIGURATION_PENDING"
          - "FABRIC_E_SERVICE_OFFLINE"
          - "E_ABORT"
          - "FABRIC_E_VALUE_TOO_LARGE"

        - Possible values of the error code for HTTP status code 504 (Gateway Timeout)
          - "FABRIC_E_COMMUNICATION_ERROR"
          - "FABRIC_E_OPERATION_NOT_COMPLETE"
          - "FABRIC_E_TIMEOUT"
    types:
    - uid: FabricErrorCodes
  - name: Message
    description: Error message.
    types:
    - uid: string
- name: FabricErrorCodes
  description: >-
    Defines the fabric error codes that be returned as part of the error object in response to Service Fabric API operations that are not successful. Following are the error code values that can be returned for a specific HTTP status code.

      - Possible values of the error code for HTTP status code 400 (Bad Request)
        - "FABRIC_E_INVALID_PARTITION_KEY"
        - "FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR"
        - "FABRIC_E_INVALID_ADDRESS"
        - "FABRIC_E_APPLICATION_NOT_UPGRADING"
        - "FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR"
        - "FABRIC_E_FABRIC_NOT_UPGRADING"
        - "FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR"
        - "FABRIC_E_INVALID_CONFIGURATION"
        - "FABRIC_E_INVALID_NAME_URI"
        - "FABRIC_E_PATH_TOO_LONG"
        - "FABRIC_E_KEY_TOO_LARGE"
        - "FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED"
        - "FABRIC_E_INVALID_ATOMIC_GROUP"
        - "FABRIC_E_VALUE_EMPTY"
        - "FABRIC_E_BACKUP_IS_ENABLED"
        - "FABRIC_E_RESTORE_SOURCE_TARGET_PARTITION_MISMATCH"
        - "FABRIC_E_INVALID_FOR_STATELESS_SERVICES"
        - "FABRIC_E_INVALID_SERVICE_SCALING_POLICY"
        - "E_INVALIDARG"

      - Possible values of the error code for HTTP status code 404 (Not Found)
        - "FABRIC_E_NODE_NOT_FOUND"
        - "FABRIC_E_APPLICATION_TYPE_NOT_FOUND"
        - "FABRIC_E_APPLICATION_NOT_FOUND"
        - "FABRIC_E_SERVICE_TYPE_NOT_FOUND"
        - "FABRIC_E_SERVICE_DOES_NOT_EXIST"
        - "FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND"
        - "FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND"
        - "FABRIC_E_PARTITION_NOT_FOUND"
        - "FABRIC_E_REPLICA_DOES_NOT_EXIST"
        - "FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST"
        - "FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND"
        - "FABRIC_E_DIRECTORY_NOT_FOUND"
        - "FABRIC_E_FABRIC_VERSION_NOT_FOUND"
        - "FABRIC_E_FILE_NOT_FOUND"
        - "FABRIC_E_NAME_DOES_NOT_EXIST"
        - "FABRIC_E_PROPERTY_DOES_NOT_EXIST"
        - "FABRIC_E_ENUMERATION_COMPLETED"
        - "FABRIC_E_SERVICE_MANIFEST_NOT_FOUND"
        - "FABRIC_E_KEY_NOT_FOUND"
        - "FABRIC_E_HEALTH_ENTITY_NOT_FOUND"
        - "FABRIC_E_BACKUP_NOT_ENABLED"
        - "FABRIC_E_BACKUP_POLICY_NOT_EXISTING"
        - "FABRIC_E_FAULT_ANALYSIS_SERVICE_NOT_EXISTING"

      - Possible values of the error code for HTTP status code 409 (Conflict)
        - "FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS"
        - "FABRIC_E_APPLICATION_ALREADY_EXISTS"
        - "FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION"
        - "FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS"
        - "FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS"
        - "FABRIC_E_SERVICE_ALREADY_EXISTS"
        - "FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS"
        - "FABRIC_E_APPLICATION_TYPE_IN_USE"
        - "FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION"
        - "FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS"
        - "FABRIC_E_FABRIC_VERSION_IN_USE"
        - "FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS"
        - "FABRIC_E_NAME_ALREADY_EXISTS"
        - "FABRIC_E_NAME_NOT_EMPTY"
        - "FABRIC_E_PROPERTY_CHECK_FAILED"
        - "FABRIC_E_SERVICE_METADATA_MISMATCH"
        - "FABRIC_E_SERVICE_TYPE_MISMATCH"
        - "FABRIC_E_HEALTH_STALE_REPORT"
        - "FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED"
        - "FABRIC_E_NODE_HAS_NOT_STOPPED_YET"
        - "FABRIC_E_INSTANCE_ID_MISMATCH"
        - "FABRIC_E_BACKUP_IN_PROGRESS"
        - "FABRIC_E_RESTORE_IN_PROGRESS"
        - "FABRIC_E_BACKUP_POLICY_ALREADY_EXISTING"

      - Possible values of the error code for HTTP status code 413 (Request Entity Too Large)
        - "FABRIC_E_VALUE_TOO_LARGE"

      - Possible values of the error code for HTTP status code 500 (Internal Server Error)
        - "FABRIC_E_NODE_IS_UP"
        - "E_FAIL"

      - Possible values of the error code for HTTP status code 503 (Service Unavailable)
        - "FABRIC_E_NO_WRITE_QUORUM"
        - "FABRIC_E_NOT_PRIMARY"
        - "FABRIC_E_NOT_READY"
        - "FABRIC_E_RECONFIGURATION_PENDING"
        - "FABRIC_E_SERVICE_OFFLINE"
        - "E_ABORT"
        - "FABRIC_E_VALUE_TOO_LARGE"

      - Possible values of the error code for HTTP status code 504 (Gateway Timeout)
        - "FABRIC_E_COMMUNICATION_ERROR"
        - "FABRIC_E_OPERATION_NOT_COMPLETE"
        - "FABRIC_E_TIMEOUT"
  kind: enum
  properties:
  - name: FABRIC_E_INVALID_PARTITION_KEY
    types:
    - uid: string
  - name: FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR
    types:
    - uid: string
  - name: FABRIC_E_INVALID_ADDRESS
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_NOT_UPGRADING
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_NOT_UPGRADING
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR
    types:
    - uid: string
  - name: FABRIC_E_INVALID_CONFIGURATION
    types:
    - uid: string
  - name: FABRIC_E_INVALID_NAME_URI
    types:
    - uid: string
  - name: FABRIC_E_PATH_TOO_LONG
    types:
    - uid: string
  - name: FABRIC_E_KEY_TOO_LARGE
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED
    types:
    - uid: string
  - name: FABRIC_E_INVALID_ATOMIC_GROUP
    types:
    - uid: string
  - name: FABRIC_E_VALUE_EMPTY
    types:
    - uid: string
  - name: FABRIC_E_NODE_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_TYPE_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_TYPE_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_DOES_NOT_EXIST
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_PARTITION_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_REPLICA_DOES_NOT_EXIST
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST
    types:
    - uid: string
  - name: FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_DIRECTORY_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_VERSION_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_FILE_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_NAME_DOES_NOT_EXIST
    types:
    - uid: string
  - name: FABRIC_E_PROPERTY_DOES_NOT_EXIST
    types:
    - uid: string
  - name: FABRIC_E_ENUMERATION_COMPLETED
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_MANIFEST_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_KEY_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_HEALTH_ENTITY_NOT_FOUND
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_ALREADY_EXISTS
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_ALREADY_EXISTS
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS
    types:
    - uid: string
  - name: FABRIC_E_APPLICATION_TYPE_IN_USE
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_VERSION_IN_USE
    types:
    - uid: string
  - name: FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS
    types:
    - uid: string
  - name: FABRIC_E_NAME_ALREADY_EXISTS
    types:
    - uid: string
  - name: FABRIC_E_NAME_NOT_EMPTY
    types:
    - uid: string
  - name: FABRIC_E_PROPERTY_CHECK_FAILED
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_METADATA_MISMATCH
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_TYPE_MISMATCH
    types:
    - uid: string
  - name: FABRIC_E_HEALTH_STALE_REPORT
    types:
    - uid: string
  - name: FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED
    types:
    - uid: string
  - name: FABRIC_E_NODE_HAS_NOT_STOPPED_YET
    types:
    - uid: string
  - name: FABRIC_E_INSTANCE_ID_MISMATCH
    types:
    - uid: string
  - name: FABRIC_E_VALUE_TOO_LARGE
    types:
    - uid: string
  - name: FABRIC_E_NO_WRITE_QUORUM
    types:
    - uid: string
  - name: FABRIC_E_NOT_PRIMARY
    types:
    - uid: string
  - name: FABRIC_E_NOT_READY
    types:
    - uid: string
  - name: FABRIC_E_RECONFIGURATION_PENDING
    types:
    - uid: string
  - name: FABRIC_E_SERVICE_OFFLINE
    types:
    - uid: string
  - name: E_ABORT
    types:
    - uid: string
  - name: FABRIC_E_COMMUNICATION_ERROR
    types:
    - uid: string
  - name: FABRIC_E_OPERATION_NOT_COMPLETE
    types:
    - uid: string
  - name: FABRIC_E_TIMEOUT
    types:
    - uid: string
  - name: FABRIC_E_NODE_IS_UP
    types:
    - uid: string
  - name: E_FAIL
    types:
    - uid: string
  - name: FABRIC_E_BACKUP_IS_ENABLED
    types:
    - uid: string
  - name: FABRIC_E_RESTORE_SOURCE_TARGET_PARTITION_MISMATCH
    types:
    - uid: string
  - name: FABRIC_E_INVALID_FOR_STATELESS_SERVICES
    types:
    - uid: string
  - name: FABRIC_E_BACKUP_NOT_ENABLED
    types:
    - uid: string
  - name: FABRIC_E_BACKUP_POLICY_NOT_EXISTING
    types:
    - uid: string
  - name: FABRIC_E_FAULT_ANALYSIS_SERVICE_NOT_EXISTING
    types:
    - uid: string
  - name: FABRIC_E_BACKUP_IN_PROGRESS
    types:
    - uid: string
  - name: FABRIC_E_RESTORE_IN_PROGRESS
    types:
    - uid: string
  - name: FABRIC_E_BACKUP_POLICY_ALREADY_EXISTING
    types:
    - uid: string
  - name: FABRIC_E_INVALID_SERVICE_SCALING_POLICY
    types:
    - uid: string
  - name: E_INVALIDARG
    types:
    - uid: string
examples: []
security: []

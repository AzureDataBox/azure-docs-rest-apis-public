### YamlMime:RESTOperation
uid: management.azure.com.iothub.iothubresource.delete
name: Delete
service: IoT Hub
groupName: Iot Hub Resource
apiVersion: 2017-01-19
summary: Delete an IoT hub.
consumes:
- application/json
produces:
- application/json
paths:
- content: DELETE management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}?api-version=2017-01-19
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription identifier.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group that contains the IoT hub.
  types:
  - uid: string
- name: resourceName
  in: path
  isRequired: true
  description: The name of the IoT hub to delete.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The version of the API.
  types:
  - uid: string
responses:
- name: 202 Accepted
  description: The Iot Hub resource provider always returns a 202 Accepted status code with valid Location and Retry-After headers. The resource provider also sets the Azure-AsyncOperation header with a URL that points to the operation resource for this operation. Subsequent GET attempts on the resource after a DELETE operation return a resource representation that indicates a transitional provisioning state (such as Terminating). To retrieve the status of the operation, a client can either poll the URL returned in the Location header after the Retry-After interval, get the IoT Hub service status directly, or query the operation resource.
  types:
  - uid: IotHubDescription
- name: 200 OK
  description: This is returned as a response to the status polling request for the delete operation. The body contains the resource representation that indicates a transitional provisioning state.
  types:
  - uid: IotHubDescription
- name: 204 No Content
  description: Once the long running delete operation completes successfully, a 204 No Content status code is returned when the status polling request finds the Iot hub metadata in the service and the status of the delete operation is set to a completed state.
- name: Other Status Codes
  description: After the long running delete operation completes successfully, a 404 Not Found is returned when the status polling request no longer finds the Iot hub metadata in the service.
  types:
  - uid: ErrorDetails
- name: Other Status Codes
  description: DefaultErrorResponse
  types:
  - uid: ErrorDetails
requestHeader: []
definitions:
- name: IotHubDescription
  description: The description of the IoT hub.
  kind: object
  properties:
  - name: subscriptionid
    description: "  \nThe subscription identifier."
    types:
    - uid: string
  - name: resourcegroup
    description: "  \nThe name of the resource group that contains the IoT hub. A resource group name uniquely identifies the resource group within the subscription."
    types:
    - uid: string
  - name: etag
    description: "  \nThe Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention."
    types:
    - uid: string
  - name: properties
    description: "  \nThe properties of an IoT hub."
    types:
    - uid: IotHubProperties
  - name: sku
    description: "  \nInformation about the SKU of the IoT hub."
    types:
    - uid: IotHubSkuInfo
  - name: id
    isReadyOnly: true
    description: "  \nThe resource identifier."
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: "  \nThe resource name."
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: "  \nThe resource type."
    types:
    - uid: string
  - name: location
    description: "  \nThe resource location."
    types:
    - uid: string
  - name: tags
    description: "  \nThe resource tags."
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: ErrorDetails
  description: Error details.
  kind: object
  properties:
  - name: Code
    isReadyOnly: true
    description: "  \nThe error code."
    types:
    - uid: string
  - name: HttpStatusCode
    isReadyOnly: true
    description: "  \nThe HTTP status code."
    types:
    - uid: string
  - name: Message
    isReadyOnly: true
    description: "  \nThe error message."
    types:
    - uid: string
  - name: Details
    isReadyOnly: true
    description: "  \nThe error details."
    types:
    - uid: string
- name: IotHubProperties
  description: The properties of an IoT hub.
  kind: object
  properties:
  - name: authorizationPolicies
    description: "  \nThe properties of an IoT hub shared access policy."
    types:
    - uid: SharedAccessSignatureAuthorizationRule
      isArray: true
  - name: ipFilterRules
    description: "  \nThe IP filter rules for the IoT hub."
    types:
    - uid: IpFilterRule
      isArray: true
  - name: provisioningState
    isReadyOnly: true
    description: "  \nThe provisioning state."
    types:
    - uid: string
  - name: hostName
    isReadyOnly: true
    description: "  \nThe name of the host."
    types:
    - uid: string
  - name: eventHubEndpoints
    description: "  \nThe Event Hub-compatible endpoint properties. The possible keys to this dictionary are events and operationsMonitoringEvents. Both of these keys have to be present in the dictionary while making create or update calls for the IoT hub."
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: EventHubProperties
  - name: routing
    description: "  \nThe routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging"
    types:
    - uid: RoutingProperties
  - name: storageEndpoints
    description: "  \nThe list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown."
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: StorageEndpointProperties
  - name: messagingEndpoints
    description: "  \nThe messaging endpoint properties for the file upload notification queue."
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: MessagingEndpointProperties
  - name: enableFileUploadNotifications
    description: "  \nIf True, file upload notifications are enabled."
    types:
    - uid: boolean
  - name: cloudToDevice
    description: "  \nThe IoT hub cloud-to-device messaging properties."
    types:
    - uid: CloudToDeviceProperties
  - name: comments
    description: "  \nComments."
    types:
    - uid: string
  - name: operationsMonitoringProperties
    description: "  \nThe operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods."
    types:
    - uid: OperationsMonitoringProperties
  - name: features
    description: "  \nThe capabilities and features enabled for the IoT hub."
    types:
    - uid: Capabilities
- name: IotHubSkuInfo
  description: Information about the SKU of the IoT hub.
  kind: object
  properties:
  - name: name
    description: "  \nThe name of the SKU."
    types:
    - uid: IotHubSku
  - name: tier
    isReadyOnly: true
    description: "  \nThe billing tier for the IoT hub."
    types:
    - uid: IotHubSkuTier
  - name: capacity
    description: "  \nThe number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits."
    types:
    - uid: integer
- name: SharedAccessSignatureAuthorizationRule
  description: The properties of an IoT hub shared access policy.
  kind: object
  properties:
  - name: keyName
    description: "  \nThe name of the shared access policy."
    types:
    - uid: string
  - name: primaryKey
    description: "  \nThe primary key."
    types:
    - uid: string
  - name: secondaryKey
    description: "  \nThe secondary key."
    types:
    - uid: string
  - name: rights
    description: "  \nThe permissions assigned to the shared access policy."
    types:
    - uid: AccessRights
- name: IpFilterRule
  description: The IP filter rules.
  kind: object
  properties:
  - name: filterName
    description: "  \nThe name of the IP filter rule."
    types:
    - uid: string
  - name: action
    description: "  \nThe desired action for requests captured by this rule."
    types:
    - uid: IpFilterActionType
  - name: ipMask
    description: "  \nA string that contains the IP address range in CIDR notation for the rule."
    types:
    - uid: string
- name: EventHubEndpoints
  description: The Event Hub-compatible endpoint properties. The possible keys to this dictionary are events and operationsMonitoringEvents. Both of these keys have to be present in the dictionary while making create or update calls for the IoT hub.
  kind: object
  properties:
  - name: ''
    description: "  \nThe properties of the provisioned Event Hub-compatible endpoint used by the IoT hub."
    types:
    - uid: EventHubProperties
- name: RoutingProperties
  description: 'The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging'
  kind: object
  properties:
  - name: endpoints
    description: "  \nThe properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs."
    types:
    - uid: RoutingEndpoints
  - name: routes
    description: "  \nThe properties of a routing rule that your IoT hub uses to route messages to endpoints."
    types:
    - uid: RouteProperties
      isArray: true
  - name: fallbackRoute
    description: "  \nThe properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not set, the messages which do not meet any of the conditions specified in the 'routes' section get routed to the built-in eventhub endpoint."
    types:
    - uid: FallbackRouteProperties
- name: StorageEndpoints
  description: The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.
  kind: object
  properties:
  - name: ''
    description: "  \nThe properties of the Azure Storage endpoint for file upload."
    types:
    - uid: StorageEndpointProperties
- name: MessagingEndpoints
  description: The messaging endpoint properties for the file upload notification queue.
  kind: object
  properties:
  - name: ''
    description: "  \nThe properties of the messaging endpoints used by this IoT hub."
    types:
    - uid: MessagingEndpointProperties
- name: CloudToDeviceProperties
  description: The IoT hub cloud-to-device messaging properties.
  kind: object
  properties:
  - name: maxDeliveryCount
    description: "  \nThe max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages."
    types:
    - uid: integer
  - name: defaultTtlAsIso8601
    description: "  \nThe default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages."
    types:
    - uid: string
  - name: feedback
    description: "  \nThe properties of the feedback queue for cloud-to-device messages."
    types:
    - uid: FeedbackProperties
- name: OperationsMonitoringProperties
  description: The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
  kind: object
  properties:
  - name: events
    description: "  "
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: Capabilities
  description: The capabilities and features enabled for the IoT hub.
  kind: enum
  properties:
  - name: None
    types:
    - uid: string
  - name: DeviceManagement
    types:
    - uid: string
- name: IotHubSku
  description: The name of the SKU.
  kind: enum
  properties:
  - name: F1
    types:
    - uid: string
  - name: S1
    types:
    - uid: string
  - name: S2
    types:
    - uid: string
  - name: S3
    types:
    - uid: string
- name: IotHubSkuTier
  description: The billing tier for the IoT hub.
  kind: enum
  properties:
  - name: Free
    types:
    - uid: string
  - name: Standard
    types:
    - uid: string
- name: AccessRights
  description: The permissions assigned to the shared access policy.
  kind: enum
  properties:
  - name: RegistryRead
    types:
    - uid: string
  - name: RegistryWrite
    types:
    - uid: string
  - name: ServiceConnect
    types:
    - uid: string
  - name: DeviceConnect
    types:
    - uid: string
  - name: RegistryRead, RegistryWrite
    types:
    - uid: string
  - name: RegistryRead, ServiceConnect
    types:
    - uid: string
  - name: RegistryRead, DeviceConnect
    types:
    - uid: string
  - name: RegistryWrite, ServiceConnect
    types:
    - uid: string
  - name: RegistryWrite, DeviceConnect
    types:
    - uid: string
  - name: ServiceConnect, DeviceConnect
    types:
    - uid: string
  - name: RegistryRead, RegistryWrite, ServiceConnect
    types:
    - uid: string
  - name: RegistryRead, RegistryWrite, DeviceConnect
    types:
    - uid: string
  - name: RegistryRead, ServiceConnect, DeviceConnect
    types:
    - uid: string
  - name: RegistryWrite, ServiceConnect, DeviceConnect
    types:
    - uid: string
  - name: RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect
    types:
    - uid: string
- name: IpFilterActionType
  description: The desired action for requests captured by this rule.
  kind: enum
  properties:
  - name: Accept
    types:
    - uid: string
  - name: Reject
    types:
    - uid: string
- name: EventHubProperties
  description: The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.
  kind: object
  properties:
  - name: retentionTimeInDays
    description: "  \nThe retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages"
    types:
    - uid: integer
  - name: partitionCount
    description: "  \nThe number of paritions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages."
    types:
    - uid: integer
  - name: partitionIds
    isReadyOnly: true
    description: "  "
    types:
    - uid: string
      isArray: true
  - name: path
    isReadyOnly: true
    description: "  \nThe Event Hub-compatible name."
    types:
    - uid: string
  - name: endpoint
    isReadyOnly: true
    description: "  \nThe Event Hub-compatible endpoint."
    types:
    - uid: string
- name: RoutingEndpoints
  description: The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
  kind: object
  properties:
  - name: serviceBusQueues
    description: "  \nThe properties related to service bus queue endpoint types."
    types:
    - uid: RoutingServiceBusQueueEndpointProperties
      isArray: true
  - name: serviceBusTopics
    description: "  \nThe properties related to service bus topic endpoint types."
    types:
    - uid: RoutingServiceBusTopicEndpointProperties
      isArray: true
  - name: eventHubs
    description: "  \nThe properties related to an event hub endpoint."
    types:
    - uid: RoutingEventHubProperties
      isArray: true
- name: RouteProperties
  description: The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.
  kind: object
  properties:
  - name: name
    description: "  \nThe name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters,  and must be unique."
    types:
    - uid: string
  - name: source
    description: "  \nThe source that the routing rule is to be applied to, such as DeviceMessages."
    types:
    - uid: RoutingSource
  - name: condition
    description: "  \nThe condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language"
    types:
    - uid: string
  - name: endpointNames
    description: "  "
    types:
    - uid: string
      isArray: true
  - name: isEnabled
    description: "  \nUsed to specify whether a route is enabled."
    types:
    - uid: boolean
- name: FallbackRouteProperties
  description: The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not set, the messages which do not meet any of the conditions specified in the 'routes' section get routed to the built-in eventhub endpoint.
  kind: object
  properties:
  - name: source
    description: "  \nThe source to which the routing rule is to be applied to. e.g. DeviceMessages"
    types:
    - uid: RoutingSource
  - name: condition
    description: "  \nThe condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language"
    types:
    - uid: string
  - name: endpointNames
    description: "  "
    types:
    - uid: string
      isArray: true
  - name: isEnabled
    description: "  \nUsed to specify whether the fallback route is enabled or not."
    types:
    - uid: boolean
- name: StorageEndpointProperties
  description: The properties of the Azure Storage endpoint for file upload.
  kind: object
  properties:
  - name: sasTtlAsIso8601
    description: "  \nThe period of time for which the the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options."
    types:
    - uid: string
  - name: connectionString
    description: "  \nThe connection string for the Azure Storage account to which files are uploaded."
    types:
    - uid: string
  - name: containerName
    description: "  \nThe name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified."
    types:
    - uid: string
- name: MessagingEndpointProperties
  description: The properties of the messaging endpoints used by this IoT hub.
  kind: object
  properties:
  - name: lockDurationAsIso8601
    description: "  \nThe lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload."
    types:
    - uid: string
  - name: ttlAsIso8601
    description: "  \nThe period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload."
    types:
    - uid: string
  - name: maxDeliveryCount
    description: "  \nThe number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload."
    types:
    - uid: integer
- name: FeedbackProperties
  description: The properties of the feedback queue for cloud-to-device messages.
  kind: object
  properties:
  - name: lockDurationAsIso8601
    description: "  \nThe lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages."
    types:
    - uid: string
  - name: ttlAsIso8601
    description: "  \nThe period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages."
    types:
    - uid: string
  - name: maxDeliveryCount
    description: "  \nThe number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages."
    types:
    - uid: integer
- name: RoutingServiceBusQueueEndpointProperties
  description: The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.
  kind: object
  properties:
  - name: connectionString
    description: "  \nThe connection string of the service bus queue endpoint."
    types:
    - uid: string
  - name: name
    description: "  \nThe name of the service bus queue endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved;  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name."
    types:
    - uid: string
  - name: subscriptionId
    description: "  \nThe subscription identifier of the service bus queue endpoint."
    types:
    - uid: string
  - name: resourceGroup
    description: "  \nThe name of the resource group of the service bus queue endpoint."
    types:
    - uid: string
- name: RoutingServiceBusTopicEndpointProperties
  description: The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.
  kind: object
  properties:
  - name: connectionString
    description: "  \nThe connection string of the service bus topic endpoint."
    types:
    - uid: string
  - name: name
    description: "  \nThe name of the service bus topic endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved;  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name."
    types:
    - uid: string
  - name: subscriptionId
    description: "  \nThe subscription identifier of the service bus topic endpoint."
    types:
    - uid: string
  - name: resourceGroup
    description: "  \nThe name of the resource group of the service bus topic endpoint."
    types:
    - uid: string
- name: RoutingEventHubProperties
  description: The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.
  kind: object
  properties:
  - name: connectionString
    description: "  \nThe connection string of the event hub endpoint. "
    types:
    - uid: string
  - name: name
    description: "  \nThe name of the event hub endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved;  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types."
    types:
    - uid: string
  - name: subscriptionId
    description: "  \nThe subscription identifier of the event hub endpoint."
    types:
    - uid: string
  - name: resourceGroup
    description: "  \nThe name of the resource group of the event hub endpoint."
    types:
    - uid: string
- name: RoutingSource
  description: The source that the routing rule is to be applied to, such as DeviceMessages.
  kind: enum
  properties:
  - name: DeviceMessages
    types:
    - uid: string
  - name: TwinChangeEvents
    types:
    - uid: string
  - name: DeviceLifecycleEvents
    types:
    - uid: string
  - name: DeviceJobLifecycleEvents
    types:
    - uid: string
examples: []
security: []

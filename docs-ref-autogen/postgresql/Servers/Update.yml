### YamlMime:RESTOperation
uid: management.azure.com.postgresql.servers.update
name: Update
service: PostgreSQL
groupName: Servers
apiVersion: 2017-04-30-preview
summary: Updates an existing server. The request body can contain one to many of the properties present in the normal server definition.
consumes:
- application/json
produces:
- application/json
paths:
- content: PATCH https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}?api-version=2017-04-30-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription ID that identifies an Azure subscription.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
  types:
  - uid: string
- name: serverName
  in: path
  isRequired: true
  description: The name of the server.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The API version to use for the request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: Server
- name: 202 Accepted
  description: Accepted
requestBody:
- parameters:
  - name: sku
    in: body
    description: "  \nThe SKU (pricing tier) of the server."
    types:
    - uid: Sku
  - name: tags
    in: body
    description: "  \nApplication-specific metadata in the form of key-value pairs."
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.storageMB
    in: body
    description: "  \nThe max storage allowed for a server."
    types:
    - uid: integer
  - name: properties.administratorLoginPassword
    in: body
    description: "  \nThe password of the administrator login."
    types:
    - uid: string
  - name: properties.version
    in: body
    description: "  \nThe version of a server."
    types:
    - uid: ServerVersion
  - name: properties.sslEnforcement
    in: body
    description: "  \nEnable ssl enforcement or not when connect to server."
    types:
    - uid: SslEnforcementEnum
requestHeader: []
definitions:
- name: Sku
  description: Billing information related properties of a server.
  kind: object
  properties:
  - name: name
    description: "  \nThe name of the sku, typically, a letter + Number code, e.g. P3."
    types:
    - uid: string
  - name: tier
    description: "  \nThe tier of the particular SKU, e.g. Basic."
    types:
    - uid: SkuTier
  - name: capacity
    description: "  \nThe scale up/out capacity, representing server's compute units."
    types:
    - uid: integer
  - name: size
    description: "  \nThe size code, to be interpreted by resource as appropriate."
    types:
    - uid: string
  - name: family
    description: "  \nThe family of hardware."
    types:
    - uid: string
- name: Server
  description: Represents a server.
  kind: object
  properties:
  - name: sku
    description: "  \nThe SKU (pricing tier) of the server."
    types:
    - uid: Sku
  - name: properties.administratorLogin
    description: "  \nThe administrator's login name of a server. Can only be specified when the server is being created (and is required for creation)."
    types:
    - uid: string
  - name: properties.storageMB
    description: "  \nThe maximum storage allowed for a server."
    types:
    - uid: integer
  - name: properties.version
    description: "  \nServer version."
    types:
    - uid: ServerVersion
  - name: properties.sslEnforcement
    description: "  \nEnable ssl enforcement or not when connect to server."
    types:
    - uid: SslEnforcementEnum
  - name: properties.userVisibleState
    description: "  \nA state of a server that is visible to user."
    types:
    - uid: ServerState
  - name: properties.fullyQualifiedDomainName
    description: "  \nThe fully qualified domain name of a server."
    types:
    - uid: string
  - name: location
    description: "  \nThe location the resource resides in."
    types:
    - uid: string
  - name: tags
    description: "  \nApplication-specific metadata in the form of key-value pairs."
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: id
    isReadyOnly: true
    description: "  \nResource ID"
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: "  \nResource name."
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: "  \nResource type."
    types:
    - uid: string
- name: ServerUpdateParameters
  description: Parameters allowd to update for a server.
  kind: object
  properties:
  - name: sku
    description: "  \nThe SKU (pricing tier) of the server."
    types:
    - uid: Sku
  - name: tags
    description: "  \nApplication-specific metadata in the form of key-value pairs."
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.storageMB
    description: "  \nThe max storage allowed for a server."
    types:
    - uid: integer
  - name: properties.administratorLoginPassword
    description: "  \nThe password of the administrator login."
    types:
    - uid: string
  - name: properties.version
    description: "  \nThe version of a server."
    types:
    - uid: ServerVersion
  - name: properties.sslEnforcement
    description: "  \nEnable ssl enforcement or not when connect to server."
    types:
    - uid: SslEnforcementEnum
- name: SkuTier
  description: The tier of the particular SKU, e.g. Basic.
  kind: enum
  properties:
  - name: Basic
    types:
    - uid: string
  - name: Standard
    types:
    - uid: string
- name: ServerVersion
  description: The version of a server.
  kind: enum
  properties:
  - name: "9.5"
    types:
    - uid: string
  - name: "9.6"
    types:
    - uid: string
- name: SslEnforcementEnum
  description: Enable ssl enforcement or not when connect to server.
  kind: enum
  properties:
  - name: Enabled
    types:
    - uid: string
  - name: Disabled
    types:
    - uid: string
- name: ServerState
  description: A state of a server that is visible to user.
  kind: enum
  properties:
  - name: Ready
    types:
    - uid: string
  - name: Dropping
    types:
    - uid: string
  - name: Disabled
    types:
    - uid: string
examples:
- name: ServerUpdate
  request:
    uri: PATCH https://management.azure.com/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.DBforPostgreSQL/servers/testserver?api-version=2017-04-30-preview
    body: >-
      {
        "properties": {
          "administratorLoginPassword": "newpassword",
          "sslEnforcement": "Disabled"
        }
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.DBforPostgreSQL/servers/testserver",
        "name": "testserver",
        "type": "Microsoft.DBforPostgreSQL/servers",
        "location": "onebox",
        "sku": {
          "name": "PGSQLB100",
          "tier": "Basic",
          "capacity": 100
        },
        "tags": {
          "elasticServer": "1"
        },
        "properties": {
          "administratorLogin": "cloudsa",
          "storageMB": 1024,
          "sslEnforcement": "Disabled",
          "userVisibleState": "Ready",
          "fullyQualifiedDomainName": "testserver.test-vm1.onebox.xdb.mscds.com"
        }
      }
  - statusCode: "202"
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account

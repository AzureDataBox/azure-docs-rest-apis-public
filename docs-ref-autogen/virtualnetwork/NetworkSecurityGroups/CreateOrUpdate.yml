### YamlMime:RESTOperation
uid: management.azure.com.virtualnetworks.networksecuritygroups.createorupdate
name: Create Or Update
service: Virtual Networks
groupName: Network Security Groups
apiVersion: 2017-10-01
summary: Creates or updates a network security group in the specified resource group.
consumes:
- application/json
- text/json
produces:
- application/json
- text/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}?api-version=2017-10-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: networkSecurityGroupName
  in: path
  isRequired: true
  description: The name of the network security group.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 201 Created
  description: Create successful. The operation returns the resulting NetworkSecurityGroup resource.
  types:
  - uid: NetworkSecurityGroup
- name: 200 OK
  description: Update successful. The operation returns the resulting NetworkSecurityGroup resource.
  types:
  - uid: NetworkSecurityGroup
requestBody:
- parameters:
  - name: etag
    in: body
    description: "  \nA unique read-only string that changes whenever the resource is updated."
    types:
    - uid: string
  - name: properties.securityRules
    in: body
    description: "  \nNetwork security rule."
    types:
    - uid: SecurityRule
      isArray: true
  - name: properties.defaultSecurityRules
    in: body
    description: "  \nNetwork security rule."
    types:
    - uid: SecurityRule
      isArray: true
  - name: properties.resourceGuid
    in: body
    description: "  \nThe resource GUID property of the network security group resource."
    types:
    - uid: string
  - name: properties.provisioningState
    in: body
    description: "  \nThe provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
    types:
    - uid: string
  - name: location
    in: body
    description: "  \nResource location."
    types:
    - uid: string
  - name: tags
    in: body
    description: "  \nResource tags."
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
requestHeader: []
definitions:
- name: SecurityRule
  description: Network security rule.
  kind: object
  properties:
  - name: name
    description: "  \nThe name of the resource that is unique within a resource group. This name can be used to access the resource."
    types:
    - uid: string
  - name: etag
    description: "  \nA unique read-only string that changes whenever the resource is updated."
    types:
    - uid: string
  - name: properties.description
    description: "  \nA description for this rule. Restricted to 140 chars."
    types:
    - uid: string
  - name: properties.protocol
    description: "  \nNetwork protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'."
    types:
    - uid: SecurityRuleProtocol
  - name: properties.sourcePortRange
    description: "  \nThe source port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports."
    types:
    - uid: string
  - name: properties.destinationPortRange
    description: "  \nThe destination port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports."
    types:
    - uid: string
  - name: properties.sourceAddressPrefix
    description: "  \nThe CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. "
    types:
    - uid: string
  - name: properties.sourceAddressPrefixes
    description: "  "
    types:
    - uid: string
      isArray: true
  - name: properties.sourceApplicationSecurityGroups
    description: "  \nAn application security group in a resource group."
    types:
    - uid: ApplicationSecurityGroup
      isArray: true
  - name: properties.destinationAddressPrefix
    description: "  \nThe destination address prefix. CIDR or destination IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
    types:
    - uid: string
  - name: properties.destinationAddressPrefixes
    description: "  "
    types:
    - uid: string
      isArray: true
  - name: properties.destinationApplicationSecurityGroups
    description: "  \nAn application security group in a resource group."
    types:
    - uid: ApplicationSecurityGroup
      isArray: true
  - name: properties.sourcePortRanges
    description: "  \nThe source port."
    types:
    - uid: string
      isArray: true
  - name: properties.destinationPortRanges
    description: "  \nThe destination port."
    types:
    - uid: string
      isArray: true
  - name: properties.access
    description: "  \nThe network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'."
    types:
    - uid: SecurityRuleAccess
  - name: properties.priority
    description: "  \nThe priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule."
    types:
    - uid: integer
  - name: properties.direction
    description: "  \nThe direction of the rule. The direction specifies if rule will be evaluated on incoming or outcoming traffic. Possible values are: 'Inbound' and 'Outbound'."
    types:
    - uid: SecurityRuleDirection
  - name: properties.provisioningState
    description: "  \nThe provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: "  \nResource ID"
    types:
    - uid: string
- name: SubResource
  description: A collection of references to network interfaces.
  kind: object
  properties:
  - name: id
    description: "  \nResource ID."
    types:
    - uid: string
- name: NetworkSecurityGroup
  description: NetworkSecurityGroup resource.
  kind: object
  properties:
  - name: etag
    description: "  \nA unique read-only string that changes whenever the resource is updated."
    types:
    - uid: string
  - name: properties.securityRules
    description: "  \nNetwork security rule."
    types:
    - uid: SecurityRule
      isArray: true
  - name: properties.defaultSecurityRules
    description: "  \nNetwork security rule."
    types:
    - uid: SecurityRule
      isArray: true
  - name: properties.networkInterfaces
    isReadyOnly: true
    description: "  \nReference to another subresource."
    types:
    - uid: SubResource
      isArray: true
  - name: properties.subnets
    isReadyOnly: true
    description: "  \nReference to another subresource."
    types:
    - uid: SubResource
      isArray: true
  - name: properties.resourceGuid
    description: "  \nThe resource GUID property of the network security group resource."
    types:
    - uid: string
  - name: properties.provisioningState
    description: "  \nThe provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: "  \nResource ID."
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: "  \nResource name."
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: "  \nResource type."
    types:
    - uid: string
  - name: location
    description: "  \nResource location."
    types:
    - uid: string
  - name: tags
    description: "  \nResource tags."
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: SecurityRuleProtocol
  description: Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
  kind: enum
  properties:
  - name: Tcp
    types:
    - uid: string
  - name: Udp
    types:
    - uid: string
  - name: '*'
    types:
    - uid: string
- name: ApplicationSecurityGroup
  description: The application security group specified as source.
  kind: object
  properties:
  - name: etag
    isReadyOnly: true
    description: "  \nA unique read-only string that changes whenever the resource is updated."
    types:
    - uid: string
  - name: properties.resourceGuid
    isReadyOnly: true
    description: "  \nThe resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups."
    types:
    - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: "  \nThe provisioning state of the application security group resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'."
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: "  \nResource ID."
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: "  \nResource name."
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: "  \nResource type."
    types:
    - uid: string
  - name: location
    description: "  \nResource location."
    types:
    - uid: string
  - name: tags
    description: "  \nResource tags."
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: SecurityRuleAccess
  description: "The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'."
  kind: enum
  properties:
  - name: Allow
    types:
    - uid: string
  - name: Deny
    types:
    - uid: string
- name: SecurityRuleDirection
  description: "The direction of the rule. The direction specifies if rule will be evaluated on incoming or outcoming traffic. Possible values are: 'Inbound' and 'Outbound'."
  kind: enum
  properties:
  - name: Inbound
    types:
    - uid: string
  - name: Outbound
    types:
    - uid: string
examples:
- name: Create network security group
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg?api-version=2017-10-01
    body: '{}'
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "testnsg",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg",
        "type": "Microsoft.Network/networkSecurityGroups",
        "location": "westus",
        "properties": {
          "provisioningState": "Succeeded",
          "securityRules": [],
          "defaultSecurityRules": [
            {
              "name": "AllowVnetInBound",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowVnetInBound",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow inbound traffic from all VMs in VNET",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 65000,
                "direction": "Inbound"
              }
            },
            {
              "name": "AllowAzureLoadBalancerInBound",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowAzureLoadBalancerInBound",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow inbound traffic from azure load balancer",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "AzureLoadBalancer",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 65001,
                "direction": "Inbound"
              }
            },
            {
              "name": "DenyAllInBound",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/DenyAllInBound",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Deny all inbound traffic",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 65500,
                "direction": "Inbound"
              }
            },
            {
              "name": "AllowVnetOutBound",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowVnetOutBound",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 65000,
                "direction": "Outbound"
              }
            },
            {
              "name": "AllowInternetOutBound",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowInternetOutBound",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow outbound traffic from all VMs to Internet",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "Internet",
                "access": "Allow",
                "priority": 65001,
                "direction": "Outbound"
              }
            },
            {
              "name": "DenyAllOutBound",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/DenyAllOutBound",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Deny all outbound traffic",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 65500,
                "direction": "Outbound"
              }
            }
          ]
        }
      }
  - statusCode: "201"
    body: >-
      {
        "name": "testnsg",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg",
        "type": "Microsoft.Network/networkSecurityGroups",
        "location": "westus",
        "properties": {
          "provisioningState": "Succeeded",
          "securityRules": [],
          "defaultSecurityRules": [
            {
              "name": "AllowVnetInBound",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowVnetInBound",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow inbound traffic from all VMs in VNET",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 65000,
                "direction": "Inbound"
              }
            },
            {
              "name": "AllowAzureLoadBalancerInBound",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowAzureLoadBalancerInBound",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow inbound traffic from azure load balancer",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "AzureLoadBalancer",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 65001,
                "direction": "Inbound"
              }
            },
            {
              "name": "DenyAllInBound",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/DenyAllInBound",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Deny all inbound traffic",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 65500,
                "direction": "Inbound"
              }
            },
            {
              "name": "AllowVnetOutBound",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowVnetOutBound",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 65000,
                "direction": "Outbound"
              }
            },
            {
              "name": "AllowInternetOutBound",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowInternetOutBound",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow outbound traffic from all VMs to Internet",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "Internet",
                "access": "Allow",
                "priority": 65001,
                "direction": "Outbound"
              }
            },
            {
              "name": "DenyAllOutBound",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/DenyAllOutBound",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Deny all outbound traffic",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 65500,
                "direction": "Outbound"
              }
            }
          ]
        }
      }
- name: Create network security group with rule
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg?api-version=2017-10-01
    body: >-
      {
        "properties": {
          "securityRules": [
            {
              "name": "rule1",
              "properties": {
                "protocol": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "destinationPortRange": "80",
                "sourcePortRange": "*",
                "priority": 130,
                "direction": "Inbound"
              }
            }
          ]
        }
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "testnsg",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg",
        "type": "Microsoft.Network/networkSecurityGroups",
        "location": "westus",
        "properties": {
          "provisioningState": "Succeeded",
          "securityRules": [
            {
              "name": "rule1",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/securityRules/rule1",
              "properties": {
                "provisioningState": "Succeeded",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 130,
                "direction": "Inbound"
              }
            }
          ],
          "defaultSecurityRules": [
            {
              "name": "AllowVnetInBound",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowVnetInBound",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow inbound traffic from all VMs in VNET",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 65000,
                "direction": "Inbound"
              }
            },
            {
              "name": "AllowAzureLoadBalancerInBound",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowAzureLoadBalancerInBound",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow inbound traffic from azure load balancer",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "AzureLoadBalancer",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 65001,
                "direction": "Inbound"
              }
            },
            {
              "name": "DenyAllInBound",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/DenyAllInBound",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Deny all inbound traffic",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 65500,
                "direction": "Inbound"
              }
            },
            {
              "name": "AllowVnetOutBound",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowVnetOutBound",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 65000,
                "direction": "Outbound"
              }
            },
            {
              "name": "AllowInternetOutBound",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowInternetOutBound",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow outbound traffic from all VMs to Internet",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "Internet",
                "access": "Allow",
                "priority": 65001,
                "direction": "Outbound"
              }
            },
            {
              "name": "DenyAllOutBound",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/DenyAllOutBound",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Deny all outbound traffic",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 65500,
                "direction": "Outbound"
              }
            }
          ]
        }
      }
  - statusCode: "201"
    body: >-
      {
        "name": "testnsg",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg",
        "type": "Microsoft.Network/networkSecurityGroups",
        "location": "westus",
        "properties": {
          "provisioningState": "Succeeded",
          "securityRules": [
            {
              "name": "rule1",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/securityRules/rule1",
              "properties": {
                "provisioningState": "Succeeded",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 130,
                "direction": "Inbound"
              }
            }
          ],
          "defaultSecurityRules": [
            {
              "name": "AllowVnetInBound",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowVnetInBound",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow inbound traffic from all VMs in VNET",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 65000,
                "direction": "Inbound"
              }
            },
            {
              "name": "AllowAzureLoadBalancerInBound",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowAzureLoadBalancerInBound",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow inbound traffic from azure load balancer",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "AzureLoadBalancer",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 65001,
                "direction": "Inbound"
              }
            },
            {
              "name": "DenyAllInBound",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/DenyAllInBound",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Deny all inbound traffic",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 65500,
                "direction": "Inbound"
              }
            },
            {
              "name": "AllowVnetOutBound",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowVnetOutBound",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 65000,
                "direction": "Outbound"
              }
            },
            {
              "name": "AllowInternetOutBound",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/AllowInternetOutBound",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow outbound traffic from all VMs to Internet",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "Internet",
                "access": "Allow",
                "priority": 65001,
                "direction": "Outbound"
              }
            },
            {
              "name": "DenyAllOutBound",
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/testnsg/defaultSecurityRules/DenyAllOutBound",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Deny all outbound traffic",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 65500,
                "direction": "Outbound"
              }
            }
          ]
        }
      }
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account

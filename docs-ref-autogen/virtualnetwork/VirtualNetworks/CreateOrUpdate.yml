### YamlMime:RESTOperation
uid: management.azure.com.virtualnetworks.virtualnetworks.createorupdate
name: Create Or Update
service: Virtual Networks
groupName: Virtual Networks
apiVersion: 2017-10-01
consumes:
- application/json
- text/json
produces:
- application/json
- text/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}?api-version=2017-10-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: virtualNetworkName
  in: path
  isRequired: true
  description: The name of the virtual network.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Update successful. The operation returns the resulting VirtualNetwork resource.
  types:
  - uid: VirtualNetwork
- name: 201 Created
  description: Create successful. The operation returns the resulting VirtualNetwork resource.
  types:
  - uid: VirtualNetwork
requestBody:
- parameters:
  - name: etag
    in: body
    description: Gets a unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: properties.addressSpace
    in: body
    description: The AddressSpace that contains an array of IP address ranges that can be used by subnets.
    types:
    - uid: AddressSpace
  - name: properties.dhcpOptions
    in: body
    description: The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.
    types:
    - uid: DhcpOptions
  - name: properties.subnets
    in: body
    description: Subnet in a virtual network resource.
    types:
    - uid: Subnet
      isArray: true
  - name: properties.virtualNetworkPeerings
    in: body
    description: Peerings in a virtual network resource.
    types:
    - uid: VirtualNetworkPeering
      isArray: true
  - name: properties.resourceGuid
    in: body
    description: The resourceGuid property of the Virtual Network resource.
    types:
    - uid: string
  - name: properties.provisioningState
    in: body
    description: "The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
    types:
    - uid: string
  - name: properties.enableDdosProtection
    in: body
    description: Indicates if DDoS protection is enabled for all the protected resources in a Virtual Network.
    types:
    - uid: boolean
  - name: properties.enableVmProtection
    in: body
    description: Indicates if Vm protection is enabled for all the subnets in a Virtual Network.
    types:
    - uid: boolean
  - name: location
    in: body
    description: Resource location.
    types:
    - uid: string
  - name: tags
    in: body
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
requestHeader: []
definitions:
- name: AddressSpace
  description: AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
  kind: object
  properties:
  - name: addressPrefixes
    description: A list of address blocks reserved for this virtual network in CIDR notation.
    types:
    - uid: string
      isArray: true
- name: DhcpOptions
  description: DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
  kind: object
  properties:
  - name: dnsServers
    description: The list of DNS servers IP addresses.
    types:
    - uid: string
      isArray: true
- name: Subnet
  description: Subnet in a virtual network resource.
  kind: object
  properties:
  - name: name
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: etag
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: properties.addressPrefix
    description: The address prefix for the subnet.
    types:
    - uid: string
  - name: properties.networkSecurityGroup
    description: The reference of the NetworkSecurityGroup resource.
    types:
    - uid: SubResource
  - name: properties.routeTable
    description: The reference of the RouteTable resource.
    types:
    - uid: SubResource
  - name: properties.serviceEndpoints
    description: The service endpoint properties.
    types:
    - uid: ServiceEndpointPropertiesFormat
      isArray: true
  - name: properties.ipConfigurations
    isReadyOnly: true
    description: Reference to another subresource.
    types:
    - uid: SubResource
      isArray: true
  - name: properties.resourceNavigationLinks
    description: ResourceNavigationLink resource.
    types:
    - uid: ResourceNavigationLink
      isArray: true
  - name: properties.provisioningState
    description: The provisioning state of the resource.
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Resource ID
    types:
    - uid: string
- name: VirtualNetworkPeering
  description: Peerings in a virtual network resource.
  kind: object
  properties:
  - name: name
    description: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: etag
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: properties.allowVirtualNetworkAccess
    description: Whether the VMs in the linked virtual network space would be able to access all the VMs in local Virtual network space.
    types:
    - uid: boolean
  - name: properties.allowForwardedTraffic
    description: Whether the forwarded traffic from the VMs in the remote virtual network will be allowed/disallowed.
    types:
    - uid: boolean
  - name: properties.allowGatewayTransit
    description: If gateway links can be used in remote virtual networking to link to this virtual network.
    types:
    - uid: boolean
  - name: properties.useRemoteGateways
    description: If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
    types:
    - uid: boolean
  - name: properties.remoteVirtualNetwork
    description: The reference of the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
    types:
    - uid: SubResource
  - name: properties.remoteAddressSpace
    description: The reference of the remote virtual network address space.
    types:
    - uid: AddressSpace
  - name: properties.peeringState
    description: The status of the virtual network peering. Possible values are 'Initiated', 'Connected', and 'Disconnected'.
    types:
    - uid: VirtualNetworkPeeringState
  - name: properties.provisioningState
    description: The provisioning state of the resource.
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Resource ID
    types:
    - uid: string
- name: VirtualNetwork
  description: Virtual Network resource.
  kind: object
  properties:
  - name: etag
    description: Gets a unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: properties.addressSpace
    description: The AddressSpace that contains an array of IP address ranges that can be used by subnets.
    types:
    - uid: AddressSpace
  - name: properties.dhcpOptions
    description: The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.
    types:
    - uid: DhcpOptions
  - name: properties.subnets
    description: Subnet in a virtual network resource.
    types:
    - uid: Subnet
      isArray: true
  - name: properties.virtualNetworkPeerings
    description: Peerings in a virtual network resource.
    types:
    - uid: VirtualNetworkPeering
      isArray: true
  - name: properties.resourceGuid
    description: The resourceGuid property of the Virtual Network resource.
    types:
    - uid: string
  - name: properties.provisioningState
    description: "The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
    types:
    - uid: string
  - name: properties.enableDdosProtection
    description: Indicates if DDoS protection is enabled for all the protected resources in a Virtual Network.
    types:
    - uid: boolean
  - name: properties.enableVmProtection
    description: Indicates if Vm protection is enabled for all the subnets in a Virtual Network.
    types:
    - uid: boolean
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
  - name: location
    description: Resource location.
    types:
    - uid: string
  - name: tags
    description: Resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
- name: SubResource
  description: Reference to another subresource.
  kind: object
  properties:
  - name: id
    description: Resource ID.
    types:
    - uid: string
- name: ServiceEndpointPropertiesFormat
  description: The service endpoint properties.
  kind: object
  properties:
  - name: service
    description: The type of the endpoint service.
    types:
    - uid: string
  - name: locations
    description: A list of locations.
    types:
    - uid: string
      isArray: true
  - name: provisioningState
    description: The provisioning state of the resource.
    types:
    - uid: string
- name: ResourceNavigationLink
  description: ResourceNavigationLink resource.
  kind: object
  properties:
  - name: name
    description: Name of the resource that is unique within a resource group. This name can be used to access the resource.
    types:
    - uid: string
  - name: etag
    isReadyOnly: true
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
  - name: properties.linkedResourceType
    description: Resource type of the linked resource.
    types:
    - uid: string
  - name: properties.link
    description: Link to the external resource
    types:
    - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: Provisioning state of the ResourceNavigationLink resource.
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Resource ID
    types:
    - uid: string
- name: VirtualNetworkPeeringState
  description: The status of the virtual network peering. Possible values are 'Initiated', 'Connected', and 'Disconnected'.
  kind: enum
  properties:
  - name: Initiated
    types:
    - uid: string
  - name: Connected
    types:
    - uid: string
  - name: Disconnected
    types:
    - uid: string
examples:
- name: Create virtual network
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet?api-version=2017-10-01
    body: >-
      {
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          }
        }
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "test-vnet",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet",
        "type": "Microsoft.Network/virtualNetworks",
        "location": "westus",
        "properties": {
          "provisioningState": "Succeeded",
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [],
          "virtualNetworkPeerings": []
        }
      }
  - statusCode: "201"
    body: >-
      {
        "name": "test-vnet",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet",
        "type": "Microsoft.Network/virtualNetworks",
        "location": "westus",
        "properties": {
          "provisioningState": "Succeeded",
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [],
          "virtualNetworkPeerings": []
        }
      }
- name: Create virtual network with subnet
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet?api-version=2017-10-01
    body: >-
      {
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "test-1",
              "properties": {
                "addressPrefix": "10.0.0.0/24"
              }
            }
          ]
        }
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "test-vnet",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet",
        "type": "Microsoft.Network/virtualNetworks",
        "location": "westus",
        "properties": {
          "provisioningState": "Succeeded",
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/test-1",
              "name": "test-1",
              "properties": {
                "addressPrefix": "10.0.0.0/24",
                "provisioningState": "Succeeded"
              }
            }
          ],
          "virtualNetworkPeerings": []
        }
      }
  - statusCode: "201"
    body: >-
      {
        "name": "test-vnet",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet",
        "type": "Microsoft.Network/virtualNetworks",
        "location": "westus",
        "properties": {
          "provisioningState": "Succeeded",
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/test-1",
              "name": "test-1",
              "properties": {
                "addressPrefix": "10.0.0.0/24",
                "provisioningState": "Succeeded"
              }
            }
          ],
          "virtualNetworkPeerings": []
        }
      }
- name: Create virtual network with service endpoints
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/vnetTest/providers/Microsoft.Network/virtualNetworks/vnet1?api-version=2017-10-01
    body: >-
      {
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "test-1",
              "properties": {
                "addressPrefix": "10.0.0.0/16",
                "serviceEndpoints": [
                  {
                    "service": "Microsoft.Storage"
                  }
                ]
              }
            }
          ]
        }
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "vnet1",
        "id": "/subscriptions/subid/resourceGroups/vnetTest/providers/Microsoft.Network/virtualNetworks/vnet1",
        "type": "Microsoft.Network/virtualNetworks",
        "location": "westus",
        "properties": {
          "provisioningState": "Succeeded",
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "test-1",
              "id": "/subscriptions/subid/resourceGroups/vnetTest/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/test-1",
              "properties": {
                "addressPrefix": "10.0.0.0/16",
                "ipConfigurations": [],
                "resourceNavigationLinks": [],
                "serviceEndpoints": [
                  {
                    "provisioningState": "Succeeded",
                    "service": "Microsoft.Storage",
                    "locations": [
                      "eastus2(stage)",
                      "usnorth(stage)"
                    ]
                  }
                ],
                "provisioningState": "Succeeded"
              }
            }
          ],
          "virtualNetworkPeerings": []
        }
      }
  - statusCode: "201"
    body: >-
      {
        "name": "vnet1",
        "id": "/subscriptions/subid/resourceGroups/vnetTest/providers/Microsoft.Network/virtualNetworks/vnet1",
        "type": "Microsoft.Network/virtualNetworks",
        "location": "westus",
        "properties": {
          "provisioningState": "Succeeded",
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "test-1",
              "id": "/subscriptions/subid/resourceGroups/vnetTest/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/test-1",
              "properties": {
                "addressPrefix": "10.0.0.0/16",
                "ipConfigurations": [],
                "resourceNavigationLinks": [],
                "serviceEndpoints": [
                  {
                    "provisioningState": "Succeeded",
                    "service": "Microsoft.Storage",
                    "locations": [
                      "eastus2(stage)",
                      "usnorth(stage)"
                    ]
                  }
                ],
                "provisioningState": "Succeeded"
              }
            }
          ],
          "virtualNetworkPeerings": []
        }
      }
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account

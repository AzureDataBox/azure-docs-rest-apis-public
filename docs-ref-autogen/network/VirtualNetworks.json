{
  "swagger": "2.0",
  "info": {
    "title": "NetworkManagementClient",
    "description": "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.",
    "version": "2017-03-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "text/json"
  ],
  "produces": [
    "application/json",
    "text/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}": {
      "delete": {
        "tags": [
          "VirtualNetworks"
        ],
        "operationId": "VirtualNetworks_Delete",
        "description": "Deletes the specified virtual network.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Delete successful."
          },
          "200": {
            "description": "Delete successful."
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "VirtualNetworks"
        ],
        "operationId": "VirtualNetworks_Get",
        "description": "Gets the specified virtual network by resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting VirtualNetwork resource.",
            "schema": {
              "$ref": "#/definitions/VirtualNetwork"
            }
          }
        }
      },
      "put": {
        "tags": [
          "VirtualNetworks"
        ],
        "operationId": "VirtualNetworks_CreateOrUpdate",
        "description": "Creates or updates a virtual network in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetwork"
            },
            "description": "Parameters supplied to the create or update virtual network operation"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting VirtualNetwork resource.",
            "schema": {
              "$ref": "#/definitions/VirtualNetwork"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting VirtualNetwork resource.",
            "schema": {
              "$ref": "#/definitions/VirtualNetwork"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualNetworks": {
      "get": {
        "tags": [
          "VirtualNetworks"
        ],
        "operationId": "VirtualNetworks_ListAll",
        "description": "Gets all virtual networks in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of VirtualNetwork resources.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks": {
      "get": {
        "tags": [
          "VirtualNetworks"
        ],
        "operationId": "VirtualNetworks_List",
        "description": "Gets all virtual networks in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of VirtualNetwork resources.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/CheckIPAddressAvailability": {
      "get": {
        "operationId": "VirtualNetworks_CheckIPAddressAvailability",
        "description": "Checks whether a private IP address is available for use.",
        "parameters": [
          {
            "name": "ipAddress",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The private IP address to be verified."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Private IP address availability and list of other free addresses if the requested one is not available.",
            "schema": {
              "$ref": "#/definitions/IPAddressAvailabilityResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/usages": {
      "get": {
        "operationId": "VirtualNetworks_ListUsage",
        "description": "Lists usage stats.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Usage stats for vnet.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkListUsageResult"
            }
          }
        },
        "x-ms-examples": {
          "VnetGetUsage": {
            "parameters": {
              "virtualNetworkName": "vnetName",
              "resourceGroupName": "rg1",
              "api-version": "2017-03-01",
              "subscriptionId": "subid"
            },
            "responses": {
              "200": {
                "body": {
                  "value": [
                    {
                      "currentValue": -1,
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnetName/subnets/GatewaySubnet",
                      "limit": -1,
                      "name": {
                        "localizedValue": "Subnet size and usage",
                        "value": "SubnetSpace"
                      },
                      "unit": "Count"
                    },
                    {
                      "currentValue": 2,
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnetName/subnets/newSubnet",
                      "limit": 3,
                      "name": {
                        "localizedValue": "Subnet size and usage",
                        "value": "SubnetSpace"
                      },
                      "unit": "Count"
                    }
                  ]
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "ResourceNavigationLinkFormat": {
      "properties": {
        "linkedResourceType": {
          "type": "string",
          "description": "Resource type of the linked resource."
        },
        "link": {
          "type": "string",
          "description": "Link to the external resource"
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "Provisioning state of the ResourceNavigationLink resource."
        }
      },
      "description": "Properties of ResourceNavigationLink."
    },
    "ResourceNavigationLink": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ResourceNavigationLinkFormat"
        },
        "name": {
          "type": "string",
          "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "ResourceNavigationLink resource."
    },
    "SubnetPropertiesFormat": {
      "properties": {
        "addressPrefix": {
          "type": "string",
          "description": "The address prefix for the subnet."
        },
        "networkSecurityGroup": {
          "$ref": "#/definitions/NetworkSecurityGroup",
          "description": "The reference of the NetworkSecurityGroup resource."
        },
        "routeTable": {
          "$ref": "#/definitions/RouteTable",
          "description": "The reference of the RouteTable resource."
        },
        "ipConfigurations": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPConfiguration"
          },
          "description": "Gets an array of references to the network interface IP configurations using subnet."
        },
        "resourceNavigationLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceNavigationLink"
          },
          "description": "Gets an array of references to the external resources using subnet."
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the resource."
        }
      }
    },
    "VirtualNetworkPeeringPropertiesFormat": {
      "properties": {
        "allowVirtualNetworkAccess": {
          "type": "boolean",
          "description": "Whether the VMs in the linked virtual network space would be able to access all the VMs in local Virtual network space."
        },
        "allowForwardedTraffic": {
          "type": "boolean",
          "description": "Whether the forwarded traffic from the VMs in the remote virtual network will be allowed/disallowed."
        },
        "allowGatewayTransit": {
          "type": "boolean",
          "description": "If gateway links can be used in remote virtual networking to link to this virtual network."
        },
        "useRemoteGateways": {
          "type": "boolean",
          "description": "If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway."
        },
        "remoteVirtualNetwork": {
          "$ref": "#/definitions/SubResource",
          "description": "The reference of the remote virtual network."
        },
        "peeringState": {
          "type": "string",
          "description": "The status of the virtual network peering. Possible values are 'Initiated', 'Connected', and 'Disconnected'.",
          "enum": [
            "Initiated",
            "Connected",
            "Disconnected"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkPeeringState",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the resource."
        }
      }
    },
    "Subnet": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SubnetPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Subnet in a virtual network resource."
    },
    "VirtualNetworkPeering": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkPeeringPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Peerings in a virtual network resource."
    },
    "SubnetListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subnet"
          },
          "description": "The subnets in a virtual network."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListSubnets API service callRetrieves all subnet that belongs to a virtual network"
    },
    "VirtualNetworkPeeringListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkPeering"
          },
          "description": "The peerings in a virtual network."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListSubnets API service call. Retrieves all subnets that belong to a virtual network."
    },
    "VirtualNetworkPropertiesFormat": {
      "properties": {
        "addressSpace": {
          "$ref": "#/definitions/AddressSpace",
          "description": "The AddressSpace that contains an array of IP address ranges that can be used by subnets."
        },
        "dhcpOptions": {
          "$ref": "#/definitions/DhcpOptions",
          "description": "The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network."
        },
        "subnets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subnet"
          },
          "description": "A list of subnets in a Virtual Network."
        },
        "virtualNetworkPeerings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkPeering"
          },
          "description": "A list of peerings in a Virtual Network."
        },
        "resourceGuid": {
          "type": "string",
          "description": "The resourceGuid property of the Virtual Network resource."
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      }
    },
    "VirtualNetwork": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkPropertiesFormat"
        },
        "etag": {
          "type": "string",
          "description": "Gets a unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Virtual Network resource."
    },
    "VirtualNetworkListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetwork"
          },
          "description": "Gets a list of VirtualNetwork resources in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the ListVirtualNetworks API service call."
    },
    "AddressSpace": {
      "properties": {
        "addressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of address blocks reserved for this virtual network in CIDR notation."
        }
      },
      "description": "AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network."
    },
    "DhcpOptions": {
      "properties": {
        "dnsServers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of DNS servers IP addresses."
        }
      },
      "description": "DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options."
    },
    "IPAddressAvailabilityResult": {
      "properties": {
        "available": {
          "type": "boolean",
          "description": "Private IP address availability."
        },
        "availableIPAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Contains other available private IP addresses if the asked for address is taken."
        }
      },
      "description": "Response for CheckIPAddressAvailability API service call"
    },
    "VirtualNetworkListUsageResult": {
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/VirtualNetworkUsage"
          },
          "description": "VirtualNetwork usage stats."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the virtual networks GetUsage API service call."
    },
    "VirtualNetworkUsage": {
      "properties": {
        "currentValue": {
          "type": "number",
          "format": "double",
          "readOnly": true,
          "description": "Indicates number of IPs used from the Subnet."
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Subnet identifier."
        },
        "limit": {
          "type": "number",
          "format": "double",
          "readOnly": true,
          "description": "Indicates the size of the subnet."
        },
        "name": {
          "$ref": "#/definitions/VirtualNetworkUsageName",
          "readOnly": true,
          "description": "The name containing common and localized value for usage."
        },
        "unit": {
          "type": "string",
          "readOnly": true,
          "description": "Usage units. Returns 'Count'"
        }
      },
      "description": "Usage details for subnet."
    },
    "VirtualNetworkUsageName": {
      "properties": {
        "localizedValue": {
          "type": "string",
          "readOnly": true,
          "description": "Localized subnet size and usage string."
        },
        "value": {
          "type": "string",
          "readOnly": true,
          "description": "Subnet size and usage string."
        }
      },
      "description": "Usage strings container."
    },
    "Resource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "x-ms-azure-resource": true
    },
    "SubResource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      },
      "x-ms-azure-resource": true
    },
    "PublicIPAddressDnsSettings": {
      "properties": {
        "domainNameLabel": {
          "type": "string",
          "description": "Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system."
        },
        "fqdn": {
          "type": "string",
          "description": "Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone."
        },
        "reverseFqdn": {
          "type": "string",
          "description": "Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. "
        }
      },
      "description": "Contains FQDN of the DNS record associated with the public IP address"
    },
    "PublicIPAddressPropertiesFormat": {
      "properties": {
        "publicIPAllocationMethod": {
          "type": "string",
          "description": "The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.",
          "enum": [
            "Static",
            "Dynamic"
          ],
          "x-ms-enum": {
            "name": "IPAllocationMethod",
            "modelAsString": true
          }
        },
        "publicIPAddressVersion": {
          "type": "string",
          "description": "The public IP address version. Possible values are: 'IPv4' and 'IPv6'.",
          "enum": [
            "IPv4",
            "IPv6"
          ],
          "x-ms-enum": {
            "name": "IPVersion",
            "modelAsString": true
          }
        },
        "ipConfiguration": {
          "readOnly": true,
          "$ref": "#/definitions/IPConfiguration"
        },
        "dnsSettings": {
          "$ref": "#/definitions/PublicIPAddressDnsSettings",
          "description": "The FQDN of the DNS record associated with the public IP address."
        },
        "ipAddress": {
          "type": "string"
        },
        "idleTimeoutInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "The idle timeout of the public IP address."
        },
        "resourceGuid": {
          "type": "string",
          "description": "The resource GUID property of the public IP resource."
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "description": "Public IP address properties."
    },
    "PublicIPAddress": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PublicIPAddressPropertiesFormat"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Public IP address resource."
    },
    "IPConfigurationPropertiesFormat": {
      "properties": {
        "privateIPAddress": {
          "type": "string",
          "description": "The private IP address of the IP configuration."
        },
        "privateIPAllocationMethod": {
          "type": "string",
          "description": "The private IP allocation method. Possible values are 'Static' and 'Dynamic'.",
          "enum": [
            "Static",
            "Dynamic"
          ],
          "x-ms-enum": {
            "name": "IPAllocationMethod",
            "modelAsString": true
          }
        },
        "subnet": {
          "$ref": "#/definitions/Subnet",
          "description": "The reference of the subnet resource."
        },
        "publicIPAddress": {
          "$ref": "#/definitions/PublicIPAddress",
          "description": "The reference of the public IP resource."
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "description": "Properties of IP configuration."
    },
    "IPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IPConfigurationPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "IPConfiguration"
    },
    "RoutePropertiesFormat": {
      "properties": {
        "addressPrefix": {
          "type": "string",
          "description": "The destination CIDR to which the route applies."
        },
        "nextHopType": {
          "type": "string",
          "description": "The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'",
          "enum": [
            "VirtualNetworkGateway",
            "VnetLocal",
            "Internet",
            "VirtualAppliance",
            "None"
          ],
          "x-ms-enum": {
            "name": "RouteNextHopType",
            "modelAsString": true
          }
        },
        "nextHopIpAddress": {
          "type": "string",
          "description": "The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance."
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "required": [
        "nextHopType"
      ],
      "description": "Route resource"
    },
    "Route": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RoutePropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Route resource"
    },
    "RouteTablePropertiesFormat": {
      "properties": {
        "routes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Route"
          },
          "description": "Collection of routes contained within a route table."
        },
        "subnets": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subnet"
          },
          "description": "A collection of references to subnets."
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "description": "Route Table resource"
    },
    "RouteTable": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RouteTablePropertiesFormat"
        },
        "etag": {
          "type": "string",
          "description": "Gets a unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Route table resource."
    },
    "NetworkInterfaceDnsSettings": {
      "properties": {
        "dnsServers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection."
        },
        "appliedDnsServers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs."
        },
        "internalDnsNameLabel": {
          "type": "string",
          "description": "Relative DNS name for this NIC used for internal communications between VMs in the same virtual network."
        },
        "internalFqdn": {
          "type": "string",
          "description": "Fully qualified DNS name supporting internal communications between VMs in the same virtual network."
        },
        "internalDomainNameSuffix": {
          "type": "string",
          "description": "Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix."
        }
      },
      "description": "DNS settings of a network interface."
    },
    "InboundNatRulePropertiesFormat": {
      "properties": {
        "frontendIPConfiguration": {
          "$ref": "#/definitions/SubResource",
          "description": "A reference to frontend IP addresses."
        },
        "backendIPConfiguration": {
          "readOnly": true,
          "$ref": "#/definitions/NetworkInterfaceIPConfiguration",
          "description": "A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backed IP."
        },
        "protocol": {
          "type": "string",
          "description": "The transport protocol for the endpoint. Possible values are: 'Udp' or 'Tcp'",
          "enum": [
            "Udp",
            "Tcp"
          ],
          "x-ms-enum": {
            "name": "TransportProtocol",
            "modelAsString": true
          }
        },
        "frontendPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port for the external endpoint. Port numbers for each Rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534."
        },
        "backendPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port used for the internal endpoint. Acceptable values range from 1 to 65535."
        },
        "idleTimeoutInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP."
        },
        "enableFloatingIP": {
          "type": "boolean",
          "description": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint."
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "description": "Properties of the inbound NAT rule."
    },
    "InboundNatRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/InboundNatRulePropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Inbound NAT rule of the load balancer."
    },
    "BackendAddressPoolPropertiesFormat": {
      "properties": {
        "backendIPConfigurations": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterfaceIPConfiguration"
          },
          "description": "Gets collection of references to IP addresses defined in network interfaces."
        },
        "loadBalancingRules": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "Gets load balancing rules that use this backend address pool."
        },
        "outboundNatRule": {
          "readOnly": true,
          "$ref": "#/definitions/SubResource",
          "description": "Gets outbound rules that use this backend address pool."
        },
        "provisioningState": {
          "type": "string",
          "description": "Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "description": "Properties of the backend address pool."
    },
    "BackendAddressPool": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/BackendAddressPoolPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Pool of backend IP addresses."
    },
    "ApplicationGatewayBackendAddress": {
      "properties": {
        "fqdn": {
          "type": "string",
          "description": "Fully qualified domain name (FQDN)."
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address"
        }
      },
      "description": "Backend address of an application gateway."
    },
    "ApplicationGatewayBackendAddressPoolPropertiesFormat": {
      "properties": {
        "backendIPConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterfaceIPConfiguration"
          },
          "description": "Collection of references to IPs defined in network interfaces."
        },
        "backendAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendAddress"
          },
          "description": "Backend addresses"
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "description": "Properties of Backend Address Pool of an application gateway."
    },
    "ApplicationGatewayBackendAddressPool": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayBackendAddressPoolPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Backend Address Pool of an application gateway."
    },
    "NetworkInterfaceIPConfigurationPropertiesFormat": {
      "properties": {
        "applicationGatewayBackendAddressPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendAddressPool"
          },
          "description": "The reference of ApplicationGatewayBackendAddressPool resource."
        },
        "loadBalancerBackendAddressPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackendAddressPool"
          },
          "description": "The reference of LoadBalancerBackendAddressPool resource."
        },
        "loadBalancerInboundNatRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InboundNatRule"
          },
          "description": "A list of references of LoadBalancerInboundNatRules."
        },
        "privateIPAddress": {
          "type": "string"
        },
        "privateIPAllocationMethod": {
          "type": "string",
          "description": "Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.",
          "enum": [
            "Static",
            "Dynamic"
          ],
          "x-ms-enum": {
            "name": "IPAllocationMethod",
            "modelAsString": true
          }
        },
        "privateIPAddressVersion": {
          "type": "string",
          "description": "Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.",
          "enum": [
            "IPv4",
            "IPv6"
          ],
          "x-ms-enum": {
            "name": "IPVersion",
            "modelAsString": true
          }
        },
        "subnet": {
          "$ref": "#/definitions/Subnet"
        },
        "primary": {
          "type": "boolean",
          "description": "Gets whether this is a primary customer address on the network interface."
        },
        "publicIPAddress": {
          "$ref": "#/definitions/PublicIPAddress"
        },
        "provisioningState": {
          "type": "string"
        }
      },
      "description": "Properties of IP configuration."
    },
    "NetworkInterfaceIPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkInterfaceIPConfigurationPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "IPConfiguration in a network interface."
    },
    "NetworkInterfacePropertiesFormat": {
      "properties": {
        "virtualMachine": {
          "$ref": "#/definitions/SubResource",
          "description": "The reference of a virtual machine."
        },
        "networkSecurityGroup": {
          "$ref": "#/definitions/NetworkSecurityGroup",
          "description": "The reference of the NetworkSecurityGroup resource."
        },
        "ipConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterfaceIPConfiguration"
          },
          "description": "A list of IPConfigurations of the network interface."
        },
        "dnsSettings": {
          "$ref": "#/definitions/NetworkInterfaceDnsSettings",
          "description": "The DNS settings in network interface."
        },
        "macAddress": {
          "type": "string",
          "description": "The MAC address of the network interface."
        },
        "primary": {
          "type": "boolean",
          "description": "Gets whether this is a primary network interface on a virtual machine."
        },
        "enableAcceleratedNetworking": {
          "type": "boolean",
          "description": "If the network interface is accelerated networking enabled."
        },
        "enableIPForwarding": {
          "type": "boolean",
          "description": "Indicates whether IP forwarding is enabled on this network interface."
        },
        "resourceGuid": {
          "type": "string",
          "description": "The resource GUID property of the network interface resource."
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "description": "NetworkInterface properties. "
    },
    "NetworkInterface": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkInterfacePropertiesFormat"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A network interface in a resource group."
    },
    "SecurityRulePropertiesFormat": {
      "properties": {
        "description": {
          "type": "string",
          "description": "A description for this rule. Restricted to 140 chars."
        },
        "protocol": {
          "type": "string",
          "description": "Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.",
          "enum": [
            "Tcp",
            "Udp",
            "*"
          ],
          "x-ms-enum": {
            "name": "SecurityRuleProtocol",
            "modelAsString": true
          }
        },
        "sourcePortRange": {
          "type": "string",
          "description": "The source port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports."
        },
        "destinationPortRange": {
          "type": "string",
          "description": "The destination port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports."
        },
        "sourceAddressPrefix": {
          "type": "string",
          "description": "The CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. "
        },
        "destinationAddressPrefix": {
          "type": "string",
          "description": "The destination address prefix. CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
        },
        "access": {
          "type": "string",
          "description": "The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.",
          "enum": [
            "Allow",
            "Deny"
          ],
          "x-ms-enum": {
            "name": "SecurityRuleAccess",
            "modelAsString": true
          }
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule."
        },
        "direction": {
          "type": "string",
          "description": "The direction of the rule. The direction specifies if rule will be evaluated on incoming or outcoming traffic. Possible values are: 'Inbound' and 'Outbound'.",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "x-ms-enum": {
            "name": "SecurityRuleDirection",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "required": [
        "protocol",
        "sourceAddressPrefix",
        "destinationAddressPrefix",
        "access",
        "direction"
      ]
    },
    "SecurityRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SecurityRulePropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Network security rule."
    },
    "NetworkSecurityGroupPropertiesFormat": {
      "properties": {
        "securityRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityRule"
          },
          "description": "A collection of security rules of the network security group."
        },
        "defaultSecurityRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityRule"
          },
          "description": "The default security rules of network security group."
        },
        "networkInterfaces": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterface"
          },
          "description": "A collection of references to network interfaces."
        },
        "subnets": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subnet"
          },
          "description": "A collection of references to subnets."
        },
        "resourceGuid": {
          "type": "string",
          "description": "The resource GUID property of the network security group resource."
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "description": "Network Security Group resource."
    },
    "NetworkSecurityGroup": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkSecurityGroupPropertiesFormat"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "NetworkSecurityGroup resource."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version."
    }
  }
}
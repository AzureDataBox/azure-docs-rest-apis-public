{
  "swagger": "2.0",
  "info": {
    "version": "2017-03-01",
    "title": "NetworkManagementClient",
    "description": "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}": {
      "get": {
        "tags": [
          "LocalNetworkGateways"
        ],
        "operationId": "LocalNetworkGateways_Get",
        "description": "Gets the specified local network gateway in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "localNetworkGatewayName",
            "in": "path",
            "required": true,
            "minLength": 1,
            "type": "string",
            "description": "The name of the local network gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting LocalNetworkGateway resource.",
            "schema": {
              "$ref": "#/definitions/LocalNetworkGateway"
            }
          }
        },
        "produces": [
          "application/json",
          "text/json"
        ],
        "consumes": [
          "application/json",
          "text/json"
        ],
        "x-internal-toc-name": "Get"
      }
    }
  },
  "definitions": {
    "VirtualNetworkGatewayIPConfigurationPropertiesFormat": {
      "properties": {
        "privateIPAllocationMethod": {
          "type": "string",
          "description": "The private IP allocation method. Possible values are: 'Static' and 'Dynamic'.",
          "enum": [
            "Static",
            "Dynamic"
          ],
          "x-ms-enum": {
            "name": "IPAllocationMethod",
            "modelAsString": true
          }
        },
        "subnet": {
          "$ref": "#/definitions/SubResource",
          "description": "The reference of the subnet resource."
        },
        "publicIPAddress": {
          "$ref": "#/definitions/SubResource",
          "description": "The reference of the public IP resource."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "description": "Properties of VirtualNetworkGatewayIPConfiguration"
    },
    "VirtualNetworkGatewayIPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkGatewayIPConfigurationPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "IP configuration for virtual network gateway"
    },
    "VirtualNetworkGatewayPropertiesFormat": {
      "properties": {
        "ipConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkGatewayIPConfiguration"
          },
          "description": "IP configurations for virtual network gateway."
        },
        "gatewayType": {
          "type": "string",
          "description": "The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.",
          "enum": [
            "Vpn",
            "ExpressRoute"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkGatewayType",
            "modelAsString": true
          }
        },
        "vpnType": {
          "type": "string",
          "description": "The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.",
          "enum": [
            "PolicyBased",
            "RouteBased"
          ],
          "x-ms-enum": {
            "name": "VpnType",
            "modelAsString": true
          }
        },
        "enableBgp": {
          "type": "boolean",
          "description": "Whether BGP is enabled for this virtual network gateway or not."
        },
        "activeActive": {
          "type": "boolean",
          "description": "ActiveActive flag"
        },
        "gatewayDefaultSite": {
          "$ref": "#/definitions/SubResource",
          "description": "The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting."
        },
        "sku": {
          "$ref": "#/definitions/VirtualNetworkGatewaySku",
          "description": "The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway."
        },
        "vpnClientConfiguration": {
          "$ref": "#/definitions/VpnClientConfiguration",
          "description": "The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations."
        },
        "bgpSettings": {
          "$ref": "#/definitions/BgpSettings",
          "description": "Virtual network gateway's BGP speaker settings."
        },
        "resourceGuid": {
          "type": "string",
          "description": "The resource GUID property of the VirtualNetworkGateway resource."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state of the VirtualNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "description": "VirtualNetworkGateway properties"
    },
    "VpnClientRootCertificatePropertiesFormat": {
      "properties": {
        "publicCertData": {
          "type": "string",
          "description": "The certificate public data."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state of the VPN client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "required": [
        "publicCertData"
      ],
      "description": "Properties of SSL certificates of application gateway"
    },
    "VpnClientRootCertificate": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VpnClientRootCertificatePropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "VPN client root certificate of virtual network gateway"
    },
    "VpnClientRevokedCertificatePropertiesFormat": {
      "properties": {
        "thumbprint": {
          "type": "string",
          "description": "The revoked VPN client certificate thumbprint."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state of the VPN client revoked certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "description": "Properties of the revoked VPN client certificate of virtual network gateway."
    },
    "VpnClientRevokedCertificate": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VpnClientRevokedCertificatePropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "VPN client revoked certificate of virtual network gateway."
    },
    "VpnClientConfiguration": {
      "properties": {
        "vpnClientAddressPool": {
          "$ref": "#/definitions/AddressSpace",
          "description": "The reference of the address space resource which represents Address space for P2S VpnClient."
        },
        "vpnClientRootCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnClientRootCertificate"
          },
          "description": "VpnClientRootCertificate for virtual network gateway."
        },
        "vpnClientRevokedCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnClientRevokedCertificate"
          },
          "description": "VpnClientRevokedCertificate for Virtual network gateway."
        }
      },
      "description": "VpnClientConfiguration for P2S client."
    },
    "VirtualNetworkGatewaySku": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Gateway SKU name.",
          "enum": [
            "Basic",
            "HighPerformance",
            "Standard",
            "UltraPerformance",
            "VpnGw1",
            "VpnGw2",
            "VpnGw3"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkGatewaySkuName",
            "modelAsString": true
          }
        },
        "tier": {
          "type": "string",
          "description": "Gateway SKU tier.",
          "enum": [
            "Basic",
            "HighPerformance",
            "Standard",
            "UltraPerformance",
            "VpnGw1",
            "VpnGw2",
            "VpnGw3"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkGatewaySkuTier",
            "modelAsString": true
          }
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "The capacity."
        }
      },
      "description": "VirtualNetworkGatewaySku details"
    },
    "BgpSettings": {
      "properties": {
        "asn": {
          "type": "integer",
          "format": "int64",
          "description": "The BGP speaker's ASN."
        },
        "bgpPeeringAddress": {
          "type": "string",
          "description": "The BGP peering address and BGP identifier of this BGP speaker."
        },
        "peerWeight": {
          "type": "integer",
          "format": "int32",
          "description": "The weight added to routes learned from this BGP speaker."
        }
      },
      "description": "BGP settings details"
    },
    "BgpPeerStatus": {
      "properties": {
        "localAddress": {
          "type": "string",
          "readOnly": true,
          "description": "The virtual network gateway's local address"
        },
        "neighbor": {
          "type": "string",
          "readOnly": true,
          "description": "The remote BGP peer"
        },
        "asn": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "The autonomous system number of the remote BGP peer"
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "The BGP peer state",
          "enum": [
            "Unknown",
            "Stopped",
            "Idle",
            "Connecting",
            "Connected"
          ],
          "x-ms-enum": {
            "name": "BgpPeerState",
            "modelAsString": true
          }
        },
        "connectedDuration": {
          "type": "string",
          "readOnly": true,
          "description": "For how long the peering has been up"
        },
        "routesReceived": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "The number of routes learned from this peer"
        },
        "messagesSent": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "The number of BGP messages sent"
        },
        "messagesReceived": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "The number of BGP messages received"
        }
      },
      "description": "BGP peer status details"
    },
    "GatewayRoute": {
      "properties": {
        "localAddress": {
          "type": "string",
          "readOnly": true,
          "description": "The gateway's local address"
        },
        "network": {
          "type": "string",
          "readOnly": true,
          "description": "The route's network prefix"
        },
        "nextHop": {
          "type": "string",
          "readOnly": true,
          "description": "The route's next hop"
        },
        "sourcePeer": {
          "type": "string",
          "readOnly": true,
          "description": "The peer this route was learned from"
        },
        "origin": {
          "type": "string",
          "readOnly": true,
          "description": "The source this route was learned from"
        },
        "asPath": {
          "type": "string",
          "readOnly": true,
          "description": "The route's AS path sequence"
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "The route's weight"
        }
      },
      "description": "Gateway routing details"
    },
    "VirtualNetworkGateway": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkGatewayPropertiesFormat"
        },
        "etag": {
          "type": "string",
          "description": "Gets a unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "A common class for general resource information"
    },
    "VpnClientParameters": {
      "properties": {
        "processorArchitecture": {
          "type": "string",
          "description": "VPN client Processor Architecture. Possible values are: 'AMD64' and 'X86'.",
          "enum": [
            "Amd64",
            "X86"
          ],
          "x-ms-enum": {
            "name": "ProcessorArchitecture",
            "modelAsString": true
          }
        }
      },
      "required": [
        "processorArchitecture"
      ],
      "description": "Vpn Client Parameters for package generation"
    },
    "VirtualNetworkGatewayListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkGateway"
          },
          "description": "Gets a list of VirtualNetworkGateway resources that exists in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the ListVirtualNetworkGateways API service call."
    },
    "BgpPeerStatusListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BgpPeerStatus"
          },
          "description": "List of BGP peers"
        }
      },
      "description": "Response for list BGP peer status API service call"
    },
    "GatewayRouteListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GatewayRoute"
          },
          "description": "List of gateway routes"
        }
      },
      "description": "List of virtual network gateway routes"
    },
    "TunnelConnectionHealth": {
      "properties": {
        "tunnel": {
          "readOnly": true,
          "type": "string",
          "description": "Tunnel name."
        },
        "connectionStatus": {
          "readOnly": true,
          "type": "string",
          "description": "Virtual network Gateway connection status",
          "enum": [
            "Unknown",
            "Connecting",
            "Connected",
            "NotConnected"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkGatewayConnectionStatus",
            "modelAsString": true
          }
        },
        "ingressBytesTransferred": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The Ingress Bytes Transferred in this connection"
        },
        "egressBytesTransferred": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The Egress Bytes Transferred in this connection"
        },
        "lastConnectionEstablishedUtcTime": {
          "readOnly": true,
          "type": "string",
          "description": "The time at which connection was established in Utc format."
        }
      },
      "description": "VirtualNetworkGatewayConnection properties"
    },
    "VirtualNetworkGatewayConnectionPropertiesFormat": {
      "properties": {
        "authorizationKey": {
          "type": "string",
          "description": "The authorizationKey."
        },
        "virtualNetworkGateway1": {
          "$ref": "#/definitions/VirtualNetworkGateway"
        },
        "virtualNetworkGateway2": {
          "$ref": "#/definitions/VirtualNetworkGateway"
        },
        "localNetworkGateway2": {
          "$ref": "#/definitions/LocalNetworkGateway"
        },
        "connectionType": {
          "type": "string",
          "description": "Gateway connection type. Possible values are: 'Ipsec','Vnet2Vnet','ExpressRoute', and 'VPNClient.",
          "enum": [
            "IPsec",
            "Vnet2Vnet",
            "ExpressRoute",
            "VPNClient"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkGatewayConnectionType",
            "modelAsString": true
          }
        },
        "routingWeight": {
          "type": "integer",
          "format": "int32",
          "description": "The routing weight."
        },
        "sharedKey": {
          "type": "string",
          "description": "The IPSec shared key."
        },
        "connectionStatus": {
          "readOnly": true,
          "type": "string",
          "description": "Virtual network Gateway connection status. Possible values are 'Unknown', 'Connecting', 'Connected' and 'NotConnected'.",
          "enum": [
            "Unknown",
            "Connecting",
            "Connected",
            "NotConnected"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkGatewayConnectionStatus",
            "modelAsString": true
          }
        },
        "tunnelConnectionStatus": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TunnelConnectionHealth"
          },
          "description": "Collection of all tunnels' connection health status."
        },
        "egressBytesTransferred": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The egress bytes transferred in this connection."
        },
        "ingressBytesTransferred": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The ingress bytes transferred in this connection."
        },
        "peer": {
          "$ref": "#/definitions/SubResource",
          "description": "The reference to peerings resource."
        },
        "enableBgp": {
          "type": "boolean",
          "description": "EnableBgp flag"
        },
        "usePolicyBasedTrafficSelectors": {
          "type": "boolean",
          "description": "Enable policy-based traffic selectors."
        },
        "ipsecPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpsecPolicy"
          },
          "description": "The IPSec Policies to be considered by this connection."
        },
        "resourceGuid": {
          "type": "string",
          "description": "The resource GUID property of the VirtualNetworkGatewayConnection resource."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state of the VirtualNetworkGatewayConnection resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "required": [
        "virtualNetworkGateway1",
        "connectionType"
      ],
      "description": "VirtualNetworkGatewayConnection properties"
    },
    "VirtualNetworkGatewayConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkGatewayConnectionPropertiesFormat"
        },
        "etag": {
          "type": "string",
          "description": "Gets a unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "A common class for general resource information"
    },
    "VirtualNetworkGatewayConnectionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkGatewayConnection"
          },
          "description": "Gets a list of VirtualNetworkGatewayConnection resources that exists in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the ListVirtualNetworkGatewayConnections API service call"
    },
    "ConnectionResetSharedKey": {
      "properties": {
        "keyLength": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 128,
          "description": "The virtual network connection reset shared key length, should between 1 and 128."
        }
      },
      "required": [
        "keyLength"
      ],
      "description": "The virtual network connection reset shared key"
    },
    "ConnectionSharedKey": {
      "properties": {
        "value": {
          "type": "string",
          "description": "The virtual network connection shared key value."
        }
      },
      "required": [
        "value"
      ],
      "description": "Response for GetConnectionSharedKey API service call"
    },
    "IpsecPolicy": {
      "properties": {
        "saLifeTimeSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel."
        },
        "saDataSizeKilobytes": {
          "type": "integer",
          "format": "int32",
          "description": "The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel."
        },
        "ipsecEncryption": {
          "type": "string",
          "description": "The IPSec encryption algorithm (IKE phase 1).",
          "enum": [
            "None",
            "DES",
            "DES3",
            "AES128",
            "AES192",
            "AES256",
            "GCMAES128",
            "GCMAES192",
            "GCMAES256"
          ],
          "x-ms-enum": {
            "name": "IpsecEncryption",
            "modelAsString": true
          }
        },
        "ipsecIntegrity": {
          "type": "string",
          "description": "The IPSec integrity algorithm (IKE phase 1).",
          "enum": [
            "MD5",
            "SHA1",
            "SHA256",
            "GCMAES128",
            "GCMAES192",
            "GCMAES256"
          ],
          "x-ms-enum": {
            "name": "IpsecIntegrity",
            "modelAsString": true
          }
        },
        "ikeEncryption": {
          "type": "string",
          "description": "The IKE encryption algorithm (IKE phase 2).",
          "enum": [
            "DES",
            "DES3",
            "AES128",
            "AES192",
            "AES256"
          ],
          "x-ms-enum": {
            "name": "IkeEncryption",
            "modelAsString": true
          }
        },
        "ikeIntegrity": {
          "type": "string",
          "description": "The IKE integrity algorithm (IKE phase 2).",
          "enum": [
            "MD5",
            "SHA1",
            "SHA256",
            "SHA384"
          ],
          "x-ms-enum": {
            "name": "IkeIntegrity",
            "modelAsString": true
          }
        },
        "dhGroup": {
          "type": "string",
          "description": "The DH Groups used in IKE Phase 1 for initial SA.",
          "enum": [
            "None",
            "DHGroup1",
            "DHGroup2",
            "DHGroup14",
            "DHGroup2048",
            "ECP256",
            "ECP384",
            "DHGroup24"
          ],
          "x-ms-enum": {
            "name": "DhGroup",
            "modelAsString": true
          }
        },
        "pfsGroup": {
          "type": "string",
          "description": "The DH Groups used in IKE Phase 2 for new child SA.",
          "enum": [
            "None",
            "PFS1",
            "PFS2",
            "PFS2048",
            "ECP256",
            "ECP384",
            "PFS24"
          ],
          "x-ms-enum": {
            "name": "PfsGroup",
            "modelAsString": true
          }
        }
      },
      "required": [
        "saLifeTimeSeconds",
        "saDataSizeKilobytes",
        "ipsecEncryption",
        "ipsecIntegrity",
        "ikeEncryption",
        "ikeIntegrity",
        "dhGroup",
        "pfsGroup"
      ],
      "description": "An IPSec Policy configuration for a virtual network gateway connection"
    },
    "LocalNetworkGatewayPropertiesFormat": {
      "properties": {
        "localNetworkAddressSpace": {
          "$ref": "#/definitions/AddressSpace",
          "description": "Local network site address space."
        },
        "gatewayIpAddress": {
          "type": "string",
          "description": "IP address of local network gateway."
        },
        "bgpSettings": {
          "$ref": "#/definitions/BgpSettings",
          "description": "Local network gateway's BGP speaker settings."
        },
        "resourceGuid": {
          "type": "string",
          "description": "The resource GUID property of the LocalNetworkGateway resource."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state of the LocalNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "description": "LocalNetworkGateway properties"
    },
    "LocalNetworkGateway": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LocalNetworkGatewayPropertiesFormat"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "A common class for general resource information"
    },
    "LocalNetworkGatewayListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocalNetworkGateway"
          },
          "description": "A list of local network gateways that exists in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for ListLocalNetworkGateways API service call."
    },
    "Resource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "x-ms-azure-resource": true
    },
    "AddressSpace": {
      "properties": {
        "addressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of address blocks reserved for this virtual network in CIDR notation."
        }
      },
      "description": "AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network."
    },
    "SubResource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      },
      "x-ms-azure-resource": true
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version."
    }
  },
  "x-internal-toc-name": "Local Network Gateways"
}
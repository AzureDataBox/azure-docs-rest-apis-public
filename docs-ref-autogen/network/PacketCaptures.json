{
  "swagger": "2.0",
  "info": {
    "title": "NetworkManagementClient",
    "description": "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.",
    "version": "2017-03-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "text/json"
  ],
  "produces": [
    "application/json",
    "text/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}": {
      "put": {
        "tags": [
          "PacketCaptures"
        ],
        "operationId": "PacketCaptures_Create",
        "x-ms-long-running-operation": true,
        "description": "Create and start a packet capture on the specified VM.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "packetCaptureName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the packet capture session."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PacketCapture"
            },
            "description": "Parameters that define the create packet capture operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Request successful. The operation returns the resulting packet capture session.",
            "schema": {
              "$ref": "#/definitions/PacketCaptureResult"
            }
          }
        }
      },
      "get": {
        "tags": [
          "PacketCaptures"
        ],
        "operationId": "PacketCaptures_Get",
        "description": "Gets a packet capture session by name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "packetCaptureName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the packet capture session."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a packet capture session.",
            "schema": {
              "$ref": "#/definitions/PacketCaptureResult"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PacketCaptures"
        ],
        "operationId": "PacketCaptures_Delete",
        "x-ms-long-running-operation": true,
        "description": "Deletes the specified packet capture session.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "packetCaptureName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the packet capture session."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/stop": {
      "post": {
        "tags": [
          "PacketCaptures"
        ],
        "operationId": "PacketCaptures_Stop",
        "x-ms-long-running-operation": true,
        "description": "Stops a specified packet capture session.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "packetCaptureName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the packet capture session."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation stops the packet capture session."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/queryStatus": {
      "post": {
        "tags": [
          "PacketCaptures"
        ],
        "operationId": "PacketCaptures_GetStatus",
        "x-ms-long-running-operation": true,
        "description": "Query the status of a running packet capture session.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Watcher resource."
          },
          {
            "name": "packetCaptureName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name given to the packet capture session."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful query of packet capture status.",
            "schema": {
              "$ref": "#/definitions/PacketCaptureQueryStatusResult"
            }
          },
          "202": {
            "description": "Accepted query status of packet capture.",
            "schema": {
              "$ref": "#/definitions/PacketCaptureQueryStatusResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures": {
      "get": {
        "tags": [
          "PacketCaptures"
        ],
        "operationId": "PacketCaptures_List",
        "description": "Lists all packet capture sessions within the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Watcher resource."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful packet capture enumeration request.",
            "schema": {
              "$ref": "#/definitions/PacketCaptureListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    }
  },
  "definitions": {
    "NetworkWatcher": {
      "properties": {
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkWatcherPropertiesFormat"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Network watcher in a resource group."
    },
    "NetworkWatcherPropertiesFormat": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Updating",
            "Deleting",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "description": "The provisioning state of the resource."
        }
      },
      "description": "The network watcher properties."
    },
    "NetworkWatcherListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkWatcher"
          }
        }
      },
      "description": "List of network watcher resources."
    },
    "TopologyParameters": {
      "required": [
        "targetResourceGroupName"
      ],
      "properties": {
        "targetResourceGroupName": {
          "type": "string",
          "description": "The name of the target resource group to perform topology on."
        }
      },
      "description": "Parameters that define the representation of topology."
    },
    "Topology": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "GUID representing the operation id."
        },
        "createdDateTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The datetime when the topology was initially created for the resource group."
        },
        "lastModified": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The datetime when the topology was last modified."
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TopologyResource"
          }
        }
      },
      "description": "Topology of the specified resource group."
    },
    "TopologyResource": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the resource."
        },
        "id": {
          "type": "string",
          "description": "ID of the resource."
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "associations": {
          "type": "array",
          "description": "Holds the associations the resource has with other resources in the resource group.",
          "items": {
            "$ref": "#/definitions/TopologyAssociation"
          }
        }
      },
      "description": "The network resource topology information for the given resource group."
    },
    "TopologyAssociation": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource that is associated with the parent resource."
        },
        "resourceId": {
          "type": "string",
          "description": "The ID of the resource that is associated with the parent resource."
        },
        "associationType": {
          "type": "string",
          "enum": [
            "Associated",
            "Contains"
          ],
          "x-ms-enum": {
            "name": "AssociationType",
            "modelAsString": true
          },
          "description": "The association type of the child resource to the parent resource."
        }
      },
      "description": "Resources that have an association with the parent resource."
    },
    "VerificationIPFlowParameters": {
      "description": "Parameters that define the IP flow to be verified.",
      "required": [
        "targetResourceId",
        "direction",
        "protocol",
        "localPort",
        "remotePort",
        "localIPAddress",
        "remoteIPAddress"
      ],
      "properties": {
        "targetResourceId": {
          "type": "string",
          "description": "The ID of the target resource to perform next-hop on."
        },
        "direction": {
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "x-ms-enum": {
            "name": "Direction",
            "modelAsString": true
          },
          "description": "The direction of the packet represented as a 5-tuple."
        },
        "protocol": {
          "type": "string",
          "enum": [
            "TCP",
            "UDP"
          ],
          "x-ms-enum": {
            "name": "Protocol",
            "modelAsString": true
          },
          "description": "Protocol to be verified on."
        },
        "localPort": {
          "type": "string",
          "description": "The local port. Acceptable values are a single integer in the range (0-65535). Support for * for the source port, which depends on the direction."
        },
        "remotePort": {
          "type": "string",
          "description": "The remote port. Acceptable values are a single integer in the range (0-65535). Support for * for the source port, which depends on the direction."
        },
        "localIPAddress": {
          "type": "string",
          "description": "The local IP address. Acceptable values are valid IPv4 addresses."
        },
        "remoteIPAddress": {
          "type": "string",
          "description": "The remote IP address. Acceptable values are valid IPv4 addresses."
        },
        "targetNicResourceId": {
          "type": "string",
          "description": "The NIC ID. (If VM has multiple NICs and IP forwarding is enabled on any of them, then this parameter must be specified. Otherwise optional)."
        }
      }
    },
    "VerificationIPFlowResult": {
      "description": "Results of IP flow verification on the target resource.",
      "properties": {
        "access": {
          "type": "string",
          "enum": [
            "Allow",
            "Deny"
          ],
          "x-ms-enum": {
            "name": "Access",
            "modelAsString": true
          },
          "description": "Indicates whether the traffic is allowed or denied."
        },
        "ruleName": {
          "type": "string",
          "description": "Name of the rule. If input is not matched against any security rule, it is not displayed."
        }
      }
    },
    "NextHopParameters": {
      "description": "Parameters that define the source and destination endpoint.",
      "required": [
        "targetResourceId",
        "sourceIPAddress",
        "destinationIPAddress"
      ],
      "properties": {
        "targetResourceId": {
          "type": "string",
          "description": "The resource identifier of the target resource against which the action is to be performed."
        },
        "sourceIPAddress": {
          "type": "string",
          "description": "The source IP address."
        },
        "destinationIPAddress": {
          "type": "string",
          "description": "The destination IP address."
        },
        "targetNicResourceId": {
          "type": "string",
          "description": "The NIC ID. (If VM has multiple NICs and IP forwarding is enabled on any of the nics, then this parameter must be specified. Otherwise optional)."
        }
      }
    },
    "NextHopResult": {
      "description": "The information about next hop from the specified VM.",
      "properties": {
        "nextHopType": {
          "type": "string",
          "enum": [
            "Internet",
            "VirtualAppliance",
            "VirtualNetworkGateway",
            "VnetLocal",
            "HyperNetGateway",
            "None"
          ],
          "x-ms-enum": {
            "name": "NextHopType",
            "modelAsString": true
          },
          "description": "Next hop type."
        },
        "nextHopIpAddress": {
          "type": "string",
          "description": "Next hop IP Address"
        },
        "routeTableId": {
          "type": "string",
          "description": "The resource identifier for the route table associated with the route being returned. If the route being returned does not correspond to any user created routes then this field will be the string 'System Route'."
        }
      }
    },
    "SecurityGroupViewParameters": {
      "description": "Parameters that define the VM to check security groups for.",
      "required": [
        "targetResourceId"
      ],
      "properties": {
        "targetResourceId": {
          "type": "string",
          "description": "ID of the target VM."
        }
      }
    },
    "SecurityGroupViewResult": {
      "description": "The information about security rules applied to the specified VM.",
      "properties": {
        "networkInterfaces": {
          "type": "array",
          "description": "List of network interfaces on the specified VM.",
          "items": {
            "$ref": "#/definitions/SecurityGroupNetworkInterface"
          }
        }
      }
    },
    "SecurityGroupNetworkInterface": {
      "description": "Network interface and all its associated security rules.",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the network interface."
        },
        "securityRuleAssociations": {
          "$ref": "#/definitions/SecurityRuleAssociations"
        }
      }
    },
    "SecurityRuleAssociations": {
      "description": "All security rules associated with the network interface.",
      "properties": {
        "networkInterfaceAssociation": {
          "$ref": "#/definitions/NetworkInterfaceAssociation"
        },
        "subnetAssociation": {
          "$ref": "#/definitions/SubnetAssociation"
        },
        "defaultSecurityRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityRule"
          },
          "description": "Collection of default security rules of the network security group."
        },
        "effectiveSecurityRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EffectiveNetworkSecurityRule"
          },
          "description": "Collection of effective security rules."
        }
      }
    },
    "NetworkInterfaceAssociation": {
      "description": "Network interface and its custom security rules.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Network interface ID."
        },
        "securityRules": {
          "type": "array",
          "description": "Collection of custom security rules.",
          "items": {
            "$ref": "#/definitions/SecurityRule"
          }
        }
      }
    },
    "SubnetAssociation": {
      "description": "Network interface and its custom security rules.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Subnet ID."
        },
        "securityRules": {
          "type": "array",
          "description": "Collection of custom security rules.",
          "items": {
            "$ref": "#/definitions/SecurityRule"
          }
        }
      }
    },
    "PacketCapture": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PacketCaptureParameters"
        }
      },
      "required": [
        "properties"
      ],
      "description": "Parameters that define the create packet capture operation."
    },
    "PacketCaptureParameters": {
      "properties": {
        "target": {
          "type": "string",
          "description": "The ID of the targeted resource, only VM is currently supported."
        },
        "bytesToCapturePerPacket": {
          "type": "integer",
          "default": 0,
          "description": "Number of bytes captured per packet, the remaining bytes are truncated."
        },
        "totalBytesPerSession": {
          "type": "integer",
          "default": 1073741824,
          "description": "Maximum size of the capture output."
        },
        "timeLimitInSeconds": {
          "type": "integer",
          "default": 18000,
          "description": "Maximum duration of the capture session in seconds."
        },
        "storageLocation": {
          "$ref": "#/definitions/PacketCaptureStorageLocation"
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PacketCaptureFilter"
          }
        }
      },
      "required": [
        "target",
        "storageLocation"
      ],
      "description": "Parameters that define the create packet capture operation."
    },
    "PacketCaptureStorageLocation": {
      "properties": {
        "storageId": {
          "type": "string",
          "description": "The ID of the storage account to save the packet capture session. Required if no local file path is provided."
        },
        "storagePath": {
          "type": "string",
          "description": "The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture."
        },
        "filePath": {
          "type": "string",
          "description": "A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional."
        }
      },
      "description": "Describes the storage location for a packet capture session."
    },
    "PacketCaptureFilter": {
      "properties": {
        "protocol": {
          "type": "string",
          "enum": [
            "TCP",
            "UDP",
            "Any"
          ],
          "x-ms-enum": {
            "name": "PcProtocol",
            "modelAsString": true
          },
          "default": "Any",
          "description": "Protocol to be filtered on."
        },
        "localIPAddress": {
          "type": "string",
          "description": "Local IP Address to be filtered on. Notation: \"127.0.0.1\" for single address entry. \"127.0.0.1-127.0.0.255\" for range. \"127.0.0.1;127.0.0.5\"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."
        },
        "remoteIPAddress": {
          "type": "string",
          "description": "Local IP Address to be filtered on. Notation: \"127.0.0.1\" for single address entry. \"127.0.0.1-127.0.0.255\" for range. \"127.0.0.1;127.0.0.5;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."
        },
        "localPort": {
          "type": "string",
          "description": "Local port to be filtered on. Notation: \"80\" for single port entry.\"80-85\" for range. \"80;443;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."
        },
        "remotePort": {
          "type": "string",
          "description": "Remote port to be filtered on. Notation: \"80\" for single port entry.\"80-85\" for range. \"80;443;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."
        }
      },
      "description": "Filter that is applied to packet capture request. Multiple filters can be applied."
    },
    "PacketCaptureListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PacketCaptureResult"
          },
          "description": "Information about packet capture sessions."
        }
      },
      "description": "List of packet capture sessions."
    },
    "PacketCaptureResult": {
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Name of the packet capture session."
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "ID of the packet capture operation."
        },
        "etag": {
          "type": "string",
          "default": "A unique read-only string that changes whenever the resource is updated."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PacketCaptureResultProperties"
        }
      },
      "description": "Information about packet capture session."
    },
    "PacketCaptureResultProperties": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Updating",
            "Deleting",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "description": "The provisioning state of the packet capture session."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PacketCaptureParameters"
        }
      ],
      "description": "Describes the properties of a packet capture session."
    },
    "PacketCaptureQueryStatusResult": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the packet capture resource."
        },
        "id": {
          "type": "string",
          "description": "The ID of the packet capture resource."
        },
        "captureStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the packet capture session."
        },
        "packetCaptureStatus": {
          "type": "string",
          "enum": [
            "NotStarted",
            "Running",
            "Stopped",
            "Error",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "PcStatus",
            "modelAsString": true
          },
          "description": "The status of the packet capture session."
        },
        "stopReason": {
          "type": "string",
          "description": "The reason the current packet capture session was stopped."
        },
        "packetCaptureError": {
          "type": "array",
          "description": "List of errors of packet capture session.",
          "items": {
            "type": "string",
            "enum": [
              "InternalError",
              "AgentStopped",
              "CaptureFailed",
              "LocalFileFailed",
              "StorageFailed"
            ],
            "x-ms-enum": {
              "name": "PcError",
              "modelAsString": true
            }
          }
        }
      },
      "description": "Status of packet capture session."
    },
    "TroubleshootingParameters": {
      "description": "Parameters that define the resource to troubleshoot.",
      "required": [
        "targetResourceId",
        "properties"
      ],
      "properties": {
        "targetResourceId": {
          "description": "The target resource to troubleshoot.",
          "type": "string"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TroubleshootingProperties"
        }
      }
    },
    "QueryTroubleshootingParameters": {
      "description": "Parameters that define the resource to query the troubleshooting result.",
      "required": [
        "targetResourceId"
      ],
      "properties": {
        "targetResourceId": {
          "description": "The target resource ID to query the troubleshooting result.",
          "type": "string"
        }
      }
    },
    "TroubleshootingProperties": {
      "description": "Storage location provided for troubleshoot.",
      "required": [
        "storageId",
        "storagePath"
      ],
      "properties": {
        "storageId": {
          "description": "The ID for the storage account to save the troubleshoot result.",
          "type": "string"
        },
        "storagePath": {
          "description": "The path to the blob to save the troubleshoot result in.",
          "type": "string"
        }
      }
    },
    "TroubleshootingResult": {
      "description": "Troubleshooting information gained from specified resource.",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the troubleshooting."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the troubleshooting."
        },
        "code": {
          "type": "string",
          "description": "The result code of the troubleshooting."
        },
        "results": {
          "type": "array",
          "description": "Information from troubleshooting.",
          "items": {
            "$ref": "#/definitions/TroubleshootingDetails"
          }
        }
      }
    },
    "TroubleshootingDetails": {
      "description": "Information gained from troubleshooting of specified resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the get troubleshoot operation."
        },
        "reasonType": {
          "type": "string",
          "description": "Reason type of failure."
        },
        "summary": {
          "type": "string",
          "description": "A summary of troubleshooting."
        },
        "detail": {
          "type": "string",
          "description": "Details on troubleshooting results."
        },
        "recommendedActions": {
          "type": "array",
          "description": "List of recommended actions.",
          "items": {
            "$ref": "#/definitions/TroubleshootingRecommendedActions"
          }
        }
      }
    },
    "TroubleshootingRecommendedActions": {
      "description": "Recommended actions based on discovered issues.",
      "properties": {
        "actionId": {
          "description": "ID of the recommended action.",
          "type": "string"
        },
        "actionText": {
          "description": "Description of recommended actions.",
          "type": "string"
        },
        "actionUri": {
          "description": "The uri linking to a documentation for the recommended troubleshooting actions.",
          "type": "string"
        },
        "actionUriText": {
          "description": "The information from the URI for the recommended troubleshooting actions.",
          "type": "string"
        }
      }
    },
    "FlowLogProperties": {
      "description": "Parameters that define the configuration of flow log.",
      "required": [
        "storageId",
        "enabled"
      ],
      "properties": {
        "storageId": {
          "description": "ID of the storage account which is used to store the flow log.",
          "type": "string"
        },
        "enabled": {
          "description": "Flag to enable/disable flow logging.",
          "type": "boolean"
        },
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicyParameters"
        }
      }
    },
    "FlowLogStatusParameters": {
      "description": "Parameters that define a resource to query flow log status.",
      "required": [
        "targetResourceId"
      ],
      "properties": {
        "targetResourceId": {
          "description": "The target resource where getting the flow logging status.",
          "type": "string"
        }
      }
    },
    "RetentionPolicyParameters": {
      "description": "Parameters that define the retention policy for flow log.",
      "properties": {
        "days": {
          "description": "Number of days to retain flow log records.",
          "type": "integer",
          "default": 0
        },
        "enabled": {
          "description": "Flag to enable/disable retention.",
          "type": "boolean",
          "default": false
        }
      }
    },
    "FlowLogInformation": {
      "description": "Information on the configuration of flow log.",
      "required": [
        "targetResourceId",
        "properties"
      ],
      "properties": {
        "targetResourceId": {
          "description": "The ID of the resource to configure for flow logging.",
          "type": "string"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FlowLogProperties"
        }
      }
    },
    "ConnectivityParameters": {
      "description": "Parameters that determine how the connectivity check will be performed.",
      "required": [
        "source",
        "destination"
      ],
      "properties": {
        "source": {
          "$ref": "#/definitions/ConnectivitySource"
        },
        "destination": {
          "$ref": "#/definitions/ConnectivityDestination"
        }
      }
    },
    "ConnectivitySource": {
      "description": "Parameters that define the source of the connection.",
      "required": [
        "resourceId"
      ],
      "properties": {
        "resourceId": {
          "description": "The ID of the resource from which a connectivity check will be initiated.",
          "type": "string"
        },
        "port": {
          "description": "The source port from which a connectivity check will be performed.",
          "type": "integer"
        }
      }
    },
    "ConnectivityDestination": {
      "description": "Parameters that define destination of connection.",
      "properties": {
        "resourceId": {
          "description": "The ID of the resource to which a connection attempt will be made.",
          "type": "string"
        },
        "address": {
          "description": "The IP address or URI the resource to which a connection attempt will be made.",
          "type": "string"
        },
        "port": {
          "description": "Port on which check connectivity will be performed.",
          "type": "integer"
        }
      }
    },
    "ConnectivityInformation": {
      "description": "Information on the connectivity status.",
      "properties": {
        "hops": {
          "readOnly": true,
          "type": "array",
          "description": "List of hops between the source and the destination.",
          "items": {
            "$ref": "#/definitions/ConnectivityHop"
          }
        },
        "connectionStatus": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Unknown",
            "Connected",
            "Disconnected",
            "Degraded"
          ],
          "x-ms-enum": {
            "name": "ConnectionStatus",
            "modelAsString": true
          },
          "description": "The connection status."
        },
        "avgLatencyInMs": {
          "description": "Average latency in milliseconds.",
          "readOnly": true,
          "type": "integer"
        },
        "minLatencyInMs": {
          "description": "Minimum latency in milliseconds.",
          "readOnly": true,
          "type": "integer"
        },
        "maxLatencyInMs": {
          "description": "Maximum latency in milliseconds.",
          "readOnly": true,
          "type": "integer"
        },
        "probesSent": {
          "description": "Total number of probes sent.",
          "readOnly": true,
          "type": "integer"
        },
        "probesFailed": {
          "description": "Number of failed probes.",
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "ConnectivityHop": {
      "description": "Information about a hop between the source and the destination.",
      "properties": {
        "type": {
          "description": "The type of the hop.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the hop.",
          "readOnly": true,
          "type": "string"
        },
        "address": {
          "description": "The IP address of the hop.",
          "readOnly": true,
          "type": "string"
        },
        "resourceId": {
          "description": "The ID of the resource corresponding to this hop.",
          "readOnly": true,
          "type": "string"
        },
        "nextHopIds": {
          "readOnly": true,
          "type": "array",
          "description": "List of next hop identifiers.",
          "items": {
            "type": "string"
          }
        },
        "issues": {
          "readOnly": true,
          "type": "array",
          "description": "List of issues.",
          "items": {
            "$ref": "#/definitions/ConnectivityIssue"
          }
        }
      }
    },
    "ConnectivityIssue": {
      "description": "Information about an issue encountered in the process of checking for connectivity.",
      "properties": {
        "origin": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Local",
            "Inbound",
            "Outbound"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "description": "The origin of the issue."
        },
        "severity": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Error",
            "Warning"
          ],
          "x-ms-enum": {
            "name": "Severity",
            "modelAsString": true
          },
          "description": "The severity of the issue."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Unknown",
            "AgentStopped",
            "GuestFirewall",
            "DnsResolution",
            "SocketBind",
            "NetworkSecurityRule",
            "UserDefinedRoute",
            "PortThrottled",
            "Platform"
          ],
          "x-ms-enum": {
            "name": "IssueType",
            "modelAsString": true
          },
          "description": "The type of issue."
        },
        "context": {
          "readOnly": true,
          "type": "array",
          "description": "Provides additional context on the issue.",
          "items": {
            "$ref": "#/definitions/IssueContext"
          }
        }
      }
    },
    "IssueContext": {
      "description": "A key-value pair that provides additional context on the issue.",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "NetworkInterfaceDnsSettings": {
      "properties": {
        "dnsServers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection."
        },
        "appliedDnsServers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs."
        },
        "internalDnsNameLabel": {
          "type": "string",
          "description": "Relative DNS name for this NIC used for internal communications between VMs in the same virtual network."
        },
        "internalFqdn": {
          "type": "string",
          "description": "Fully qualified DNS name supporting internal communications between VMs in the same virtual network."
        },
        "internalDomainNameSuffix": {
          "type": "string",
          "description": "Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix."
        }
      },
      "description": "DNS settings of a network interface."
    },
    "NetworkInterfaceIPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkInterfaceIPConfigurationPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "IPConfiguration in a network interface."
    },
    "ResourceNavigationLinkFormat": {
      "properties": {
        "linkedResourceType": {
          "type": "string",
          "description": "Resource type of the linked resource."
        },
        "link": {
          "type": "string",
          "description": "Link to the external resource"
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "Provisioning state of the ResourceNavigationLink resource."
        }
      },
      "description": "Properties of ResourceNavigationLink."
    },
    "ResourceNavigationLink": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ResourceNavigationLinkFormat"
        },
        "name": {
          "type": "string",
          "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "ResourceNavigationLink resource."
    },
    "IPConfigurationPropertiesFormat": {
      "properties": {
        "privateIPAddress": {
          "type": "string",
          "description": "The private IP address of the IP configuration."
        },
        "privateIPAllocationMethod": {
          "type": "string",
          "description": "The private IP allocation method. Possible values are 'Static' and 'Dynamic'.",
          "enum": [
            "Static",
            "Dynamic"
          ],
          "x-ms-enum": {
            "name": "IPAllocationMethod",
            "modelAsString": true
          }
        },
        "subnet": {
          "$ref": "#/definitions/Subnet",
          "description": "The reference of the subnet resource."
        },
        "publicIPAddress": {
          "$ref": "#/definitions/PublicIPAddress",
          "description": "The reference of the public IP resource."
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "description": "Properties of IP configuration."
    },
    "IPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IPConfigurationPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "IPConfiguration"
    },
    "RoutePropertiesFormat": {
      "properties": {
        "addressPrefix": {
          "type": "string",
          "description": "The destination CIDR to which the route applies."
        },
        "nextHopType": {
          "type": "string",
          "description": "The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'",
          "enum": [
            "VirtualNetworkGateway",
            "VnetLocal",
            "Internet",
            "VirtualAppliance",
            "None"
          ],
          "x-ms-enum": {
            "name": "RouteNextHopType",
            "modelAsString": true
          }
        },
        "nextHopIpAddress": {
          "type": "string",
          "description": "The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance."
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "required": [
        "nextHopType"
      ],
      "description": "Route resource"
    },
    "Route": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RoutePropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Route resource"
    },
    "RouteTablePropertiesFormat": {
      "properties": {
        "routes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Route"
          },
          "description": "Collection of routes contained within a route table."
        },
        "subnets": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subnet"
          },
          "description": "A collection of references to subnets."
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "description": "Route Table resource"
    },
    "RouteTable": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RouteTablePropertiesFormat"
        },
        "etag": {
          "type": "string",
          "description": "Gets a unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Route table resource."
    },
    "SubnetPropertiesFormat": {
      "properties": {
        "addressPrefix": {
          "type": "string",
          "description": "The address prefix for the subnet."
        },
        "networkSecurityGroup": {
          "$ref": "#/definitions/NetworkSecurityGroup",
          "description": "The reference of the NetworkSecurityGroup resource."
        },
        "routeTable": {
          "$ref": "#/definitions/RouteTable",
          "description": "The reference of the RouteTable resource."
        },
        "ipConfigurations": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPConfiguration"
          },
          "description": "Gets an array of references to the network interface IP configurations using subnet."
        },
        "resourceNavigationLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceNavigationLink"
          },
          "description": "Gets an array of references to the external resources using subnet."
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the resource."
        }
      }
    },
    "Subnet": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SubnetPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Subnet in a virtual network resource."
    },
    "NetworkInterface": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkInterfacePropertiesFormat"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A network interface in a resource group."
    },
    "NetworkSecurityGroupPropertiesFormat": {
      "properties": {
        "securityRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityRule"
          },
          "description": "A collection of security rules of the network security group."
        },
        "defaultSecurityRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityRule"
          },
          "description": "The default security rules of network security group."
        },
        "networkInterfaces": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterface"
          },
          "description": "A collection of references to network interfaces."
        },
        "subnets": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subnet"
          },
          "description": "A collection of references to subnets."
        },
        "resourceGuid": {
          "type": "string",
          "description": "The resource GUID property of the network security group resource."
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "description": "Network Security Group resource."
    },
    "NetworkSecurityGroup": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkSecurityGroupPropertiesFormat"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "NetworkSecurityGroup resource."
    },
    "NetworkInterfacePropertiesFormat": {
      "properties": {
        "virtualMachine": {
          "$ref": "#/definitions/SubResource",
          "description": "The reference of a virtual machine."
        },
        "networkSecurityGroup": {
          "$ref": "#/definitions/NetworkSecurityGroup",
          "description": "The reference of the NetworkSecurityGroup resource."
        },
        "ipConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterfaceIPConfiguration"
          },
          "description": "A list of IPConfigurations of the network interface."
        },
        "dnsSettings": {
          "$ref": "#/definitions/NetworkInterfaceDnsSettings",
          "description": "The DNS settings in network interface."
        },
        "macAddress": {
          "type": "string",
          "description": "The MAC address of the network interface."
        },
        "primary": {
          "type": "boolean",
          "description": "Gets whether this is a primary network interface on a virtual machine."
        },
        "enableAcceleratedNetworking": {
          "type": "boolean",
          "description": "If the network interface is accelerated networking enabled."
        },
        "enableIPForwarding": {
          "type": "boolean",
          "description": "Indicates whether IP forwarding is enabled on this network interface."
        },
        "resourceGuid": {
          "type": "string",
          "description": "The resource GUID property of the network interface resource."
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "description": "NetworkInterface properties. "
    },
    "PublicIPAddressDnsSettings": {
      "properties": {
        "domainNameLabel": {
          "type": "string",
          "description": "Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system."
        },
        "fqdn": {
          "type": "string",
          "description": "Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone."
        },
        "reverseFqdn": {
          "type": "string",
          "description": "Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. "
        }
      },
      "description": "Contains FQDN of the DNS record associated with the public IP address"
    },
    "PublicIPAddressPropertiesFormat": {
      "properties": {
        "publicIPAllocationMethod": {
          "type": "string",
          "description": "The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.",
          "enum": [
            "Static",
            "Dynamic"
          ],
          "x-ms-enum": {
            "name": "IPAllocationMethod",
            "modelAsString": true
          }
        },
        "publicIPAddressVersion": {
          "type": "string",
          "description": "The public IP address version. Possible values are: 'IPv4' and 'IPv6'.",
          "enum": [
            "IPv4",
            "IPv6"
          ],
          "x-ms-enum": {
            "name": "IPVersion",
            "modelAsString": true
          }
        },
        "ipConfiguration": {
          "readOnly": true,
          "$ref": "#/definitions/IPConfiguration"
        },
        "dnsSettings": {
          "$ref": "#/definitions/PublicIPAddressDnsSettings",
          "description": "The FQDN of the DNS record associated with the public IP address."
        },
        "ipAddress": {
          "type": "string"
        },
        "idleTimeoutInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "The idle timeout of the public IP address."
        },
        "resourceGuid": {
          "type": "string",
          "description": "The resource GUID property of the public IP resource."
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "description": "Public IP address properties."
    },
    "PublicIPAddress": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PublicIPAddressPropertiesFormat"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Public IP address resource."
    },
    "Resource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "x-ms-azure-resource": true
    },
    "InboundNatRulePropertiesFormat": {
      "properties": {
        "frontendIPConfiguration": {
          "$ref": "#/definitions/SubResource",
          "description": "A reference to frontend IP addresses."
        },
        "backendIPConfiguration": {
          "readOnly": true,
          "$ref": "#/definitions/NetworkInterfaceIPConfiguration",
          "description": "A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backed IP."
        },
        "protocol": {
          "type": "string",
          "description": "The transport protocol for the endpoint. Possible values are: 'Udp' or 'Tcp'",
          "enum": [
            "Udp",
            "Tcp"
          ],
          "x-ms-enum": {
            "name": "TransportProtocol",
            "modelAsString": true
          }
        },
        "frontendPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port for the external endpoint. Port numbers for each Rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534."
        },
        "backendPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port used for the internal endpoint. Acceptable values range from 1 to 65535."
        },
        "idleTimeoutInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP."
        },
        "enableFloatingIP": {
          "type": "boolean",
          "description": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint."
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "description": "Properties of the inbound NAT rule."
    },
    "InboundNatRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/InboundNatRulePropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Inbound NAT rule of the load balancer."
    },
    "BackendAddressPoolPropertiesFormat": {
      "properties": {
        "backendIPConfigurations": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterfaceIPConfiguration"
          },
          "description": "Gets collection of references to IP addresses defined in network interfaces."
        },
        "loadBalancingRules": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "Gets load balancing rules that use this backend address pool."
        },
        "outboundNatRule": {
          "readOnly": true,
          "$ref": "#/definitions/SubResource",
          "description": "Gets outbound rules that use this backend address pool."
        },
        "provisioningState": {
          "type": "string",
          "description": "Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "description": "Properties of the backend address pool."
    },
    "BackendAddressPool": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/BackendAddressPoolPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Pool of backend IP addresses."
    },
    "ApplicationGatewayBackendAddress": {
      "properties": {
        "fqdn": {
          "type": "string",
          "description": "Fully qualified domain name (FQDN)."
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address"
        }
      },
      "description": "Backend address of an application gateway."
    },
    "ApplicationGatewayBackendAddressPoolPropertiesFormat": {
      "properties": {
        "backendIPConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterfaceIPConfiguration"
          },
          "description": "Collection of references to IPs defined in network interfaces."
        },
        "backendAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendAddress"
          },
          "description": "Backend addresses"
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "description": "Properties of Backend Address Pool of an application gateway."
    },
    "ApplicationGatewayBackendAddressPool": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayBackendAddressPoolPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Backend Address Pool of an application gateway."
    },
    "NetworkInterfaceIPConfigurationPropertiesFormat": {
      "properties": {
        "applicationGatewayBackendAddressPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendAddressPool"
          },
          "description": "The reference of ApplicationGatewayBackendAddressPool resource."
        },
        "loadBalancerBackendAddressPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackendAddressPool"
          },
          "description": "The reference of LoadBalancerBackendAddressPool resource."
        },
        "loadBalancerInboundNatRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InboundNatRule"
          },
          "description": "A list of references of LoadBalancerInboundNatRules."
        },
        "privateIPAddress": {
          "type": "string"
        },
        "privateIPAllocationMethod": {
          "type": "string",
          "description": "Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.",
          "enum": [
            "Static",
            "Dynamic"
          ],
          "x-ms-enum": {
            "name": "IPAllocationMethod",
            "modelAsString": true
          }
        },
        "privateIPAddressVersion": {
          "type": "string",
          "description": "Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.",
          "enum": [
            "IPv4",
            "IPv6"
          ],
          "x-ms-enum": {
            "name": "IPVersion",
            "modelAsString": true
          }
        },
        "subnet": {
          "$ref": "#/definitions/Subnet"
        },
        "primary": {
          "type": "boolean",
          "description": "Gets whether this is a primary customer address on the network interface."
        },
        "publicIPAddress": {
          "$ref": "#/definitions/PublicIPAddress"
        },
        "provisioningState": {
          "type": "string"
        }
      },
      "description": "Properties of IP configuration."
    },
    "SecurityRulePropertiesFormat": {
      "properties": {
        "description": {
          "type": "string",
          "description": "A description for this rule. Restricted to 140 chars."
        },
        "protocol": {
          "type": "string",
          "description": "Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.",
          "enum": [
            "Tcp",
            "Udp",
            "*"
          ],
          "x-ms-enum": {
            "name": "SecurityRuleProtocol",
            "modelAsString": true
          }
        },
        "sourcePortRange": {
          "type": "string",
          "description": "The source port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports."
        },
        "destinationPortRange": {
          "type": "string",
          "description": "The destination port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports."
        },
        "sourceAddressPrefix": {
          "type": "string",
          "description": "The CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. "
        },
        "destinationAddressPrefix": {
          "type": "string",
          "description": "The destination address prefix. CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
        },
        "access": {
          "type": "string",
          "description": "The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.",
          "enum": [
            "Allow",
            "Deny"
          ],
          "x-ms-enum": {
            "name": "SecurityRuleAccess",
            "modelAsString": true
          }
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule."
        },
        "direction": {
          "type": "string",
          "description": "The direction of the rule. The direction specifies if rule will be evaluated on incoming or outcoming traffic. Possible values are: 'Inbound' and 'Outbound'.",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "x-ms-enum": {
            "name": "SecurityRuleDirection",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        }
      },
      "required": [
        "protocol",
        "sourceAddressPrefix",
        "destinationAddressPrefix",
        "access",
        "direction"
      ]
    },
    "SecurityRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SecurityRulePropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Network security rule."
    },
    "SubResource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      },
      "x-ms-azure-resource": true
    },
    "EffectiveNetworkSecurityRule": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the security rule specified by the user (if created by the user)."
        },
        "protocol": {
          "type": "string",
          "description": "The network protocol this rule applies to. Possible values are: 'Tcp', 'Udp', and '*'.",
          "enum": [
            "Tcp",
            "Udp",
            "*"
          ],
          "x-ms-enum": {
            "name": "SecurityRuleProtocol",
            "modelAsString": true
          }
        },
        "sourcePortRange": {
          "type": "string",
          "description": "The source port or range."
        },
        "destinationPortRange": {
          "type": "string",
          "description": "The destination port or range."
        },
        "sourceAddressPrefix": {
          "type": "string",
          "description": "The source address prefix."
        },
        "destinationAddressPrefix": {
          "type": "string",
          "description": "The destination address prefix."
        },
        "expandedSourceAddressPrefix": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The expanded source address prefix."
        },
        "expandedDestinationAddressPrefix": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Expanded destination address prefix."
        },
        "access": {
          "type": "string",
          "description": "Whether network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.",
          "enum": [
            "Allow",
            "Deny"
          ],
          "x-ms-enum": {
            "name": "SecurityRuleAccess",
            "modelAsString": true
          }
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the rule."
        },
        "direction": {
          "type": "string",
          "description": "The direction of the rule. Possible values are: 'Inbound and Outbound'.",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "x-ms-enum": {
            "name": "SecurityRuleDirection",
            "modelAsString": true
          }
        }
      },
      "description": "Effective network security rules."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version."
    }
  }
}
### YamlMime:RESTOperation
summary: 'Gets the properties of the specified container service. Gets the properties of the specified container service in the specified subscription and resource group. The operation returns the properties including state, orchestrator, number of masters and agents, and FQDNs of masters and agents. '
service: Container Service
apiVersion: 2017-01-31
groupName: Container Services
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}?api-version=2017-01-31
uriParameters:
- in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
  name: subscriptionId
- in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
  name: resourceGroupName
- in: path
  isRequired: true
  description: The name of the container service in the specified subscription and resource group.
  types:
  - uid: string
  name: containerServiceName
- in: query
  isRequired: true
  description: Client Api Version.
  types:
  - uid: string
  name: api-version
responses:
- description: OK
  types:
  - uid: ContainerService
  name: 200 OK
requestHeader: []
definitions:
- name: ContainerService
  description: Container service.
  kind: object
  properties:
  - isReadyOnly: true
    description: the current deployment or provisioning state, which only appears in the response.
    types:
    - uid: string
    name: provisioningState
  - description: Properties of the orchestrator.
    types:
    - uid: ContainerServiceOrchestratorProfile
    name: orchestratorProfile
  - description: Properties for custom clusters.
    types:
    - uid: ContainerServiceCustomProfile
    name: customProfile
  - description: Properties for cluster service principals.
    types:
    - uid: ContainerServiceServicePrincipalProfile
    name: servicePrincipalProfile
  - description: Properties of master agents.
    types:
    - uid: ContainerServiceMasterProfile
    name: masterProfile
  - description: Properties of the agent pool.
    types:
    - isArray: true
      uid: ContainerServiceAgentPoolProfile
    name: agentPoolProfiles
  - description: Properties of Windows VMs.
    types:
    - uid: ContainerServiceWindowsProfile
    name: windowsProfile
  - description: Properties of Linux VMs.
    types:
    - uid: ContainerServiceLinuxProfile
    name: linuxProfile
  - description: Properties of the diagnostic agent.
    types:
    - uid: ContainerServiceDiagnosticsProfile
    name: diagnosticsProfile
  - isReadyOnly: true
    description: Resource Id
    types:
    - uid: string
    name: id
  - isReadyOnly: true
    description: Resource name
    types:
    - uid: string
    name: name
  - isReadyOnly: true
    description: Resource type
    types:
    - uid: string
    name: type
  - description: Resource location
    types:
    - uid: string
    name: location
  - description: Resource tags
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
      uid: object
    name: tags
- name: ContainerServiceOrchestratorProfile
  description: Properties of the orchestrator.
  kind: object
  properties:
  - description: The orchestrator to use to manage container service cluster resources. Valid values are Swarm, DCOS, and Custom.
    types:
    - uid: ContainerServiceOrchestratorTypes
    name: orchestratorType
- name: ContainerServiceOrchestratorTypes
  description: The orchestrator to use to manage container service cluster resources. Valid values are Swarm, DCOS, and Custom.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Swarm
  - types:
    - uid: string
    name: DCOS
  - types:
    - uid: string
    name: Custom
  - types:
    - uid: string
    name: Kubernetes
- name: ContainerServiceCustomProfile
  description: Properties for custom clusters.
  kind: object
  properties:
  - description: The name of the custom orchestrator to use.
    types:
    - uid: string
    name: orchestrator
- name: ContainerServiceServicePrincipalProfile
  description: Properties for cluster service principals.
  kind: object
  properties:
  - description: The ID for the service principal.
    types:
    - uid: string
    name: clientId
  - description: The secret password associated with the service principal.
    types:
    - uid: string
    name: secret
- name: ContainerServiceMasterProfile
  description: Properties of master agents.
  kind: object
  properties:
  - description: Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.
    types:
    - uid: "1"
    - uid: "3"
    - uid: "5"
    typesTitle: enum
    name: count
  - description: DNS prefix to be used to create the FQDN for master.
    types:
    - uid: string
    name: dnsPrefix
  - isReadyOnly: true
    description: FDQN for the master.
    types:
    - uid: string
    name: fqdn
- description: Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.
  kind: enum
  properties:
  - types:
    - uid: string
    name: "1"
  - types:
    - uid: string
    name: "3"
  - types:
    - uid: string
    name: "5"
- name: ContainerServiceAgentPoolProfile
  description: Profile for the container service agent pool.
  kind: object
  properties:
  - description: Unique name of the agent pool profile in the context of the subscription and resource group.
    types:
    - uid: string
    name: name
  - description: 'Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. '
    types:
    - uid: integer
    name: count
  - description: Size of agent VMs.
    types:
    - uid: ContainerServiceVMSizeTypes
    name: vmSize
  - description: DNS prefix to be used to create the FQDN for the agent pool.
    types:
    - uid: string
    name: dnsPrefix
  - isReadyOnly: true
    description: FDQN for the agent pool.
    types:
    - uid: string
    name: fqdn
- name: ContainerServiceVMSizeTypes
  description: Size of agent VMs.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Standard_A0
  - types:
    - uid: string
    name: Standard_A1
  - types:
    - uid: string
    name: Standard_A2
  - types:
    - uid: string
    name: Standard_A3
  - types:
    - uid: string
    name: Standard_A4
  - types:
    - uid: string
    name: Standard_A5
  - types:
    - uid: string
    name: Standard_A6
  - types:
    - uid: string
    name: Standard_A7
  - types:
    - uid: string
    name: Standard_A8
  - types:
    - uid: string
    name: Standard_A9
  - types:
    - uid: string
    name: Standard_A10
  - types:
    - uid: string
    name: Standard_A11
  - types:
    - uid: string
    name: Standard_D1
  - types:
    - uid: string
    name: Standard_D2
  - types:
    - uid: string
    name: Standard_D3
  - types:
    - uid: string
    name: Standard_D4
  - types:
    - uid: string
    name: Standard_D11
  - types:
    - uid: string
    name: Standard_D12
  - types:
    - uid: string
    name: Standard_D13
  - types:
    - uid: string
    name: Standard_D14
  - types:
    - uid: string
    name: Standard_D1_v2
  - types:
    - uid: string
    name: Standard_D2_v2
  - types:
    - uid: string
    name: Standard_D3_v2
  - types:
    - uid: string
    name: Standard_D4_v2
  - types:
    - uid: string
    name: Standard_D5_v2
  - types:
    - uid: string
    name: Standard_D11_v2
  - types:
    - uid: string
    name: Standard_D12_v2
  - types:
    - uid: string
    name: Standard_D13_v2
  - types:
    - uid: string
    name: Standard_D14_v2
  - types:
    - uid: string
    name: Standard_G1
  - types:
    - uid: string
    name: Standard_G2
  - types:
    - uid: string
    name: Standard_G3
  - types:
    - uid: string
    name: Standard_G4
  - types:
    - uid: string
    name: Standard_G5
  - types:
    - uid: string
    name: Standard_DS1
  - types:
    - uid: string
    name: Standard_DS2
  - types:
    - uid: string
    name: Standard_DS3
  - types:
    - uid: string
    name: Standard_DS4
  - types:
    - uid: string
    name: Standard_DS11
  - types:
    - uid: string
    name: Standard_DS12
  - types:
    - uid: string
    name: Standard_DS13
  - types:
    - uid: string
    name: Standard_DS14
  - types:
    - uid: string
    name: Standard_GS1
  - types:
    - uid: string
    name: Standard_GS2
  - types:
    - uid: string
    name: Standard_GS3
  - types:
    - uid: string
    name: Standard_GS4
  - types:
    - uid: string
    name: Standard_GS5
- name: ContainerServiceWindowsProfile
  description: Properties of Windows VMs.
  kind: object
  properties:
  - description: The administrator username to use for Windows VMs.
    types:
    - uid: string
    name: adminUsername
  - description: The administrator password to use for Windows VMs.
    types:
    - uid: string
    name: adminPassword
- name: ContainerServiceLinuxProfile
  description: Properties of Linux VMs.
  kind: object
  properties:
  - description: The administrator username to use for Linux VMs.
    types:
    - uid: string
    name: adminUsername
  - description: The ssh key configuration for Linux VMs.
    types:
    - uid: ContainerServiceSshConfiguration
    name: ssh
- name: ContainerServiceSshConfiguration
  description: The ssh key configuration for Linux VMs.
  kind: object
  properties:
  - description: the list of SSH public keys used to authenticate with Linux-based VMs.
    types:
    - isArray: true
      uid: ContainerServiceSshPublicKey
    name: publicKeys
- name: ContainerServiceSshPublicKey
  description: Contains information about SSH certificate public key data.
  kind: object
  properties:
  - description: Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
    types:
    - uid: string
    name: keyData
- name: ContainerServiceDiagnosticsProfile
  description: Properties of the diagnostic agent.
  kind: object
  properties:
  - description: Profile for the container service VM diagnostic agent.
    types:
    - uid: ContainerServiceVMDiagnostics
    name: vmDiagnostics
- name: ContainerServiceVMDiagnostics
  description: Profile for the container service VM diagnostic agent.
  kind: object
  properties:
  - description: Whether the VM diagnostic agent is provisioned on the VM.
    types:
    - uid: boolean
    name: enabled
  - isReadyOnly: true
    description: The URI of the storage account where diagnostics are stored.
    types:
    - uid: string
    name: storageUri
examples: []
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - description: impersonate your user account
    name: user_impersonation
name: Get
uid: management.azure.com.containerservice.containerservices.get

### YamlMime:RESTOperation
uid: keyvault.getdeletedkeys.getdeletedkeys
name: Get Deleted Keys
service: Key Vault
groupName: Get Deleted Keys
apiVersion: 2016-10-01
summary: "Lists the deleted keys in the specified vault.  \nRetrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission."
consumes:
- application/json
produces:
- application/json
paths:
- content: GET {vaultBaseUrl}/deletedkeys?api-version=2016-10-01
- content: GET {vaultBaseUrl}/deletedkeys?maxresults={maxresults}&api-version=2016-10-01
  isOptional: true
uriParameters:
- name: vaultBaseUrl
  in: path
  isRequired: true
  description: The vault name, for example https://myvault.vault.azure.net.
  types:
  - uid: string
- name: maxresults
  in: query
  description: Maximum number of results to return in a page. If not specified the service will return up to 25 results.
  types:
  - uid: integer
  format: int32
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: A response message containing a list of deleted keys in the vault along with a link to the next page of deleted keys.
  types:
  - uid: DeletedKeyListResult
- name: Other Status Codes
  description: Key Vault error response describing why the operation failed.
  types:
  - uid: KeyVaultError
requestHeader: []
definitions:
- name: DeletedKeyListResult
  description: A list of keys that have been deleted in this vault.
  kind: object
  properties:
  - name: value
    isReadyOnly: true
    description: A response message containing a list of deleted keys in the vault along with a link to the next page of deleted keys
    types:
    - uid: DeletedKeyItem
      isArray: true
  - name: nextLink
    isReadyOnly: true
    description: The URL to get the next set of deleted keys.
    types:
    - uid: string
- name: KeyVaultError
  description: The key vault error exception.
  kind: object
  properties:
  - name: error
    isReadyOnly: true
    description: The key vault server error.
    types:
    - uid: Error
- name: DeletedKeyItem
  description: The deleted key item containing the deleted key metadata and information about deletion.
  kind: object
  properties:
  - name: recoveryId
    description: The url of the recovery object, used to identify and recover the deleted key.
    types:
    - uid: string
  - name: scheduledPurgeDate
    isReadyOnly: true
    description: The time when the key is scheduled to be purged, in UTC
    types:
    - uid: integer
  - name: deletedDate
    isReadyOnly: true
    description: The time when the key was deleted, in UTC
    types:
    - uid: integer
  - name: kid
    description: Key identifier.
    types:
    - uid: string
  - name: attributes
    description: The key management attributes.
    types:
    - uid: KeyAttributes
  - name: tags
    description: Application specific metadata in the form of key-value pairs.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: managed
    isReadyOnly: true
    description: True if the key's lifetime is managed by key vault. If this is a key backing a certificate, then managed will be true.
    types:
    - uid: boolean
- name: Error
  description: The key vault server error.
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: The error message.
    types:
    - uid: string
  - name: innererror
    isReadyOnly: true
    description: The key vault server error.
    types:
    - uid: Error
- name: KeyAttributes
  description: The attributes of a key managed by the key vault service.
  kind: object
  properties:
  - name: recoveryLevel
    isReadyOnly: true
    description: Reflects the deletion recovery level currently in effect for keys in the current vault. If it contains 'Purgeable' the key can be permanently deleted by a privileged user; otherwise, only the system can purge the key, at the end of the retention interval.
    types:
    - uid: DeletionRecoveryLevel
  - name: enabled
    description: Determines whether the object is enabled.
    types:
    - uid: boolean
  - name: nbf
    description: Not before date in UTC.
    types:
    - uid: integer
  - name: exp
    description: Expiry date in UTC.
    types:
    - uid: integer
  - name: created
    isReadyOnly: true
    description: Creation time in UTC.
    types:
    - uid: integer
  - name: updated
    isReadyOnly: true
    description: Last updated time in UTC.
    types:
    - uid: integer
- name: DeletionRecoveryLevel
  description: Reflects the deletion recovery level currently in effect for keys in the current vault. If it contains 'Purgeable' the key can be permanently deleted by a privileged user; otherwise, only the system can purge the key, at the end of the retention interval.
  kind: enum
  properties:
  - name: Purgeable
    description: Soft-delete is not enabled for this vault. A DELETE operation results in immediate and irreversible data loss.
    types:
    - uid: string
  - name: Recoverable+Purgeable
    description: Soft-delete is enabled for this vault; A priveleged user may trigger an immediate, irreversible deletion(purge) of a deleted entity.
    types:
    - uid: string
  - name: Recoverable
    description: Soft-delete is enabled for this vault and purge has been disabled. A deleted entity will remain in this state until recovered, or the end of the retention interval.
    types:
    - uid: string
  - name: Recoverable+ProtectedSubscription
    description: Soft-delete is enabled for this vault, and the subscription is protected against immediate deletion.
    types:
    - uid: string
examples: []
security: []
metadata:
  source_url: https://github.com/azure/azure-rest-api-specs/blob/master/specification/keyvault/data-plane/Microsoft.KeyVault/stable/2016-10-01/keyvault.json#L825

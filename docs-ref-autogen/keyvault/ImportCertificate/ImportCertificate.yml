### YamlMime:RESTOperation
summary: Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates.
service: Key Vault
apiVersion: 2016-10-01
groupName: Import Certificate
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://{vaultBaseUrl}/certificates/{certificate-name}/import?api-version=2016-10-01
uriParameters:
- in: path
  isRequired: true
  description: The vault name, for example https://myvault.vault.azure.net.
  types:
  - uid: string
  name: vaultBaseUrl
- in: path
  isRequired: true
  description: The name of the certificate.
  types:
  - uid: string
  pattern: ^[0-9a-zA-Z-]+$
  name: certificate-name
- in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
  name: api-version
responses:
- description: Imported certificate bundle to the vault.
  types:
  - uid: CertificateBundle
  name: 200 OK
- description: Key Vault error response describing why the operation failed.
  types:
  - uid: KeyVaultError
  name: Other Status Codes
requestBody:
- parameters:
  - in: body
    isRequired: true
    description: Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key.
    types:
    - uid: string
    name: value
  - in: body
    description: If the private key in base64EncodedCertificate is encrypted, the password used for encryption.
    types:
    - uid: string
    name: pwd
  - in: body
    description: The management policy for the certificate.
    types:
    - uid: CertificatePolicy
    name: policy
  - in: body
    description: The attributes of the certificate (optional).
    types:
    - uid: CertificateAttributes
    name: attributes
  - in: body
    description: Application specific metadata in the form of key-value pairs.
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
      uid: object
    name: tags
requestHeader: []
definitions:
- name: ActionType
  description: The type of the action.
  kind: enum
  properties:
  - types:
    - uid: string
    name: EmailContacts
  - types:
    - uid: string
    name: AutoRenew
- name: DeletionRecoveryLevel
  description: Reflects the deletion recovery level currently in effect for certificates in the current vault. If it contains 'Purgeable', the certificate can be permanently deleted by a privileged user; otherwise, only the system can purge the certificate, at the end of the retention interval.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Purgeable
  - types:
    - uid: string
    name: Recoverable+Purgeable
  - types:
    - uid: string
    name: Recoverable
  - types:
    - uid: string
    name: Recoverable+ProtectedSubscription
- name: CertificateBundle
  description: A certificate bundle consists of a certificate (X509) plus its attributes.
  kind: object
  properties:
  - isReadyOnly: true
    description: The certificate id.
    types:
    - uid: string
    name: id
  - isReadyOnly: true
    description: The key id.
    types:
    - uid: string
    name: kid
  - isReadyOnly: true
    description: The secret id.
    types:
    - uid: string
    name: sid
  - isReadyOnly: true
    description: Thumbprint of the certificate.
    types:
    - uid: string
    name: x5t
  - isReadyOnly: true
    description: The management policy.
    types:
    - uid: CertificatePolicy
    name: policy
  - description: CER contents of x509 certificate.
    types:
    - uid: string
    name: cer
  - description: The content type of the secret.
    types:
    - uid: string
    name: contentType
  - description: The certificate attributes.
    types:
    - uid: CertificateAttributes
    name: attributes
  - description: Application specific metadata in the form of key-value pairs
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
      uid: object
    name: tags
- name: CertificatePolicy
  description: The management policy.
  kind: object
  properties:
  - isReadyOnly: true
    description: The certificate id.
    types:
    - uid: string
    name: id
  - description: Properties of the key backing a certificate.
    types:
    - uid: KeyProperties
    name: key_props
  - description: Properties of the secret backing a certificate.
    types:
    - uid: SecretProperties
    name: secret_props
  - description: Properties of the X509 component of a certificate.
    types:
    - uid: X509CertificateProperties
    name: x509_props
  - description: Actions that will be performed by Key Vault over the lifetime of a certificate.
    types:
    - isArray: true
      uid: LifetimeAction
    name: lifetime_actions
  - description: Parameters for the issuer of the X509 component of a certificate.
    types:
    - uid: IssuerParameters
    name: issuer
  - description: The certificate attributes.
    types:
    - uid: CertificateAttributes
    name: attributes
- name: KeyProperties
  description: Properties of the key backing a certificate.
  kind: object
  properties:
  - description: Indicates if the private key can be exported.
    types:
    - uid: boolean
    name: exportable
  - description: The key type.
    types:
    - uid: string
    name: kty
  - description: The key size in bytes. For example;  1024 or 2048.
    types:
    - uid: integer
    name: key_size
  - description: Indicates if the same key pair will be used on certificate renewal.
    types:
    - uid: boolean
    name: reuse_key
- name: SecretProperties
  description: Properties of the secret backing a certificate.
  kind: object
  properties:
  - description: The media type (MIME type).
    types:
    - uid: string
    name: contentType
- name: X509CertificateProperties
  description: Properties of the X509 component of a certificate.
  kind: object
  properties:
  - description: The subject name. Should be a valid X509 distinguished Name.
    types:
    - uid: string
    name: subject
  - description: The enhanced key usage.
    types:
    - isArray: true
      uid: string
    name: ekus
  - description: The subject alternative names.
    types:
    - uid: SubjectAlternativeNames
    name: sans
  - description: List of key usages.
    types:
    - isArray: true
      uid: string
    name: key_usage
  - description: The duration that the ceritifcate is valid in months.
    types:
    - uid: integer
    name: validity_months
- name: SubjectAlternativeNames
  description: The subject alternative names.
  kind: object
  properties:
  - description: Email addresses.
    types:
    - isArray: true
      uid: string
    name: emails
  - description: Domain names.
    types:
    - isArray: true
      uid: string
    name: dns_names
  - description: User principal names.
    types:
    - isArray: true
      uid: string
    name: upns
- name: LifetimeAction
  description: Action and its trigger that will be performed by Key Vault over the lifetime of a certificate.
  kind: object
  properties:
  - description: The condition that will execute the action.
    types:
    - uid: Trigger
    name: trigger
  - description: The action that will be executed.
    types:
    - uid: Action
    name: action
- name: Trigger
  description: The condition that will execute the action.
  kind: object
  properties:
  - description: Percentage of lifetime at which to trigger. Value should be between 1 and 99.
    types:
    - uid: integer
    name: lifetime_percentage
  - description: Days before expiry to attempt renewal. Value should be between 1 and validity_in_months multiplied by 27. If validity_in_months is 36, then value should be between 1 and 972 (36 * 27).
    types:
    - uid: integer
    name: days_before_expiry
- name: Action
  description: The action that will be executed.
  kind: object
  properties:
  - description: The type of the action.
    types:
    - uid: ActionType
    name: action_type
- name: IssuerParameters
  description: Parameters for the issuer of the X509 component of a certificate.
  kind: object
  properties:
  - description: Name of the referenced issuer object or reserved names; for example, 'Self' or 'Unknown'.
    types:
    - uid: string
    name: name
  - description: Type of certificate to be requested from the issuer provider.
    types:
    - uid: string
    name: cty
- name: CertificateAttributes
  description: The certificate attributes.
  kind: object
  properties:
  - isReadyOnly: true
    description: Reflects the deletion recovery level currently in effect for certificates in the current vault. If it contains 'Purgeable', the certificate can be permanently deleted by a privileged user; otherwise, only the system can purge the certificate, at the end of the retention interval.
    types:
    - uid: DeletionRecoveryLevel
    name: recoveryLevel
  - description: Determines whether the object is enabled.
    types:
    - uid: boolean
    name: enabled
  - description: Not before date in UTC.
    types:
    - uid: integer
    name: nbf
  - description: Expiry date in UTC.
    types:
    - uid: integer
    name: exp
  - isReadyOnly: true
    description: Creation time in UTC.
    types:
    - uid: integer
    name: created
  - isReadyOnly: true
    description: Last updated time in UTC.
    types:
    - uid: integer
    name: updated
- name: KeyVaultError
  description: The key vault error exception.
  kind: object
  properties:
  - isReadyOnly: true
    description: The key vault server error.
    types:
    - uid: Error
    name: error
- name: Error
  description: The key vault server error.
  kind: object
  properties:
  - isReadyOnly: true
    description: The error code.
    types:
    - uid: string
    name: code
  - isReadyOnly: true
    description: The error message.
    types:
    - uid: string
    name: message
  - types:
    - {}
    name: innererror
examples: []
security: []
name: ImportCertificate
uid: .keyvault.importcertificate.importcertificate

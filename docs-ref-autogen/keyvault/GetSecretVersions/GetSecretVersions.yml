### YamlMime:RESTOperation
summary: List the versions of the specified secret. The LIST VERSIONS operation can be applied to all versions having the same secret name in the same key vault. The full secret identifier and attributes are provided in the response. No values are returned for the secrets and only current versions of a secret are listed.
service: Key Vault
apiVersion: 2016-10-01
groupName: Get Secret Versions
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://{vaultBaseUrl}/secrets/{secret-name}/versions?api-version=2016-10-01
- content: GET https://{vaultBaseUrl}/secrets/{secret-name}/versions?maxresults={maxresults}&api-version=2016-10-01
  isOptional: true
uriParameters:
- in: path
  isRequired: true
  description: The vault name, for example https://myvault.vault.azure.net.
  types:
  - uid: string
  name: vaultBaseUrl
- in: path
  isRequired: true
  description: The name of the secret.
  types:
  - uid: string
  name: secret-name
- in: query
  description: Maximum number of results to return in a page. If not specified the service will return up to 25 results.
  types:
  - uid: integer
  format: int32
  name: maxresults
- in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
  name: api-version
responses:
- description: A response message containing a list of secrets along with a link to the next page of secrets
  types:
  - uid: SecretListResult
  name: 200 OK
- description: Key Vault error response describing why the operation failed.
  types:
  - uid: KeyVaultError
  name: Other Status Codes
requestHeader: []
definitions:
- name: SecretListResult
  description: The secret list result.
  kind: object
  properties:
  - isReadyOnly: true
    description: The secret item containing secret metadata.
    types:
    - isArray: true
      uid: DeletedSecretItem
    typesTitle: SecretItem[]
    name: value
  - isReadyOnly: true
    description: The URL to get the next set of secrets.
    types:
    - uid: string
    name: nextLink
- name: KeyVaultError
  description: The key vault error exception.
  kind: object
  properties:
  - isReadyOnly: true
    description: The key vault server error.
    types:
    - uid: Error
    name: error
- name: Error
  description: Error encountered, if any, during the certificate operation.
  kind: object
  properties:
  - isReadyOnly: true
    description: The error code.
    types:
    - uid: string
    name: code
  - isReadyOnly: true
    description: The error message.
    types:
    - uid: string
    name: message
  - description: ''
    types:
    - {}
    name: innererror
- name: DeletedSecretItem
  description: The deleted secret item containing metadata about the deleted secret.
  kind: object
  properties:
  - description: The url of the recovery object, used to identify and recover the deleted secret.
    types:
    - uid: string
    name: recoveryId
  - isReadyOnly: true
    description: The time when the secret is scheduled to be purged, in UTC
    types:
    - uid: integer
    name: scheduledPurgeDate
  - isReadyOnly: true
    description: The time when the secret was deleted, in UTC
    types:
    - uid: integer
    name: deletedDate
  - description: Secret identifier.
    types:
    - uid: string
    name: id
  - description: The secret management attributes.
    types:
    - uid: SecretAttributes
    name: attributes
  - description: Application specific metadata in the form of key-value pairs.
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
      uid: object
    name: tags
  - description: Type of the secret value such as a password.
    types:
    - uid: string
    name: contentType
  - isReadyOnly: true
    description: True if the secret's lifetime is managed by key vault. If this is a key backing a certificate, then managed will be true.
    types:
    - uid: boolean
    name: managed
- name: SecretAttributes
  description: The secret management attributes.
  kind: object
  properties:
  - isReadyOnly: true
    description: Reflects the deletion recovery level currently in effect for secrets in the current vault. If it contains 'Purgeable', the secret can be permanently deleted by a privileged user; otherwise, only the system can purge the secret, at the end of the retention interval.
    types:
    - uid: DeletionRecoveryLevel
    name: recoveryLevel
  - description: Determines whether the object is enabled.
    types:
    - uid: boolean
    name: enabled
  - description: Not before date in UTC.
    types:
    - uid: integer
    name: nbf
  - description: Expiry date in UTC.
    types:
    - uid: integer
    name: exp
  - isReadyOnly: true
    description: Creation time in UTC.
    types:
    - uid: integer
    name: created
  - isReadyOnly: true
    description: Last updated time in UTC.
    types:
    - uid: integer
    name: updated
- name: DeletionRecoveryLevel
  description: Reflects the deletion recovery level currently in effect for keys in the current vault. If it contains 'Purgeable' the key can be permanently deleted by a privileged user; otherwise, only the system can purge the key, at the end of the retention interval.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Purgeable
  - types:
    - uid: string
    name: Recoverable+Purgeable
  - types:
    - uid: string
    name: Recoverable
  - types:
    - uid: string
    name: Recoverable+ProtectedSubscription
examples: []
security: []
name: GetSecretVersions
uid: keyvault.getsecretversions.getsecretversions

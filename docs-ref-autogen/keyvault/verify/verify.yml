### YamlMime:RESTOperation
summary: Verifies a signature using a specified key. The VERIFY operation is applicable to symmetric keys stored in Azure Key Vault. VERIFY is not strictly necessary for asymmetric keys stored in Azure Key Vault since signature verification can be performed using the public portion of the key but this operation is supported as a convenience for callers that only have a key-reference and not the public portion of the key.
service: Key Vault
apiVersion: 2016-10-01
groupName: verify
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://{vaultBaseUrl}/keys/{key-name}/{key-version}/verify?api-version=2016-10-01
uriParameters:
- in: path
  isRequired: true
  description: The vault name, for example https://myvault.vault.azure.net.
  types:
  - uid: string
  name: vaultBaseUrl
- in: path
  isRequired: true
  description: The name of the key.
  types:
  - uid: string
  name: key-name
- in: path
  isRequired: true
  description: The version of the key.
  types:
  - uid: string
  name: key-version
- in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
  name: api-version
responses:
- description: The verification result.
  types:
  - uid: KeyVerifyResult
  name: 200 OK
- description: Key Vault error response describing why the operation failed.
  types:
  - uid: KeyVaultError
  name: Other Status Codes
requestBody:
- parameters:
  - in: body
    isRequired: true
    description: The signing/verification algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.
    types:
    - uid: JsonWebKeySignatureAlgorithm
    name: alg
  - in: body
    isRequired: true
    description: The digest used for signing.
    types:
    - uid: string
    name: digest
  - in: body
    isRequired: true
    description: The signature to be verified.
    types:
    - uid: string
    name: value
requestHeader: []
definitions:
- name: KeyVerifyResult
  description: The key verify result.
  kind: object
  properties:
  - isReadyOnly: true
    description: True if the signature is verified, otherwise false.
    types:
    - uid: boolean
    name: value
- name: KeyVaultError
  description: The key vault error exception.
  kind: object
  properties:
  - isReadyOnly: true
    description: The key vault server error.
    types:
    - uid: Error
    name: error
- name: KeyVerifyParameters
  description: The key verify parameters.
  kind: object
  properties:
  - description: The signing/verification algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.
    types:
    - uid: JsonWebKeySignatureAlgorithm
    name: alg
  - description: The digest used for signing.
    types:
    - uid: string
    name: digest
  - description: The signature to be verified.
    types:
    - uid: string
    name: value
- name: Error
  description: Error encountered, if any, during the certificate operation.
  kind: object
  properties:
  - isReadyOnly: true
    description: The error code.
    types:
    - uid: string
    name: code
  - isReadyOnly: true
    description: The error message.
    types:
    - uid: string
    name: message
  - description: ''
    types:
    - {}
    name: innererror
- name: JsonWebKeySignatureAlgorithm
  description: The signing/verification algorithm identifier. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.
  kind: enum
  properties:
  - types:
    - uid: string
    name: PS256
  - types:
    - uid: string
    name: PS384
  - types:
    - uid: string
    name: PS512
  - types:
    - uid: string
    name: RS256
  - types:
    - uid: string
    name: RS384
  - types:
    - uid: string
    name: RS512
  - types:
    - uid: string
    name: RSNULL
  - types:
    - uid: string
    name: ES256
  - types:
    - uid: string
    name: ES384
  - types:
    - uid: string
    name: ES512
  - types:
    - uid: string
    name: ECDSA256
examples: []
security: []
name: verify
uid: keyvault.verify.verify

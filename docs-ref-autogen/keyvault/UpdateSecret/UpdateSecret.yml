### YamlMime:RESTOperation
summary: Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed.
service: Key Vault
apiVersion: 2016-10-01
groupName: Update Secret
consumes:
- application/json
produces:
- application/json
paths:
- content: PATCH https://{vaultBaseUrl}/secrets/{secret-name}/{secret-version}?api-version=2016-10-01
uriParameters:
- in: path
  isRequired: true
  description: The vault name, for example https://myvault.vault.azure.net.
  types:
  - uid: string
  name: vaultBaseUrl
- in: path
  isRequired: true
  description: The name of the secret.
  types:
  - uid: string
  name: secret-name
- in: path
  isRequired: true
  description: The version of the secret.
  types:
  - uid: string
  name: secret-version
- in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
  name: api-version
responses:
- description: The updated secret.
  types:
  - uid: SecretBundle
  name: 200 OK
- description: Key Vault error response describing why the operation failed.
  types:
  - uid: KeyVaultError
  name: Other Status Codes
requestBody:
- parameters:
  - in: body
    description: Type of the secret value such as a password.
    types:
    - uid: string
    name: contentType
  - in: body
    description: The secret management attributes.
    types:
    - uid: SecretAttributes
    name: attributes
  - in: body
    description: Application specific metadata in the form of key-value pairs.
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
      uid: object
    name: tags
requestHeader: []
definitions:
- name: DeletionRecoveryLevel
  description: Reflects the deletion recovery level currently in effect for secrets in the current vault. If it contains 'Purgeable', the secret can be permanently deleted by a privileged user; otherwise, only the system can purge the secret, at the end of the retention interval.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Purgeable
  - types:
    - uid: string
    name: Recoverable+Purgeable
  - types:
    - uid: string
    name: Recoverable
  - types:
    - uid: string
    name: Recoverable+ProtectedSubscription
- name: SecretBundle
  description: A secret consisting of a value, id and its attributes.
  kind: object
  properties:
  - description: The secret value.
    types:
    - uid: string
    name: value
  - description: The secret id.
    types:
    - uid: string
    name: id
  - description: The content type of the secret.
    types:
    - uid: string
    name: contentType
  - description: The secret management attributes.
    types:
    - uid: SecretAttributes
    name: attributes
  - description: Application specific metadata in the form of key-value pairs.
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
      uid: object
    name: tags
  - isReadyOnly: true
    description: If this is a secret backing a KV certificate, then this field specifies the corresponding key backing the KV certificate.
    types:
    - uid: string
    name: kid
  - isReadyOnly: true
    description: True if the secret's lifetime is managed by key vault. If this is a secret backing a certificate, then managed will be true.
    types:
    - uid: boolean
    name: managed
- name: SecretAttributes
  description: The secret management attributes.
  kind: object
  properties:
  - isReadyOnly: true
    description: Reflects the deletion recovery level currently in effect for secrets in the current vault. If it contains 'Purgeable', the secret can be permanently deleted by a privileged user; otherwise, only the system can purge the secret, at the end of the retention interval.
    types:
    - uid: DeletionRecoveryLevel
    name: recoveryLevel
  - description: Determines whether the object is enabled.
    types:
    - uid: boolean
    name: enabled
  - description: Not before date in UTC.
    types:
    - uid: integer
    name: nbf
  - description: Expiry date in UTC.
    types:
    - uid: integer
    name: exp
  - isReadyOnly: true
    description: Creation time in UTC.
    types:
    - uid: integer
    name: created
  - isReadyOnly: true
    description: Last updated time in UTC.
    types:
    - uid: integer
    name: updated
- name: KeyVaultError
  description: The key vault error exception.
  kind: object
  properties:
  - isReadyOnly: true
    description: The key vault server error.
    types:
    - uid: Error
    name: error
- name: Error
  description: The key vault server error.
  kind: object
  properties:
  - isReadyOnly: true
    description: The error code.
    types:
    - uid: string
    name: code
  - isReadyOnly: true
    description: The error message.
    types:
    - uid: string
    name: message
  - types:
    - {}
    name: innererror
examples: []
security: []
name: UpdateSecret
uid: .keyvault.updatesecret.updatesecret

### YamlMime:RESTOperation
summary: Gets information about the Clusters associated within the specified resource group.
service: Batch AI
apiVersion: 2017-09-01-preview
groupName: Clusters
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/clusters?api-version=2017-09-01-preview
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/clusters?$filter={$filter}&$select={$select}&maxresults={maxresults}&api-version=2017-09-01-preview
  isOptional: true
uriParameters:
- in: path
  isRequired: true
  description: The subscriptionID for the Azure user.
  types:
  - uid: string
  name: subscriptionId
- in: path
  isRequired: true
  description: Name of the resource group to which the resource belongs.
  types:
  - uid: string
  pattern: ^[-\w\._]+$
  name: resourceGroupName
- in: query
  description: An OData $filter clause.. Used to filter results that are returned in the GET respnose.
  types:
  - uid: string
  name: $filter
- in: query
  description: An OData $select clause. Used to select the properties to be returned in the GET respnose.
  types:
  - uid: string
  name: $select
- in: query
  description: The maximum number of items to return in the response. A maximum of 1000 files can be returned.
  types:
  - uid: integer
  format: int32
  name: maxresults
- in: query
  isRequired: true
  description: Specifies the version of API used for this request.
  types:
  - uid: string
  name: api-version
responses:
- description: The operation was successful. The response contains a list of Cluster entities associated with the resource group.
  types:
  - uid: ClusterListResult
  name: 200 OK
- description: Error response describing why the operation failed.
  types:
  - uid: CloudError
  name: Other Status Codes
requestHeader: []
definitions:
- name: ClusterListResult
  description: Values returned by the List Clusters operation.
  kind: object
  properties:
  - description: Contains information about a Cluster.
    types:
    - isArray: true
      uid: Cluster
    name: value
  - description: The continuation token.
    types:
    - uid: string
    name: nextLink
- name: CloudError
  description: An error response from the Batch AI service.
  kind: object
  properties:
  - description: An error response from the Batch AI service.
    types:
    - uid: CloudErrorBody
    name: error
- name: Cluster
  description: Contains information about a Cluster.
  kind: object
  properties:
  - description: >-
      The size of the virtual machines in the cluster.

      All virtual machines in a cluster are the same size. For information about available VM sizes for clusters using images from the Virtual Machines Marketplace (see Sizes for Virtual Machines (Linux) or Sizes for Virtual Machines (Windows). Batch AI service supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).
    types:
    - uid: string
    name: properties.vmSize
  - description: >-
      dedicated or lowpriority.

      The default value is dedicated. The node can get preempted while the task is running if lowpriority is choosen. This is best suited if the workload is checkpointing and can be restarted.
    types:
    - uid: VmPriority
    name: properties.vmPriority
  - description: >-
      Desired scale for the Cluster.

      At least one of manual or autoScale settings must be specified. Only one of manual or autoScale settings can be specified. If autoScale settings are specified, the system automatically scales the cluster up and down (within the supplied limits) based on the pending jobs on the cluster.
    types:
    - uid: ScaleSettings
    name: properties.scaleSettings
  - description: >-
      Settings for OS image and mounted data volumes.

      Settings for OS image.
    types:
    - uid: VirtualMachineConfiguration
    name: properties.virtualMachineConfiguration
  - description: >-
      Setup to be done on all compute nodes in the Cluster.

      Use this to prepare the VM. NOTE: The volumes specified in mountVolumes are mounted first and then the setupTask is run. Therefore the setup task can use local mountPaths in its execution.
    types:
    - uid: NodeSetup
    name: properties.nodeSetup
  - description: >-
      Settings for user account of compute nodes.

      Settings for user account that gets created on each on the nodes of a cluster.
    types:
    - uid: UserAccountSettings
    name: properties.userAccountSettings
  - description: >-
      Specifies the identifier of the subnet.

      Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
    types:
    - uid: ResourceId
    name: properties.subnet
  - isReadyOnly: true
    description: The creation time of the cluster.
    types:
    - uid: string
    name: properties.creationTime
  - isReadyOnly: true
    description: >-
      Specifies the provisioning state of the cluster.

      Possible value are: creating - Specifies that the cluster is being created. succeeded - Specifies that the cluster has been created successfully. failed - Specifies that the cluster creation has failed. deleting - Specifies that the cluster is being deleted.
    types:
    - uid: ProvisioningState
    name: properties.provisioningState
  - isReadyOnly: true
    description: The provisioning state transition time of the cluster.
    types:
    - uid: string
    name: properties.provisioningStateTransitionTime
  - isReadyOnly: true
    description: >-
      Indicates whether the cluster is resizing.

      Possible values are: steady and resizing. steady state indicates that the cluster is not resizing. There are no changes to the number of compute nodes in the cluster in progress. A cluster enters this state when it is created and when no operations are being performed on the cluster to change the number of compute nodes. resizing state indicates that the cluster is resizing; that is, compute nodes are being added to or removed from the cluster.
    types:
    - uid: AllocationState
    name: properties.allocationState
  - isReadyOnly: true
    description: The time at which the cluster entered its current allocation state.
    types:
    - uid: string
    name: properties.allocationStateTransitionTime
  - description: An error response from the Batch AI service.
    types:
    - isArray: true
      uid: BatchAIError
    name: properties.errors
  - isReadyOnly: true
    description: The number of compute nodes currently assigned to the cluster.
    types:
    - uid: integer
    name: properties.currentNodeCount
  - isReadyOnly: true
    description: >-
      Counts of various node states on the cluster.

      Counts of various compute node states on the cluster.
    types:
    - uid: NodeStateCounts
    name: properties.nodeStateCounts
  - isReadyOnly: true
    description: The ID of the resource
    types:
    - uid: string
    name: id
  - isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
    name: name
  - isReadyOnly: true
    description: The type of the resource
    types:
    - uid: string
    name: type
  - isReadyOnly: true
    description: The location of the resource
    types:
    - uid: string
    name: location
  - isReadyOnly: true
    description: The tags of the resource
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
      uid: object
    name: tags
- name: CloudErrorBody
  description: An error response from the Batch AI service.
  kind: object
  properties:
  - description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
    name: code
  - description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
    name: message
  - description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
    name: target
  - description: A list of additional details about the error.
    types:
    - isArray: true
      uid: Details
    name: details
- name: VmPriority
  description: dedicated or lowpriority.
  kind: enum
  properties:
  - types:
    - uid: string
    name: dedicated
  - types:
    - uid: string
    name: lowpriority
- name: ScaleSettings
  description: Desired scale for the cluster.
  kind: object
  properties:
  - description: >-
      The scale for the cluster by manual settings

      Manual scale settings for the cluster.
    types:
    - uid: ManualScaleSettings
    name: manual
  - description: >-
      The scale for the cluster by autoscale settings

      The system automatically scales the cluster up and down (within minimumNodeCount and maximumNodeCount) based on the pending and running jobs on the cluster.
    types:
    - uid: AutoScaleSettings
    name: autoScale
- name: VirtualMachineConfiguration
  description: Settings for OS image and mounted data volumes.
  kind: object
  properties:
  - description: >-
      Reference to OS image.

      The image reference.
    types:
    - uid: ImageReference
    name: imageReference
- name: NodeSetup
  description: Setup to be done on all compute nodes in the cluster.
  kind: object
  properties:
  - description: >-
      Specifies a setup task which can be used to customize the compute nodes of the cluster. The NodeSetup task runs everytime a VM is rebooted. For that reason the task code needs to be idempotent. Generally it is used to either download static data that is required for all jobs that run on the cluster VMs or to download/install software.

      Specifies a setup task which can be used to customize the compute nodes of the cluster.
    types:
    - uid: SetupTask
    name: setupTask
  - description: >-
      Information on shared volumes to be used by jobs.

      Details of volumes to mount on the cluster.
    types:
    - uid: MountVolumes
    name: mountVolumes
- name: UserAccountSettings
  description: Settings for user account of VMs.
  kind: object
  properties:
  - description: Specifies the name of the administrator account.
    types:
    - uid: string
    name: adminUserName
  - description: SSH public keys used to authenticate with linux based VMs. This does not get returned in a GET response body.
    types:
    - uid: string
    name: adminUserSshPublicKey
  - description: Admin user Password (linux only). This does not get returned in a GET response body.
    types:
    - uid: string
    name: adminUserPassword
- name: ResourceId
  description: Specifies the identifier of the subnet.
  kind: object
  properties:
  - description: The ID of the resource
    types:
    - uid: string
    name: id
- name: ProvisioningState
  description: Specifies the provisioning state of the cluster.
  kind: enum
  properties:
  - types:
    - uid: string
    name: creating
  - types:
    - uid: string
    name: succeeded
  - types:
    - uid: string
    name: failed
  - types:
    - uid: string
    name: deleting
- name: AllocationState
  description: Indicates whether the cluster is resizing.
  kind: enum
  properties:
  - types:
    - uid: string
    name: steady
  - types:
    - uid: string
    name: resizing
- name: BatchAIError
  description: Contains details of various errors on the cluster including resize and node setup task
  kind: object
  properties:
  - description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
    name: code
  - description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
    name: message
  - description: Represents a name-value pair.
    types:
    - isArray: true
      uid: NameValuePair
    name: details
- name: NodeStateCounts
  description: Counts of various compute node states on the cluster.
  kind: object
  properties:
  - description: Number of compute nodes in idle state.
    types:
    - uid: integer
    name: idleNodeCount
  - description: Number of compute nodes which are running jobs.
    types:
    - uid: integer
    name: runningNodeCount
  - description: Number of compute nodes which are being prepared.
    types:
    - uid: integer
    name: preparingNodeCount
  - description: Number of compute nodes which are unusable.
    types:
    - uid: integer
    name: unusableNodeCount
  - description: Number of compute nodes which are leaving the cluster.
    types:
    - uid: integer
    name: leavingNodeCount
- name: ManualScaleSettings
  description: The scale for the cluster by manual settings
  kind: object
  properties:
  - description: >-
      The desired number of compute nodes in the Cluster.

      Default is 0. If autoScaleSettings are not specified, then the Cluster starts with this target.
    types:
    - uid: integer
    name: targetNodeCount
  - description: >-
      Determines what to do with the job(s) running on compute node if the Cluster size is decreasing.

      The default value is requeue.
    types:
    - uid: DeallocationOption
    name: nodeDeallocationOption
- name: AutoScaleSettings
  description: The scale for the cluster by autoscale settings
  kind: object
  properties:
  - description: Specifies the minimum number of compute nodes the cluster can have.
    types:
    - uid: integer
    name: minimumNodeCount
  - description: Specifies the maximum number of compute nodes the cluster can have.
    types:
    - uid: integer
    name: maximumNodeCount
  - description: Specifies the number of compute nodes to allocate on cluster creation. Note that this value is used only during cluster creation.
    types:
    - uid: integer
    name: initialNodeCount
- name: ImageReference
  description: Reference to OS image.
  kind: object
  properties:
  - description: Publisher of the image.
    types:
    - uid: string
    name: publisher
  - description: Offer of the image.
    types:
    - uid: string
    name: offer
  - description: SKU of the image.
    types:
    - uid: string
    name: sku
  - description: Version of the image
    types:
    - uid: string
    name: version
- name: SetupTask
  description: Specifies a setup task which can be used to customize the compute nodes of the cluster. The NodeSetup task runs everytime a VM is rebooted. For that reason the task code needs to be idempotent. Generally it is used to either download static data that is required for all jobs that run on the cluster VMs or to download/install software.
  kind: object
  properties:
  - description: Command Line to start Setup process.
    types:
    - uid: string
    name: commandLine
  - description: A collection of environment variables to set.
    types:
    - isArray: true
      uid: EnvironmentSetting
    name: environmentVariables
  - description: Specifies whether to run the setup task in elevated mode. The default value is false.
    types:
    - uid: boolean
    name: runElevated
  - description: The path where the Batch AI service will upload the stdout and stderror of setup task.
    types:
    - uid: string
    name: stdOutErrPathPrefix
- name: MountVolumes
  description: Information on shared volumes to be used by jobs.
  kind: object
  properties:
  - description: Details of the Azure File Share to mount on the cluster.
    types:
    - isArray: true
      uid: AzureFileShareReference
    name: azureFileShares
  - description: Provides required information, for the service to be able to mount Azure Blob Storage container on the cluster nodes.
    types:
    - isArray: true
      uid: AzureBlobFileSystemReference
    name: azureBlobFileSystems
  - description: Provides required information, for the service to be able to mount Azure FileShare on the cluster nodes.
    types:
    - isArray: true
      uid: FileServerReference
    name: fileServers
  - description: Details of the file system to mount on the compute cluster nodes.
    types:
    - isArray: true
      uid: UnmanagedFileSystemReference
    name: unmanagedFileSystems
- name: NameValuePair
  description: A list of additional details about the error.
  kind: object
  properties:
  - description: The name in the name-value pair.
    types:
    - uid: string
    name: name
  - description: The value in the name-value pair.
    types:
    - uid: string
    name: value
- name: DeallocationOption
  description: Determines what to do with the job(s) running on compute node if the Cluster size is decreasing.
  kind: enum
  properties:
  - types:
    - uid: string
    name: requeue
  - types:
    - uid: string
    name: terminate
  - types:
    - uid: string
    name: waitforjobcompletion
  - types:
    - uid: string
    name: unknown
- name: EnvironmentSetting
  description: Collection of environment settings.
  kind: object
  properties:
  - description: The name of the environment variable.
    types:
    - uid: string
    name: name
  - description: The value of the environment variable.
    types:
    - uid: string
    name: value
- name: AzureFileShareReference
  description: Azure File Share setup configuration.
  kind: object
  properties:
  - description: Name of the storage account.
    types:
    - uid: string
    name: accountName
  - description: URL to access the Azure File.
    types:
    - uid: string
    name: azureFileUrl
  - description: >-
      Information of the Azure File credentials.

      Credentials to access Azure File Share.
    types:
    - uid: AzureStorageCredentialsInfo
    name: credentials
  - description: >-
      Specifies the relative path on the compute node where the Azure file share will be mounted.

      Note that all file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
    types:
    - uid: string
    name: relativeMountPath
  - description: >-
      Specifies the file mode.

      Default value is 0777. Valid only if OS is linux.
    types:
    - uid: string
    name: fileMode
  - description: >-
      Specifies the directory Mode.

      Default value is 0777. Valid only if OS is linux.
    types:
    - uid: string
    name: directoryMode
- name: AzureBlobFileSystemReference
  description: Azure Blob FileSystem setup configuration.
  kind: object
  properties:
  - description: Name of the Azure Blob Storage account.
    types:
    - uid: string
    name: accountName
  - description: Name of the Azure Blob Storage container to mount on the cluster.
    types:
    - uid: string
    name: containerName
  - description: >-
      Information of the Azure Blob Storage account credentials.

      Credentials to access Azure File Share.
    types:
    - uid: AzureStorageCredentialsInfo
    name: credentials
  - description: >-
      Specifies the relative path on the compute node where the Azure Blob file system will be mounted.

      Note that all blob file systems will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
    types:
    - uid: string
    name: relativeMountPath
  - description: Specifies the various mount options that can be used to configure Blob file system.
    types:
    - uid: string
    name: mountOptions
- name: FileServerReference
  description: References to a list of file servers that are mounted to the cluster node.
  kind: object
  properties:
  - description: >-
      Reference to the file server resource.

      Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
    types:
    - uid: ResourceId
    name: fileServer
  - description: >-
      Specifies the source directory in File Server that needs to be mounted.

      If this property is not specified, the entire File Server will be mounted.
    types:
    - uid: string
    name: sourceDirectory
  - description: >-
      Specifies the relative path on the compute node where the File Server will be mounted.

      Note that all file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
    types:
    - uid: string
    name: relativeMountPath
  - description: Specifies the mount options for File Server.
    types:
    - uid: string
    name: mountOptions
- name: UnmanagedFileSystemReference
  description: References to a list of file servers that are mounted to the cluster node.
  kind: object
  properties:
  - description: Command used to mount the unmanaged file system.
    types:
    - uid: string
    name: mountCommand
  - description: >-
      Specifies the relative path on the compute cluster node where the file system will be mounted.

      Note that all file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
    types:
    - uid: string
    name: relativeMountPath
- name: AzureStorageCredentialsInfo
  description: Information of the Azure File credentials.
  kind: object
  properties:
  - description: >-
      Storage account key.

      One of accountKey or accountKeySecretReference must be specified.
    types:
    - uid: string
    name: accountKey
  - description: >-
      Specifies the location of the storage account key, which is a Key Vault Secret.

      Users can store their secrets in Azure KeyVault and pass it to the Batch AI Service to integrate with KeyVault. One of accountKey or accountKeySecretReference must be specified.
    types:
    - uid: KeyVaultSecretReference
    name: accountKeySecretReference
- name: KeyVaultSecretReference
  description: Describes a reference to Key Vault Secret.
  kind: object
  properties:
  - description: >-
      Fully qualified resource Id for the Key Vault.

      Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
    types:
    - uid: ResourceId
    name: sourceVault
  - description: The URL referencing a secret in a Key Vault.
    types:
    - uid: string
    name: secretUrl
examples:
- request:
    uri: GET https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/clusters?api-version=2017-09-01-preview
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/clusters/demo_cluster",
            "name": "demo_cluster",
            "type": "Microsoft.BatchAI/Clusters",
            "location": "eastus",
            "properties": {
              "provisioningState": "succeeded",
              "allocationState": "resizing",
              "creationTime": "2017-09-27T22:28:07.645Z",
              "allocationStateTransitionTime": "2017-09-27T22:28:08.998Z",
              "provisioningStateTransitionTime": "2017-09-27T22:28:08.327Z",
              "vmSize": "STANDARD_NC6",
              "currentNodeCount": 0,
              "nodeStateCounts": {
                "runningNodeCount": 0,
                "idleNodeCount": 0,
                "unusableNodeCount": 0,
                "preparingNodeCount": 0,
                "leavingNodeCount": 0
              },
              "vmPriority": "dedicated",
              "scaleSettings": {
                "manual": {
                  "targetNodeCount": 1,
                  "nodeDeallocationOption": "requeue"
                }
              },
              "virtualMachineConfiguration": {
                "imageReference": {
                  "publisher": "Canonical",
                  "offer": "UbuntuServer",
                  "sku": "16.04-LTS",
                  "version": "latest"
                }
              },
              "userAccountSettings": {
                "adminUserName": "admin_user_name"
              },
              "nodeSetup": {
                "mountVolumes": {
                  "azureFileShares": [
                    {
                      "accountName": "storage_account_name",
                      "azureFileUrl": "https://storage_account_name.file.core.windows.net/azure_file_share_name",
                      "credentials": {},
                      "relativeMountPath": "azfiles",
                      "fileMode": "0777",
                      "directoryMode": "0777"
                    }
                  ]
                }
              }
            }
          }
        ]
      }
  name: List clusters
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - description: impersonate your user account
    name: user_impersonation
name: ListByResourceGroup
uid: management.azure.com.batchai.clusters.listbyresourcegroup

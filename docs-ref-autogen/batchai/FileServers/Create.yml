### YamlMime:RESTOperation
summary: Creates a file server.
service: Batch AI
apiVersion: 2017-09-01-preview
groupName: File Servers
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/fileServers/{fileServerName}?api-version=2017-09-01-preview
uriParameters:
- in: path
  isRequired: true
  description: The subscriptionID for the Azure user.
  types:
  - uid: string
  name: subscriptionId
- in: path
  isRequired: true
  description: Name of the resource group to which the resource belongs.
  types:
  - uid: string
  pattern: ^[-\w\._]+$
  name: resourceGroupName
- in: path
  isRequired: true
  description: The name of the file server within the specified resource group. File server names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.
  types:
  - uid: string
  pattern: ^[-\w\._]+$
  name: fileServerName
- in: query
  isRequired: true
  description: Specifies the version of API used for this request.
  types:
  - uid: string
  name: api-version
responses:
- description: The operation was successful. The response contains the file server entity.
  types:
  - uid: FileServer
  name: 200 OK
- description: The operation will be completed asynchronously.
  name: 202 Accepted
- description: Error response describing why the operation failed.
  types:
  - uid: CloudError
  name: Other Status Codes
requestBody:
- parameters:
  - in: body
    isRequired: true
    description: The region in which to create the File Server.
    types:
    - uid: string
    name: location
  - in: body
    description: The user specified tags associated with the File Server.
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
      uid: object
    name: tags
  - in: body
    isRequired: true
    description: For information about available VM sizes for fileservers from the Virtual Machines Marketplace, see Sizes for Virtual Machines (Linux).
    types:
    - uid: string
    name: vmSize
  - in: body
    isRequired: true
    description: SSH configuration settings for the VM
    types:
    - uid: SshConfiguration
    name: sshConfiguration
  - in: body
    isRequired: true
    description: Settings for the data disk which would be created for the File Server.
    types:
    - uid: DataDisks
    name: dataDisks
  - in: body
    description: Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
    types:
    - uid: ResourceId
    name: subnet
requestHeader: []
definitions:
- name: CachingType
  description: None, ReadOnly, ReadWrite. Default value is None. This property is not patchable.
  kind: enum
  properties:
  - types:
    - uid: string
    name: none
  - types:
    - uid: string
    name: readonly
  - types:
    - uid: string
    name: readwrite
- name: StorageAccountType
  description: 'Specifies the type of storage account to be used on the disk. Possible values are: Standard_LRS or Premium_LRS.'
  kind: enum
  properties:
  - types:
    - uid: string
    name: Standard_LRS
  - types:
    - uid: string
    name: Premium_LRS
- name: FileServer
  description: Contains information about the File Server.
  kind: object
  properties:
  - description: For information about available VM sizes for File Server from the Virtual Machines Marketplace, see Sizes for Virtual Machines (Linux).
    types:
    - uid: string
    name: vmSize
  - description: SSH configuration settings for the VM
    types:
    - uid: SshConfiguration
    name: sshConfiguration
  - description: Settings for the data disk which would be created for the File Server.
    types:
    - uid: DataDisks
    name: dataDisks
  - description: Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
    types:
    - uid: ResourceId
    name: subnet
  - isReadyOnly: true
    description: Details of the File Server.
    types:
    - uid: MountSettings
    name: mountSettings
  - isReadyOnly: true
    description: Time when the status was changed.
    types:
    - uid: string
    name: provisioningStateTransitionTime
  - isReadyOnly: true
    description: Time when the FileServer was created.
    types:
    - uid: string
    name: creationTime
  - isReadyOnly: true
    description: 'Possible values: creating - The File Server is getting created. updating - The File Server creation has been accepted and it is getting updated. deleting - The user has requested that the File Server be deleted, and it is in the process of being deleted. failed - The File Server creation has failed with the specified errorCode. Details about the error code are specified in the message field. succeeded - The File Server creation has succeeded.'
    types:
    - uid: FileServerProvisioningState
    name: provisioningState
  - isReadyOnly: true
    description: The ID of the resource
    types:
    - uid: string
    name: id
  - isReadyOnly: true
    description: The name of the resource
    types:
    - uid: string
    name: name
  - isReadyOnly: true
    description: The type of the resource
    types:
    - uid: string
    name: type
  - isReadyOnly: true
    description: The location of the resource
    types:
    - uid: string
    name: location
  - isReadyOnly: true
    description: The tags of the resource
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
      uid: object
    name: tags
- name: SshConfiguration
  description: SSH configuration settings for the VM
  kind: object
  properties:
  - description: Default value is '*' can be used to match all source IPs. Maximum number of publicIPs that can be specified are 400.
    types:
    - isArray: true
      uid: string
    name: publicIPsToAllow
  - description: Settings for user account that gets created on each on the nodes of a cluster.
    types:
    - uid: UserAccountSettings
    name: userAccountSettings
- name: UserAccountSettings
  description: Settings for user account that gets created on each on the nodes of a cluster.
  kind: object
  properties:
  - description: Specifies the name of the administrator account.
    types:
    - uid: string
    name: adminUserName
  - description: SSH public keys used to authenticate with linux based VMs. This does not get returned in a GET response body.
    types:
    - uid: string
    name: adminUserSshPublicKey
  - description: Admin user Password (linux only). This does not get returned in a GET response body.
    types:
    - uid: string
    name: adminUserPassword
- name: DataDisks
  description: Settings for the data disk which would be created for the File Server.
  kind: object
  properties:
  - description: Initial disk size in GB for blank data disks, and the new desired size for resizing existing data disks.
    types:
    - uid: integer
    name: diskSizeInGB
  - isReadyOnly: true
    description: None, ReadOnly, ReadWrite. Default value is None. This property is not patchable.
    types:
    - uid: CachingType
    name: cachingType
  - description: Number of data disks to be attached to the VM. RAID level 0 will be applied in the case of multiple disks.
    types:
    - uid: integer
    name: diskCount
  - description: 'Specifies the type of storage account to be used on the disk. Possible values are: Standard_LRS or Premium_LRS.'
    types:
    - uid: StorageAccountType
    name: storageAccountType
- name: ResourceId
  description: Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
  kind: object
  properties:
  - description: The ID of the resource
    types:
    - uid: string
    name: id
- name: MountSettings
  description: Details of the File Server.
  kind: object
  properties:
  - description: Path where the NFS is mounted on the Server.
    types:
    - uid: string
    name: mountPoint
  - description: Public IP of the File Server VM.
    types:
    - uid: string
    name: fileServerPublicIP
  - description: Internal subnet IP which can be used to access the file Server from within the subnet.
    types:
    - uid: string
    name: fileServerInternalIP
  - description: Type of the fileserver e.g. nfs, glusterfs etc.
    types:
    - uid: FileServerType
    name: fileServerType
- name: FileServerType
  description: Type of the fileserver e.g. nfs, glusterfs etc.
  kind: enum
  properties:
  - types:
    - uid: string
    name: nfs
  - types:
    - uid: string
    name: glusterfs
- name: FileServerProvisioningState
  description: 'Possible values: creating - The File Server is getting created. updating - The File Server creation has been accepted and it is getting updated. deleting - The user has requested that the File Server be deleted, and it is in the process of being deleted. failed - The File Server creation has failed with the specified errorCode. Details about the error code are specified in the message field. succeeded - The File Server creation has succeeded.'
  kind: enum
  properties:
  - types:
    - uid: string
    name: creating
  - types:
    - uid: string
    name: updating
  - types:
    - uid: string
    name: deleting
  - types:
    - uid: string
    name: succeeded
  - types:
    - uid: string
    name: failed
- name: CloudError
  description: An error response from the Batch AI service.
  kind: object
  properties:
  - description: An error response from the Batch AI service.
    types:
    - uid: CloudErrorBody
    name: error
- name: CloudErrorBody
  description: An error response from the Batch AI service.
  kind: object
  properties:
  - description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
    name: code
  - description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
    name: message
  - description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
    name: target
  - description: A list of additional details about the error.
    types:
    - isArray: true
      uid: Details
    name: details
examples:
- request:
    uri: PUT https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/fileServers/demo_nfs?api-version=2017-09-01-preview
    requestBody: '{"location":"eastus","properties":{"sshConfiguration":{"userAccountSettings":{"adminUserPassword":"admin_user_password","adminUserName":"admin_user_name"}},"dataDisks":{"diskSizeInGB":10,"storageAccountType":"Standard_LRS","diskCount":2},"vmSize":"STANDARD_NC6"}}'
  responses:
  - statusCode: "200"
  - statusCode: "202"
    headers:
    - value: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.BatchAI/locations/eastus/operationresults/7e69f371-db62-4183-bba0-5ee577d43bd7?api-version=2017-09-01-preview
      name: Location
    - value: "15"
      name: Retry-After
  name: Create or update file server
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - description: impersonate your user account
    name: user_impersonation
name: Create
uid: management.azure.com.batchai.fileservers.create

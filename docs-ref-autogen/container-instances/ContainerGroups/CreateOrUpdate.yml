### YamlMime:RESTOperation
uid: management.azure.com.containerinstances.containergroups.createorupdate
name: Create Or Update
service: Container Instances
groupName: Container Groups
apiVersion: 2017-10-01-preview
summary: Create or update container groups. Create or update container groups with specified configurations.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}?api-version=2017-10-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: containerGroupName
  in: path
  isRequired: true
  description: The name of the container group.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: ContainerGroup
- name: 201 Created
  description: Created - the container group is created.
  types:
  - uid: ContainerGroup
requestBody:
- parameters:
  - name: location
    in: body
    isRequired: true
    description: "  \nThe resource location."
    types:
    - uid: string
  - name: tags
    in: body
    description: "  \nThe resource tags."
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.containers
    in: body
    isRequired: true
    description: "  \nA container instance."
    types:
    - uid: Container
      isArray: true
  - name: properties.imageRegistryCredentials
    in: body
    description: "  \nImage registry credential."
    types:
    - uid: ImageRegistryCredential
      isArray: true
  - name: properties.restartPolicy
    in: body
    description: "  \nRestart policy for all containers within the container group. \n- `Always` Always restart\n- `OnFailure` Restart on failure\n- `Never` Never restart"
    types:
    - uid: ContainerGroupRestartPolicy
  - name: properties.ipAddress
    in: body
    description: "  \nThe IP address type of the container group."
    types:
    - uid: IpAddress
  - name: properties.osType
    in: body
    isRequired: true
    description: "  \nThe operating system type required by the containers in the container group."
    types:
    - uid: OperatingSystemTypes
  - name: properties.volumes
    in: body
    description: "  \nThe properties of the volume."
    types:
    - uid: Volume
      isArray: true
requestHeader: []
definitions:
- name: Container
  description: A container instance.
  kind: object
  properties:
  - name: name
    description: "  \nThe user-provided name of the container instance."
    types:
    - uid: string
  - name: properties.image
    description: "  \nThe name of the image used to create the container instance."
    types:
    - uid: string
  - name: properties.command
    description: "  "
    types:
    - uid: string
      isArray: true
  - name: properties.ports
    description: "  \nThe port exposed on the container instance."
    types:
    - uid: ContainerPort
      isArray: true
  - name: properties.environmentVariables
    description: "  \nThe environment variable to set within the container instance."
    types:
    - uid: EnvironmentVariable
      isArray: true
  - name: properties.instanceView
    isReadyOnly: true
    description: "  \nThe instance view of the container instance. Only valid in response."
    types:
    - uid: InstanceView
  - name: properties.resources
    description: "  \nThe resource requirements of the container instance."
    types:
    - uid: ResourceRequirements
  - name: properties.volumeMounts
    description: "  \nThe properties of the volume mount."
    types:
    - uid: VolumeMount
      isArray: true
- name: ImageRegistryCredential
  description: The image registry credentials by which the container group is created from.
  kind: object
  properties:
  - name: server
    description: "  \nThe Docker image registry server without a protocol such as \"http\" and \"https\"."
    types:
    - uid: string
  - name: username
    description: "  \nThe username for the private registry."
    types:
    - uid: string
  - name: password
    description: "  \nThe password for the private registry."
    types:
    - uid: string
- name: IpAddress
  description: The IP address type of the container group.
  kind: object
  properties:
  - name: ports
    description: "  \nThe port exposed on the container group."
    types:
    - uid: Port
      isArray: true
  - name: type
    description: "  \nSpecifies if the IP is exposed to the public internet."
    types:
    - uid: ContainerGroupIpAddressType
  - name: ip
    description: "  \nThe IP exposed to the public internet."
    types:
    - uid: string
- name: Volume
  description: The properties of the volume.
  kind: object
  properties:
  - name: name
    description: "  \nThe name of the volume."
    types:
    - uid: string
  - name: azureFile
    description: "  \nThe name of the Azure File volume."
    types:
    - uid: AzureFileVolume
  - name: emptyDir
    description: "  \nThe empty directory volume."
    types:
    - uid: EmptyDirVolume
- name: InstanceView
  description: The instance view of the container instance. Only valid in response.
  kind: object
  properties:
  - name: restartCount
    isReadyOnly: true
    description: "  \nThe number of times that the container instance has been restarted."
    types:
    - uid: integer
  - name: currentState
    isReadyOnly: true
    description: "  \nCurrent container instance state."
    types:
    - uid: ContainerState
  - name: previousState
    isReadyOnly: true
    description: "  \nPrevious container instance state."
    types:
    - uid: ContainerState
  - name: events
    isReadyOnly: true
    description: "  \nA container group or container instance event."
    types:
    - uid: Event
      isArray: true
- name: ContainerGroup
  description: A container group.
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: "  \nThe resource id."
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: "  \nThe resource name."
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: "  \nThe resource type."
    types:
    - uid: string
  - name: location
    description: "  \nThe resource location."
    types:
    - uid: string
  - name: tags
    description: "  \nThe resource tags."
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: "  \nThe provisioning state of the container group. This only appears in the response."
    types:
    - uid: string
  - name: properties.containers
    description: "  \nA container instance."
    types:
    - uid: Container
      isArray: true
  - name: properties.imageRegistryCredentials
    description: "  \nImage registry credential."
    types:
    - uid: ImageRegistryCredential
      isArray: true
  - name: properties.restartPolicy
    description: "  \nRestart policy for all containers within the container group. \n- `Always` Always restart\n- `OnFailure` Restart on failure\n- `Never` Never restart"
    types:
    - uid: ContainerGroupRestartPolicy
  - name: properties.ipAddress
    description: "  \nThe IP address type of the container group."
    types:
    - uid: IpAddress
  - name: properties.osType
    description: "  \nThe operating system type required by the containers in the container group."
    types:
    - uid: OperatingSystemTypes
  - name: properties.volumes
    description: "  \nThe properties of the volume."
    types:
    - uid: Volume
      isArray: true
  - name: properties.instanceView
    isReadyOnly: true
    description: "  \nThe instance view of the container group. Only valid in response."
    types:
    - uid: InstanceView
- name: ContainerPort
  description: The exposed ports on the container instance.
  kind: object
  properties:
  - name: protocol
    description: "  \nThe protocol associated with the port."
    types:
    - uid: ContainerNetworkProtocol
  - name: port
    description: "  \nThe port number exposed within the container group."
    types:
    - uid: integer
- name: EnvironmentVariable
  description: The environment variables to set in the container instance.
  kind: object
  properties:
  - name: name
    description: "  \nThe name of the environment variable."
    types:
    - uid: string
  - name: value
    description: "  \nThe value of the environment variable."
    types:
    - uid: string
- name: ResourceRequirements
  description: The resource requirements of the container instance.
  kind: object
  properties:
  - name: requests
    description: "  \nThe resource requests of this container instance."
    types:
    - uid: ResourceRequests
  - name: limits
    description: "  \nThe resource limits of this container instance."
    types:
    - uid: ResourceLimits
- name: VolumeMount
  description: The volume mounts available to the container instance.
  kind: object
  properties:
  - name: name
    description: "  \nThe name of the volume mount."
    types:
    - uid: string
  - name: mountPath
    description: "  \nThe path within the container where the volume should be mounted. Must not contain colon (:)."
    types:
    - uid: string
  - name: readOnly
    description: "  \nThe flag indicating whether the volume mount is read-only."
    types:
    - uid: boolean
- name: Port
  description: The list of ports exposed on the container group.
  kind: object
  properties:
  - name: protocol
    description: "  \nThe protocol associated with the port."
    types:
    - uid: ContainerGroupNetworkProtocol
  - name: port
    description: "  \nThe port number."
    types:
    - uid: integer
- name: ContainerGroupIpAddressType
  description: Specifies if the IP is exposed to the public internet.
  kind: enum
  properties:
  - name: Public
    types:
    - uid: string
- name: AzureFileVolume
  description: The properties of the Azure File volume. Azure File shares are mounted as volumes.
  kind: object
  properties:
  - name: shareName
    description: "  \nThe name of the Azure File share to be mounted as a volume."
    types:
    - uid: string
  - name: readOnly
    description: "  \nThe flag indicating whether the Azure File shared mounted as a volume is read-only."
    types:
    - uid: boolean
  - name: storageAccountName
    description: "  \nThe name of the storage account that contains the Azure File share."
    types:
    - uid: string
  - name: storageAccountKey
    description: "  \nThe storage account access key used to access the Azure File share."
    types:
    - uid: string
- name: EmptyDirVolume
  description: The empty directory volume.
  kind: object
  properties: []
- name: ContainerState
  description: Current container instance state.
  kind: object
  properties:
  - name: state
    description: "  \nThe state of the container instance."
    types:
    - uid: string
  - name: startTime
    description: "  \nThe date-time when the container instance state started."
    types:
    - uid: string
  - name: exitCode
    description: "  \nThe container instance exit codes correspond to those from the `docker run` command."
    types:
    - uid: integer
  - name: finishTime
    description: "  \nThe date-time when the container instance state finished."
    types:
    - uid: string
  - name: detailStatus
    description: "  \nThe human-readable status of the container instance state."
    types:
    - uid: string
- name: Event
  description: The events of the container instance.
  kind: object
  properties:
  - name: count
    description: "  \nThe count of the event."
    types:
    - uid: integer
  - name: firstTimestamp
    description: "  \nThe date-time of the earliest logged event."
    types:
    - uid: string
  - name: lastTimestamp
    description: "  \nThe date-time of the latest logged event."
    types:
    - uid: string
  - name: name
    description: "  \nThe event name."
    types:
    - uid: string
  - name: message
    description: "  \nThe event message."
    types:
    - uid: string
  - name: type
    description: "  \nThe event type."
    types:
    - uid: string
- name: ContainerGroupRestartPolicy
  description: "Restart policy for all containers within the container group. \n- `Always` Always restart\n- `OnFailure` Restart on failure\n- `Never` Never restart\n"
  kind: enum
  properties:
  - name: Always
    types:
    - uid: string
  - name: OnFailure
    types:
    - uid: string
  - name: Never
    types:
    - uid: string
- name: OperatingSystemTypes
  description: The operating system type required by the containers in the container group.
  kind: enum
  properties:
  - name: Windows
    types:
    - uid: string
  - name: Linux
    types:
    - uid: string
- name: ContainerNetworkProtocol
  description: The protocol associated with the port.
  kind: enum
  properties:
  - name: TCP
    types:
    - uid: string
  - name: UDP
    types:
    - uid: string
- name: ResourceRequests
  description: The resource requests of this container instance.
  kind: object
  properties:
  - name: memoryInGB
    description: "  \nThe memory request in GB of this container instance."
    types:
    - uid: number
  - name: cpu
    description: "  \nThe CPU request of this container instance."
    types:
    - uid: number
- name: ResourceLimits
  description: The resource limits of this container instance.
  kind: object
  properties:
  - name: memoryInGB
    description: "  \nThe memory limit in GB of this container instance."
    types:
    - uid: number
  - name: cpu
    description: "  \nThe CPU limit of this container instance."
    types:
    - uid: number
- name: ContainerGroupNetworkProtocol
  description: The protocol associated with the port.
  kind: enum
  properties:
  - name: TCP
    types:
    - uid: string
  - name: UDP
    types:
    - uid: string
examples:
- name: ContainerGroupsCreateOrUpdate
  request:
    uri: PUT https://management.azure.com/subscriptions/ae43b1e3-c35d-4c8c-bc0d-f148b4c52b78/resourceGroups/demo/providers/Microsoft.ContainerInstance/containerGroups/mycontainers?api-version=2017-10-01-preview
    body: >-
      {
        "name": "mycontainers",
        "type": "Microsoft.ContainerInstance/containerGroups",
        "location": "westus",
        "properties": {
          "containers": [
            {
              "name": "mycontainers",
              "properties": {
                "command": [],
                "environmentVariables": [],
                "image": "nginx",
                "instanceView": {},
                "ports": [
                  {
                    "port": 80
                  }
                ],
                "resources": {
                  "requests": {
                    "memoryInGB": 1.5,
                    "cpu": 1
                  }
                },
                "volumeMounts": [
                  {
                    "name": "volume1",
                    "mountPath": "/mnt/volume1",
                    "readOnly": false
                  },
                  {
                    "name": "volume2",
                    "mountPath": "/mnt/volume2",
                    "readOnly": false
                  }
                ]
              }
            }
          ],
          "imageRegistryCredentials": [],
          "ipAddress": {
            "ports": [
              {
                "protocol": "TCP",
                "port": 80
              }
            ],
            "type": "Public"
          },
          "osType": "Linux",
          "volumes": [
            {
              "name": "volume1",
              "azureFile": {
                "shareName": "shareName",
                "storageAccountName": "accountName",
                "storageAccountKey": ""
              }
            },
            {
              "name": "volume2",
              "emptyDir": {}
            }
          ]
        }
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "provisioningState": "Creating",
          "containers": [
            {
              "name": "mycontainers",
              "properties": {
                "image": "nginx",
                "command": [],
                "ports": [
                  {
                    "port": 80
                  }
                ],
                "environmentVariables": [],
                "resources": {
                  "requests": {
                    "memoryInGB": 1.5,
                    "cpu": 1
                  }
                },
                "volumeMounts": [
                  {
                    "name": "volume1",
                    "mountPath": "/mnt/volume1",
                    "readOnly": false
                  },
                  {
                    "name": "volume2",
                    "mountPath": "/mnt/volume2",
                    "readOnly": false
                  }
                ]
              }
            }
          ],
          "imageRegistryCredentials": [],
          "ipAddress": {
            "ports": [
              {
                "protocol": "TCP",
                "port": 80
              }
            ],
            "ip": "13.64.70.13",
            "type": "Public"
          },
          "osType": "Linux",
          "instanceView": {
            "events": [],
            "state": "Pending"
          },
          "volumes": [
            {
              "name": "volume1",
              "azureFile": {
                "shareName": "shareName",
                "storageAccountName": "accountName",
                "storageAccountKey": ""
              }
            },
            {
              "name": "volume2",
              "emptyDir": {}
            }
          ]
        },
        "id": "/subscriptions/ae43b1e3-c35d-4c8c-bc0d-f148b4c52b78/resourceGroups/demo/providers/Microsoft.ContainerInstance/containerGroups/mycontainers",
        "name": "mycontainers",
        "type": "Microsoft.ContainerInstance/containerGroups",
        "location": "westus"
      }
  - statusCode: "201"
    body: >-
      {
        "properties": {
          "provisioningState": "Creating",
          "containers": [
            {
              "name": "mycontainers",
              "properties": {
                "image": "nginx",
                "command": [],
                "ports": [
                  {
                    "port": 80
                  }
                ],
                "environmentVariables": [],
                "resources": {
                  "requests": {
                    "memoryInGB": 1.5,
                    "cpu": 1
                  }
                },
                "volumeMounts": [
                  {
                    "name": "volume1",
                    "mountPath": "/mnt/volume1",
                    "readOnly": false
                  },
                  {
                    "name": "volume2",
                    "mountPath": "/mnt/volume2",
                    "readOnly": false
                  }
                ]
              }
            }
          ],
          "imageRegistryCredentials": [],
          "ipAddress": {
            "ports": [
              {
                "protocol": "TCP",
                "port": 80
              }
            ],
            "ip": "13.64.70.13",
            "type": "Public"
          },
          "osType": "Linux",
          "instanceView": {
            "events": [],
            "state": "Pending"
          },
          "volumes": [
            {
              "name": "volume1",
              "azureFile": {
                "shareName": "shareName",
                "storageAccountName": "accountName",
                "storageAccountKey": ""
              }
            },
            {
              "name": "volume2",
              "emptyDir": {}
            }
          ]
        },
        "id": "/subscriptions/ae43b1e3-c35d-4c8c-bc0d-f148b4c52b78/resourceGroups/demo/providers/Microsoft.ContainerInstance/containerGroups/mycontainers",
        "name": "mycontainers",
        "type": "Microsoft.ContainerInstance/containerGroups",
        "location": "westus"
      }
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: Impersonate your user account

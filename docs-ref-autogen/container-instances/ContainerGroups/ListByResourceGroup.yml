### YamlMime:RESTOperation
summary: Get a list of container groups in the specified subscription and resource group. Get a list of container groups in a specified subscription and resource group. This operation returns properties of each container group including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes.
service: Container Instances
apiVersion: 2017-10-01-preview
groupName: Container Groups
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups?api-version=2017-10-01-preview
uriParameters:
- in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
  name: subscriptionId
- in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
  name: resourceGroupName
- in: query
  isRequired: true
  description: Client API version
  types:
  - uid: string
  name: api-version
responses:
- description: OK
  types:
  - uid: ContainerGroupListResult
  name: 200 OK
requestHeader: []
definitions:
- name: ContainerGroupListResult
  description: The container group list response that contains the container group properties.
  kind: object
  properties:
  - description: The list of container groups.
    types:
    - uid: ContainerGroup
    name: value
  - description: The URI to fetch the next page of container groups.
    types:
    - uid: string
    name: nextLink
- name: ContainerGroup
  description: A container group.
  kind: object
  properties:
  - isReadyOnly: true
    description: The resource id.
    types:
    - uid: string
    name: id
  - isReadyOnly: true
    description: The resource name.
    types:
    - uid: string
    name: name
  - isReadyOnly: true
    description: The resource type.
    types:
    - uid: string
    name: type
  - description: The resource location.
    types:
    - uid: string
    name: location
  - description: The resource tags.
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
      uid: object
    name: tags
  - isReadyOnly: true
    description: The provisioning state of the container group. This only appears in the response.
    types:
    - uid: string
    name: properties.provisioningState
  - description: The containers within the container group.
    types:
    - uid: Container
    name: properties.containers
  - description: The image registry credentials by which the container group is created from.
    types:
    - uid: ImageRegistryCredential
    name: properties.imageRegistryCredentials
  - description: "Restart policy for all containers within the container group. \n- `Always` Always restart\n- `OnFailure` Restart on failure\n- `Never` Never restart\n"
    types:
    - uid: ContainerGroupRestartPolicy
    name: properties.restartPolicy
  - description: The IP address type of the container group.
    types:
    - uid: IpAddress
    name: properties.ipAddress
  - description: The operating system type required by the containers in the container group.
    types:
    - uid: OperatingSystemTypes
    name: properties.osType
  - description: The list of volumes that can be mounted by containers in this container group.
    types:
    - uid: Volume
    name: properties.volumes
  - isReadyOnly: true
    description: The instance view of the container group. Only valid in response.
    types:
    - uid: InstanceView
    name: properties.instanceView
- name: Container
  description: A container instance.
  kind: object
  properties:
  - description: The user-provided name of the container instance.
    types:
    - uid: string
    name: name
  - description: The name of the image used to create the container instance.
    types:
    - uid: string
    name: properties.image
  - description: The commands to execute within the container instance in exec form.
    types:
    - uid: string
    name: properties.command
  - description: The exposed ports on the container instance.
    types:
    - uid: ContainerPort
    name: properties.ports
  - description: The environment variables to set in the container instance.
    types:
    - uid: EnvironmentVariable
    name: properties.environmentVariables
  - isReadyOnly: true
    description: The instance view of the container instance. Only valid in response.
    types:
    - uid: InstanceView
    name: properties.instanceView
  - description: The resource requirements of the container instance.
    types:
    - uid: ResourceRequirements
    name: properties.resources
  - description: The volume mounts available to the container instance.
    types:
    - uid: VolumeMount
    name: properties.volumeMounts
- name: ImageRegistryCredential
  description: Image registry credential.
  kind: object
  properties:
  - description: The Docker image registry server without a protocol such as "http" and "https".
    types:
    - uid: string
    name: server
  - description: The username for the private registry.
    types:
    - uid: string
    name: username
  - description: The password for the private registry.
    types:
    - uid: string
    name: password
- name: IpAddress
  description: IP address for the container group.
  kind: object
  properties:
  - description: The list of ports exposed on the container group.
    types:
    - uid: Port
    name: ports
  - description: Specifies if the IP is exposed to the public internet.
    types:
    - uid: ContainerGroupIpAddressType
    name: type
  - description: The IP exposed to the public internet.
    types:
    - uid: string
    name: ip
- name: Volume
  description: The properties of the volume.
  kind: object
  properties:
  - description: The name of the volume.
    types:
    - uid: string
    name: name
  - description: The name of the Azure File volume.
    types:
    - uid: AzureFileVolume
    name: azureFile
  - description: The empty directory volume.
    types:
    - uid: EmptyDirVolume
    name: emptyDir
- name: ContainerPort
  description: The port exposed on the container instance.
  kind: object
  properties:
  - description: The protocol associated with the port.
    types:
    - uid: ContainerNetworkProtocol
    name: protocol
  - description: The port number exposed within the container group.
    types:
    - uid: integer
    name: port
- name: EnvironmentVariable
  description: The environment variable to set within the container instance.
  kind: object
  properties:
  - description: The name of the environment variable.
    types:
    - uid: string
    name: name
  - description: The value of the environment variable.
    types:
    - uid: string
    name: value
- name: ResourceRequirements
  description: The resource requirements.
  kind: object
  properties:
  - description: The resource requests of this container instance.
    types:
    - uid: ResourceRequests
    name: requests
  - description: The resource limits of this container instance.
    types:
    - uid: ResourceLimits
    name: limits
- name: VolumeMount
  description: The properties of the volume mount.
  kind: object
  properties:
  - description: The name of the volume mount.
    types:
    - uid: string
    name: name
  - description: The path within the container where the volume should be mounted. Must not contain colon (:).
    types:
    - uid: string
    name: mountPath
  - description: The flag indicating whether the volume mount is read-only.
    types:
    - uid: boolean
    name: readOnly
- name: Port
  description: The port exposed on the container group.
  kind: object
  properties:
  - description: The protocol associated with the port.
    types:
    - uid: ContainerGroupNetworkProtocol
    name: protocol
  - description: The port number.
    types:
    - uid: integer
    name: port
- name: AzureFileVolume
  description: The properties of the Azure File volume. Azure File shares are mounted as volumes.
  kind: object
  properties:
  - description: The name of the Azure File share to be mounted as a volume.
    types:
    - uid: string
    name: shareName
  - description: The flag indicating whether the Azure File shared mounted as a volume is read-only.
    types:
    - uid: boolean
    name: readOnly
  - description: The name of the storage account that contains the Azure File share.
    types:
    - uid: string
    name: storageAccountName
  - description: The storage account access key used to access the Azure File share.
    types:
    - uid: string
    name: storageAccountKey
- name: EmptyDirVolume
  description: The empty directory volume.
  kind: object
  properties: []
- name: ResourceRequests
  description: The resource requests.
  kind: object
  properties:
  - description: The memory request in GB of this container instance.
    types:
    - uid: number
    name: memoryInGB
  - description: The CPU request of this container instance.
    types:
    - uid: number
    name: cpu
- name: ResourceLimits
  description: The resource limits.
  kind: object
  properties:
  - description: The memory limit in GB of this container instance.
    types:
    - uid: number
    name: memoryInGB
  - description: The CPU limit of this container instance.
    types:
    - uid: number
    name: cpu
examples:
- request:
    uri: GET https://management.azure.com/subscriptions/ae43b1e3-c35d-4c8c-bc0d-f148b4c52b78/resourceGroups/demo/providers/Microsoft.ContainerInstance/containerGroups?api-version=2017-10-01-preview
  responses:
  - statusCode: "200"
    body: '{"value":[{"properties":{"provisioningState":"Succeeded","containers":[{"name":"mycontainers","properties":{"image":"nginx","command":[],"ports":[{"port":80}],"environmentVariables":[],"instanceView":{"restartCount":0,"currentState":{"state":"Running","startTime":"2017-10-17T17:27:21Z","detailStatus":""},"events":[{"count":1,"firstTimestamp":"2017-10-17T17:27:14Z","lastTimestamp":"2017-10-17T17:27:14Z","name":"Pulling","message":"pulling image \"nginx\"","type":"Normal"},{"count":1,"firstTimestamp":"2017-10-17T17:27:20Z","lastTimestamp":"2017-10-17T17:27:20Z","name":"Pulled","message":"Successfully pulled image \"nginx\"","type":"Normal"},{"count":1,"firstTimestamp":"2017-10-17T17:27:20Z","lastTimestamp":"2017-10-17T17:27:20Z","name":"Created","message":"Created container with id 59ac4a83384ce9184c315ecd3c7cff39a7c9a3257646d41309758f8730b9a527","type":"Normal"},{"count":1,"firstTimestamp":"2017-10-17T17:27:21Z","lastTimestamp":"2017-10-17T17:27:21Z","name":"Started","message":"Started container with id 59ac4a83384ce9184c315ecd3c7cff39a7c9a3257646d41309758f8730b9a527","type":"Normal"}]},"resources":{"requests":{"memoryInGB":1.5,"cpu":1}}}}],"imageRegistryCredentials":[],"ipAddress":{"ports":[{"protocol":"TCP","port":80}],"ip":"13.64.70.13","type":"Public"},"osType":"Linux","instanceView":{"events":[],"state":"Running"}},"id":"/subscriptions/ae43b1e3-c35d-4c8c-bc0d-f148b4c52b78/resourceGroups/demo/providers/Microsoft.ContainerInstance/containerGroups/mycontainers","name":"mycontainers","type":"Microsoft.ContainerInstance/containerGroups","location":"westus"}]}'
  name: ContainerGroupsListByResourceGroup
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - description: Impersonate your user account
    name: user_impersonation
name: ListByResourceGroup
uid: management.azure.com.containerinstances.containergroups.listbyresourcegroup

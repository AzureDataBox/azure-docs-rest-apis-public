### YamlMime:RESTOperation
uid: management.azure.com.containerinstances.containergroups.listbyresourcegroup
name: List By Resource Group
service: Container Instances
groupName: Container Groups
apiVersion: 2017-10-01-preview
summary: Get a list of container groups in the specified subscription and resource group. Get a list of container groups in a specified subscription and resource group. This operation returns properties of each container group including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes.
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups?api-version=2017-10-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version
  types:
  - uid: string
responses:
- name: 200 OK
  description: OK
  types:
  - uid: ContainerGroupListResult
requestHeader: []
definitions:
- name: ContainerGroupListResult
  description: The container group list response that contains the container group properties.
  kind: object
  properties:
  - name: value
    description: A container group.
    types:
    - uid: ContainerGroup
      isArray: true
  - name: nextLink
    description: The URI to fetch the next page of container groups.
    types:
    - uid: string
- name: ContainerGroup
  description: A container group.
  kind: object
  properties:
  - name: id
    isReadyOnly: true
    description: The resource id.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The resource type.
    types:
    - uid: string
  - name: location
    description: The resource location.
    types:
    - uid: string
  - name: tags
    description: The resource tags.
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
  - name: properties.provisioningState
    isReadyOnly: true
    description: The provisioning state of the container group. This only appears in the response.
    types:
    - uid: string
  - name: properties.containers
    description: A container instance.
    types:
    - uid: Container
      isArray: true
  - name: properties.imageRegistryCredentials
    description: Image registry credential.
    types:
    - uid: ImageRegistryCredential
      isArray: true
  - name: properties.restartPolicy
    description: "Restart policy for all containers within the container group. \n- `Always` Always restart\n- `OnFailure` Restart on failure\n- `Never` Never restart"
    types:
    - uid: ContainerGroupRestartPolicy
  - name: properties.ipAddress
    description: The IP address type of the container group.
    types:
    - uid: IpAddress
  - name: properties.osType
    description: The operating system type required by the containers in the container group.
    types:
    - uid: OperatingSystemTypes
  - name: properties.volumes
    description: The properties of the volume.
    types:
    - uid: Volume
      isArray: true
  - name: properties.instanceView
    isReadyOnly: true
    description: The instance view of the container group. Only valid in response.
    types:
    - uid: InstanceView
- name: Container
  description: A container instance.
  kind: object
  properties:
  - name: name
    description: The user-provided name of the container instance.
    types:
    - uid: string
  - name: properties.image
    description: The name of the image used to create the container instance.
    types:
    - uid: string
  - name: properties.command
    description: The commands to execute within the container instance in exec form.
    types:
    - uid: string
      isArray: true
  - name: properties.ports
    description: The port exposed on the container instance.
    types:
    - uid: ContainerPort
      isArray: true
  - name: properties.environmentVariables
    description: The environment variable to set within the container instance.
    types:
    - uid: EnvironmentVariable
      isArray: true
  - name: properties.instanceView
    isReadyOnly: true
    description: The instance view of the container instance. Only valid in response.
    types:
    - uid: InstanceView
  - name: properties.resources
    description: The resource requirements of the container instance.
    types:
    - uid: ResourceRequirements
  - name: properties.volumeMounts
    description: The properties of the volume mount.
    types:
    - uid: VolumeMount
      isArray: true
- name: ImageRegistryCredential
  description: Image registry credential.
  kind: object
  properties:
  - name: server
    description: The Docker image registry server without a protocol such as "http" and "https".
    types:
    - uid: string
  - name: username
    description: The username for the private registry.
    types:
    - uid: string
  - name: password
    description: The password for the private registry.
    types:
    - uid: string
- name: ContainerGroupRestartPolicy
  description: "Restart policy for all containers within the container group. \n- `Always` Always restart\n- `OnFailure` Restart on failure\n- `Never` Never restart\n"
  kind: enum
  properties:
  - name: Always
    types:
    - uid: string
  - name: OnFailure
    types:
    - uid: string
  - name: Never
    types:
    - uid: string
- name: IpAddress
  description: IP address for the container group.
  kind: object
  properties:
  - name: ports
    description: The port exposed on the container group.
    types:
    - uid: Port
      isArray: true
  - name: type
    description: Specifies if the IP is exposed to the public internet.
    types:
    - uid: ContainerGroupIpAddressType
  - name: ip
    description: The IP exposed to the public internet.
    types:
    - uid: string
- name: OperatingSystemTypes
  description: The operating system type required by the containers in the container group.
  kind: enum
  properties:
  - name: Windows
    types:
    - uid: string
  - name: Linux
    types:
    - uid: string
- name: Volume
  description: The properties of the volume.
  kind: object
  properties:
  - name: name
    description: The name of the volume.
    types:
    - uid: string
  - name: azureFile
    description: The name of the Azure File volume.
    types:
    - uid: AzureFileVolume
  - name: emptyDir
    description: The empty directory volume.
    types:
    - uid: EmptyDirVolume
- name: InstanceView
  description: The instance view of the container instance. Only valid in response.
  kind: object
  properties:
  - name: restartCount
    isReadyOnly: true
    description: The number of times that the container instance has been restarted.
    types:
    - uid: integer
  - name: currentState
    isReadyOnly: true
    description: Current container instance state.
    types:
    - uid: ContainerState
  - name: previousState
    isReadyOnly: true
    description: Previous container instance state.
    types:
    - uid: ContainerState
  - name: events
    isReadyOnly: true
    description: A container group or container instance event.
    types:
    - uid: Event
      isArray: true
- name: ContainerPort
  description: The port exposed on the container instance.
  kind: object
  properties:
  - name: protocol
    description: The protocol associated with the port.
    types:
    - uid: ContainerNetworkProtocol
  - name: port
    description: The port number exposed within the container group.
    types:
    - uid: integer
- name: EnvironmentVariable
  description: The environment variable to set within the container instance.
  kind: object
  properties:
  - name: name
    description: The name of the environment variable.
    types:
    - uid: string
  - name: value
    description: The value of the environment variable.
    types:
    - uid: string
- name: ResourceRequirements
  description: The resource requirements.
  kind: object
  properties:
  - name: requests
    description: The resource requests of this container instance.
    types:
    - uid: ResourceRequests
  - name: limits
    description: The resource limits of this container instance.
    types:
    - uid: ResourceLimits
- name: VolumeMount
  description: The properties of the volume mount.
  kind: object
  properties:
  - name: name
    description: The name of the volume mount.
    types:
    - uid: string
  - name: mountPath
    description: The path within the container where the volume should be mounted. Must not contain colon (:).
    types:
    - uid: string
  - name: readOnly
    description: The flag indicating whether the volume mount is read-only.
    types:
    - uid: boolean
- name: Port
  description: The port exposed on the container group.
  kind: object
  properties:
  - name: protocol
    description: The protocol associated with the port.
    types:
    - uid: ContainerGroupNetworkProtocol
  - name: port
    description: The port number.
    types:
    - uid: integer
- name: ContainerGroupIpAddressType
  description: Specifies if the IP is exposed to the public internet.
  kind: enum
  properties:
  - name: Public
    types:
    - uid: string
- name: AzureFileVolume
  description: The properties of the Azure File volume. Azure File shares are mounted as volumes.
  kind: object
  properties:
  - name: shareName
    description: The name of the Azure File share to be mounted as a volume.
    types:
    - uid: string
  - name: readOnly
    description: The flag indicating whether the Azure File shared mounted as a volume is read-only.
    types:
    - uid: boolean
  - name: storageAccountName
    description: The name of the storage account that contains the Azure File share.
    types:
    - uid: string
  - name: storageAccountKey
    description: The storage account access key used to access the Azure File share.
    types:
    - uid: string
- name: EmptyDirVolume
  description: The empty directory volume.
  kind: object
  properties: []
- name: ContainerState
  description: The container instance state.
  kind: object
  properties:
  - name: state
    description: The state of the container instance.
    types:
    - uid: string
  - name: startTime
    description: The date-time when the container instance state started.
    types:
    - uid: string
  - name: exitCode
    description: The container instance exit codes correspond to those from the `docker run` command.
    types:
    - uid: integer
  - name: finishTime
    description: The date-time when the container instance state finished.
    types:
    - uid: string
  - name: detailStatus
    description: The human-readable status of the container instance state.
    types:
    - uid: string
- name: Event
  description: A container group or container instance event.
  kind: object
  properties:
  - name: count
    description: The count of the event.
    types:
    - uid: integer
  - name: firstTimestamp
    description: The date-time of the earliest logged event.
    types:
    - uid: string
  - name: lastTimestamp
    description: The date-time of the latest logged event.
    types:
    - uid: string
  - name: name
    description: The event name.
    types:
    - uid: string
  - name: message
    description: The event message.
    types:
    - uid: string
  - name: type
    description: The event type.
    types:
    - uid: string
- name: ContainerNetworkProtocol
  description: The protocol associated with the port.
  kind: enum
  properties:
  - name: TCP
    types:
    - uid: string
  - name: UDP
    types:
    - uid: string
- name: ResourceRequests
  description: The resource requests.
  kind: object
  properties:
  - name: memoryInGB
    description: The memory request in GB of this container instance.
    types:
    - uid: number
  - name: cpu
    description: The CPU request of this container instance.
    types:
    - uid: number
- name: ResourceLimits
  description: The resource limits.
  kind: object
  properties:
  - name: memoryInGB
    description: The memory limit in GB of this container instance.
    types:
    - uid: number
  - name: cpu
    description: The CPU limit of this container instance.
    types:
    - uid: number
- name: ContainerGroupNetworkProtocol
  description: The protocol associated with the port.
  kind: enum
  properties:
  - name: TCP
    types:
    - uid: string
  - name: UDP
    types:
    - uid: string
examples:
- name: ContainerGroupsListByResourceGroup
  request:
    uri: GET https://management.azure.com/subscriptions/ae43b1e3-c35d-4c8c-bc0d-f148b4c52b78/resourceGroups/demo/providers/Microsoft.ContainerInstance/containerGroups?api-version=2017-10-01-preview
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
            "properties": {
              "provisioningState": "Succeeded",
              "containers": [
                {
                  "name": "mycontainers",
                  "properties": {
                    "image": "nginx",
                    "command": [],
                    "ports": [
                      {
                        "port": 80
                      }
                    ],
                    "environmentVariables": [],
                    "instanceView": {
                      "restartCount": 0,
                      "currentState": {
                        "state": "Running",
                        "startTime": "2017-10-17T17:27:21Z",
                        "detailStatus": ""
                      },
                      "events": [
                        {
                          "count": 1,
                          "firstTimestamp": "2017-10-17T17:27:14Z",
                          "lastTimestamp": "2017-10-17T17:27:14Z",
                          "name": "Pulling",
                          "message": "pulling image \"nginx\"",
                          "type": "Normal"
                        },
                        {
                          "count": 1,
                          "firstTimestamp": "2017-10-17T17:27:20Z",
                          "lastTimestamp": "2017-10-17T17:27:20Z",
                          "name": "Pulled",
                          "message": "Successfully pulled image \"nginx\"",
                          "type": "Normal"
                        },
                        {
                          "count": 1,
                          "firstTimestamp": "2017-10-17T17:27:20Z",
                          "lastTimestamp": "2017-10-17T17:27:20Z",
                          "name": "Created",
                          "message": "Created container with id 59ac4a83384ce9184c315ecd3c7cff39a7c9a3257646d41309758f8730b9a527",
                          "type": "Normal"
                        },
                        {
                          "count": 1,
                          "firstTimestamp": "2017-10-17T17:27:21Z",
                          "lastTimestamp": "2017-10-17T17:27:21Z",
                          "name": "Started",
                          "message": "Started container with id 59ac4a83384ce9184c315ecd3c7cff39a7c9a3257646d41309758f8730b9a527",
                          "type": "Normal"
                        }
                      ]
                    },
                    "resources": {
                      "requests": {
                        "memoryInGB": 1.5,
                        "cpu": 1
                      }
                    }
                  }
                }
              ],
              "imageRegistryCredentials": [],
              "ipAddress": {
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 80
                  }
                ],
                "ip": "13.64.70.13",
                "type": "Public"
              },
              "osType": "Linux",
              "instanceView": {
                "events": [],
                "state": "Running"
              }
            },
            "id": "/subscriptions/ae43b1e3-c35d-4c8c-bc0d-f148b4c52b78/resourceGroups/demo/providers/Microsoft.ContainerInstance/containerGroups/mycontainers",
            "name": "mycontainers",
            "type": "Microsoft.ContainerInstance/containerGroups",
            "location": "westus"
          }
        ]
      }
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: Impersonate your user account

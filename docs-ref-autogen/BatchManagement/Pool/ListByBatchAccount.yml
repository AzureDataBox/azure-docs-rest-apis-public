### YamlMime:RESTOperation
summary: Lists all of the pools in the specified account.
service: Batch Management
apiVersion: 2017-09-01
groupName: Pool
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/pools?api-version=2017-09-01
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/pools?maxresults={maxresults}&$select={$select}&$filter={$filter}&api-version=2017-09-01
  isOptional: true
uriParameters:
- in: path
  isRequired: true
  description: The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
  types:
  - uid: string
  name: subscriptionId
- in: path
  isRequired: true
  description: The name of the resource group that contains the Batch account.
  types:
  - uid: string
  name: resourceGroupName
- in: path
  isRequired: true
  description: The name of the Batch account.
  types:
  - uid: string
  pattern: ^[-\w\._]+$
  name: accountName
- in: query
  description: The maximum number of items to return in the response.
  types:
  - uid: integer
  format: int32
  name: maxresults
- in: query
  description: Comma separated list of properties that should be returned. e.g. "properties/provisioningState". Only top level properties under properties/ are valid for selection.
  types:
  - uid: string
  name: $select
- in: query
  description: >-
    OData filter expression. Valid properties for filtering are:

     name
     properties/allocationState
     properties/allocationStateTransitionTime
     properties/creationTime
     properties/provisioningState
     properties/provisioningStateTransitionTime
     properties/lastModified
     properties/vmSize
     properties/interNodeCommunication
     properties/scaleSettings/autoScale
     properties/scaleSettings/fixedScale
  types:
  - uid: string
  name: $filter
- in: query
  isRequired: true
  description: The API version to be used with the HTTP request.
  types:
  - uid: string
  name: api-version
responses:
- description: The operation was successful. The response contains a list of certificates associated with the account.
  types:
  - uid: ListPoolsResult
  name: 200 OK
- description: Error response describing why the operation failed.
  types:
  - uid: CloudError
  name: Other Status Codes
requestHeader: []
definitions:
- name: ListPoolsResult
  description: Values returned by the List operation.
  kind: object
  properties:
  - description: The collection of returned pools.
    types:
    - uid: Pool
    name: value
  - description: The continuation token.
    types:
    - uid: string
    name: nextLink
- name: CloudError
  description: An error response from the Batch service.
  kind: object
  properties:
  - description: An error response from the Batch service.
    types:
    - uid: CloudErrorBody
    name: error
- name: Pool
  description: Contains information about a pool.
  kind: object
  properties:
  - description: The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.
    types:
    - uid: string
    name: properties.displayName
  - isReadyOnly: true
    description: This is the last time at which the pool level data, such as the targetDedicatedNodes or autoScaleSettings, changed. It does not factor in node-level changes such as a compute node changing state.
    types:
    - uid: string
    name: properties.lastModified
  - isReadyOnly: true
    description: The creation time of the pool.
    types:
    - uid: string
    name: properties.creationTime
  - isReadyOnly: true
    description: >-
      Values are:

       Succeeded - The pool is available to run tasks subject to the availability of compute nodes.
       Deleting - The user has requested that the pool be deleted, but the delete operation has not yet completed.
    types:
    - uid: PoolProvisioningState
    name: properties.provisioningState
  - isReadyOnly: true
    description: The time at which the pool entered its current state.
    types:
    - uid: string
    name: properties.provisioningStateTransitionTime
  - isReadyOnly: true
    description: >-
      Values are:

       Steady - The pool is not resizing. There are no changes to the number of nodes in the pool in progress. A pool enters this state when it is created and when no operations are being performed on the pool to change the number of dedicated nodes.
       Resizing - The pool is resizing; that is, compute nodes are being added to or removed from the pool.
       Stopping - The pool was resizing, but the user has requested that the resize be stopped, but the stop request has not yet been completed.
    types:
    - uid: AllocationState
    name: properties.allocationState
  - isReadyOnly: true
    description: The time at which the pool entered its current allocation state.
    types:
    - uid: string
    name: properties.allocationStateTransitionTime
  - description: For information about available sizes of virtual machines for Cloud Services pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/). Batch supports all Cloud Services VM sizes except ExtraSmall. For information about available VM sizes for pools using images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/) or Sizes for Virtual Machines (Windows) (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/). Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).
    types:
    - uid: string
    name: properties.vmSize
  - description: Using CloudServiceConfiguration specifies that the nodes should be creating using Azure Cloud Services (PaaS), while VirtualMachineConfiguration uses Azure Virtual Machines (IaaS).
    types:
    - uid: DeploymentConfiguration
    name: properties.deploymentConfiguration
  - isReadyOnly: true
    description: The number of compute nodes currently in the pool.
    types:
    - uid: integer
    name: properties.currentDedicatedNodes
  - isReadyOnly: true
    description: The number of low priority compute nodes currently in the pool.
    types:
    - uid: integer
    name: properties.currentLowPriorityNodes
  - description: Defines the desired size of the pool. This can either be 'fixedScale' where the requested targetDedicatedNodes is specified, or 'autoScale' which defines a formula which is periodically reevaluated. If this property is not specified, the pool will have a fixed scale with 0 targetDedicatedNodes.
    types:
    - uid: ScaleSettings
    name: properties.scaleSettings
  - isReadyOnly: true
    description: This property is set only if the pool automatically scales, i.e. autoScaleSettings are used.
    types:
    - uid: AutoScaleRun
    name: properties.autoScaleRun
  - description: This imposes restrictions on which nodes can be assigned to the pool. Enabling this value can reduce the chance of the requested number of nodes to be allocated in the pool. If not specified, this value defaults to 'Disabled'.
    types:
    - uid: InterNodeCommunicationState
    name: properties.interNodeCommunication
  - description: The network configuration for a pool.
    types:
    - uid: NetworkConfiguration
    name: properties.networkConfiguration
  - description: The maximum number of tasks that can run concurrently on a single compute node in the pool.
    types:
    - uid: integer
    name: properties.maxTasksPerNode
  - description: How tasks are distributed across compute nodes in a pool.
    types:
    - uid: TaskSchedulingPolicy
    name: properties.taskSchedulingPolicy
  - description: The list of user accounts to be created on each node in the pool.
    types:
    - uid: UserAccount
    name: properties.userAccounts
  - description: The Batch service does not assign any meaning to metadata; it is solely for the use of user code.
    types:
    - uid: MetadataItem
    name: properties.metadata
  - description: In an PATCH (update) operation, this property can be set to an empty object to remove the start task from the pool.
    types:
    - uid: StartTask
    name: properties.startTask
  - description: For Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.
    types:
    - uid: CertificateReference
    name: properties.certificates
  - description: Changes to application packages affect all new compute nodes joining the pool, but do not affect compute nodes that are already in the pool until they are rebooted or reimaged.
    types:
    - uid: ApplicationPackageReference
    name: properties.applicationPackages
  - description: The list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail.
    types:
    - uid: string
    name: properties.applicationLicenses
  - isReadyOnly: true
    description: Describes either the current operation (if the pool AllocationState is Resizing) or the previously completed operation (if the AllocationState is Steady).
    types:
    - uid: ResizeOperationStatus
    name: properties.resizeOperationStatus
  - isReadyOnly: true
    description: The ID of the resource.
    types:
    - uid: string
    name: id
  - isReadyOnly: true
    description: The name of the resource.
    types:
    - uid: string
    name: name
  - isReadyOnly: true
    description: The type of the resource.
    types:
    - uid: string
    name: type
  - isReadyOnly: true
    description: The ETag of the resource, used for concurrency statements.
    types:
    - uid: string
    name: etag
- name: CloudErrorBody
  description: An error response from the Batch service.
  kind: object
  properties:
  - description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
    name: code
  - description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
    name: message
  - description: The target of the particular error. For example, the name of the property in error.
    types:
    - uid: string
    name: target
  - description: A list of additional details about the error.
    types:
    - uid: Details
    name: details
- name: PoolProvisioningState
  description: >-
    Values are:

     Succeeded - The pool is available to run tasks subject to the availability of compute nodes.
     Deleting - The user has requested that the pool be deleted, but the delete operation has not yet completed.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Succeeded
  - types:
    - uid: string
    name: Deleting
- name: AllocationState
  description: >-
    Values are:

     Steady - The pool is not resizing. There are no changes to the number of nodes in the pool in progress. A pool enters this state when it is created and when no operations are being performed on the pool to change the number of dedicated nodes.
     Resizing - The pool is resizing; that is, compute nodes are being added to or removed from the pool.
     Stopping - The pool was resizing, but the user has requested that the resize be stopped, but the stop request has not yet been completed.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Steady
  - types:
    - uid: string
    name: Resizing
  - types:
    - uid: string
    name: Stopping
- name: DeploymentConfiguration
  description: Using CloudServiceConfiguration specifies that the nodes should be creating using Azure Cloud Services (PaaS), while VirtualMachineConfiguration uses Azure Virtual Machines (IaaS).
  kind: object
  properties:
  - description: This property and virtualMachineConfiguration are mutually exclusive and one of the properties must be specified. This property cannot be specified if the Batch account was created with its poolAllocationMode property set to 'UserSubscription'.
    types:
    - uid: CloudServiceConfiguration
    name: cloudServiceConfiguration
  - description: This property and cloudServiceConfiguration are mutually exclusive and one of the properties must be specified.
    types:
    - uid: VirtualMachineConfiguration
    name: virtualMachineConfiguration
- name: ScaleSettings
  description: Defines the desired size of the pool. This can either be 'fixedScale' where the requested targetDedicatedNodes is specified, or 'autoScale' which defines a formula which is periodically reevaluated. If this property is not specified, the pool will have a fixed scale with 0 targetDedicatedNodes.
  kind: object
  properties:
  - description: This property and autoScale are mutually exclusive and one of the properties must be specified.
    types:
    - uid: FixedScaleSettings
    name: fixedScale
  - description: This property and fixedScale are mutually exclusive and one of the properties must be specified.
    types:
    - uid: AutoScaleSettings
    name: autoScale
- name: AutoScaleRun
  description: This property is set only if the pool automatically scales, i.e. autoScaleSettings are used.
  kind: object
  properties:
  - description: The time at which the autoscale formula was last evaluated.
    types:
    - uid: string
    name: evaluationTime
  - description: Each variable value is returned in the form $variable=value, and variables are separated by semicolons.
    types:
    - uid: string
    name: results
  - description: Details of the error encountered evaluating the autoscale formula on the pool, if the evaluation was unsuccessful.
    types:
    - uid: AutoScaleRunError
    name: error
- name: InterNodeCommunicationState
  description: This imposes restrictions on which nodes can be assigned to the pool. Enabling this value can reduce the chance of the requested number of nodes to be allocated in the pool. If not specified, this value defaults to 'Disabled'.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Enabled
  - types:
    - uid: string
    name: Disabled
- name: NetworkConfiguration
  description: The network configuration for a pool.
  kind: object
  properties:
  - description: "The virtual network must be in the same region and subscription as the Azure Batch account. The specified subnet should have enough free IP addresses to accommodate the number of nodes in the pool. If the subnet doesn't have enough free IP addresses, the pool will partially allocate compute nodes, and a resize error will occur. The 'MicrosoftAzureBatch' service principal must have the 'Classic Virtual Machine Contributor' Role-Based Access Control (RBAC) role for the specified VNet. The specified subnet must allow communication from the Azure Batch service to be able to schedule tasks on the compute nodes. This can be verified by checking if the specified VNet has any associated Network Security Groups (NSG). If communication to the compute nodes in the specified subnet is denied by an NSG, then the Batch service will set the state of the compute nodes to unusable. For pools created via virtualMachineConfiguration the Batch account must have poolAllocationMode userSubscription in order to use a VNet. If the specified VNet has any associated Network Security Groups (NSG), then a few reserved system ports must be enabled for inbound communication. For pools created with a virtual machine configuration, enable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for Windows. For pools created with a cloud service configuration, enable ports 10100, 20100, and 30100. Also enable outbound connections to Azure Storage on port 443. For more details see: https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration"
    types:
    - uid: string
    name: subnetId
  - description: Pool endpoint configuration is only supported on pools with the virtualMachineConfiguration property.
    types:
    - uid: PoolEndpointConfiguration
    name: endpointConfiguration
- name: TaskSchedulingPolicy
  description: How tasks are distributed across compute nodes in a pool.
  kind: object
  properties:
  - description: How tasks should be distributed across compute nodes.
    types:
    - uid: ComputeNodeFillType
    name: nodeFillType
- name: UserAccount
  description: The list of user accounts to be created on each node in the pool.
  kind: object
  properties:
  - description: The name of the user account.
    types:
    - uid: string
    name: name
  - description: The password for the user account.
    types:
    - uid: string
    name: password
  - description: nonAdmin - The auto user is a standard user without elevated access. admin - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
    types:
    - uid: ElevationLevel
    name: elevationLevel
  - description: This property is ignored if specified on a Windows pool. If not specified, the user is created with the default options.
    types:
    - uid: LinuxUserConfiguration
    name: linuxUserConfiguration
- name: MetadataItem
  description: The Batch service does not assign any meaning to metadata; it is solely for the use of user code.
  kind: object
  properties:
  - description: The name of the metadata item.
    types:
    - uid: string
    name: name
  - description: The value of the metadata item.
    types:
    - uid: string
    name: value
- name: StartTask
  description: In an PATCH (update) operation, this property can be set to an empty object to remove the start task from the pool.
  kind: object
  properties:
  - description: The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. Required if any other properties of the startTask are specified.
    types:
    - uid: string
    name: commandLine
  - description: A list of files that the Batch service will download to the compute node before running the command line.
    types:
    - uid: ResourceFile
    name: resourceFiles
  - description: A list of environment variable settings for the start task.
    types:
    - uid: EnvironmentSetting
    name: environmentSettings
  - description: If omitted, the task runs as a non-administrative user unique to the task.
    types:
    - uid: UserIdentity
    name: userIdentity
  - description: The Batch service retries a task if its exit code is nonzero. Note that this value specifically controls the number of retries. The Batch service will try the task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the task. If the maximum retry count is -1, the Batch service retries the task without limit.
    types:
    - uid: integer
    name: maxTaskRetryCount
  - description: If true and the start task fails on a compute node, the Batch service retries the start task up to its maximum retry count (maxTaskRetryCount). If the task has still not completed successfully after all retries, then the Batch service marks the compute node unusable, and will not schedule tasks to it. This condition can be detected via the node state and scheduling error detail. If false, the Batch service will not wait for the start task to complete. In this case, other tasks can start executing on the compute node while the start task is still running; and even if the start task fails, new tasks will continue to be scheduled on the node. The default is false.
    types:
    - uid: boolean
    name: waitForSuccess
- name: CertificateReference
  description: For Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.
  kind: object
  properties:
  - description: The fully qualified ID of the certificate to install on the pool. This must be inside the same batch account as the pool.
    types:
    - uid: string
    name: id
  - description: The default value is currentUser. This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.
    types:
    - uid: CertificateStoreLocation
    name: storeLocation
  - description: 'This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). Common store names include: My, Root, CA, Trust, Disallowed, TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but any custom store name can also be used. The default value is My.'
    types:
    - uid: string
    name: storeName
  - description: >-
      Values are:

       starttask - The user account under which the start task is run.
       task - The accounts under which job tasks are run.
       remoteuser - The accounts under which users remotely access the node.

       You can specify more than one visibility in this collection. The default is all accounts.
    types:
    - uid: string
    name: visibility
- name: ApplicationPackageReference
  description: Changes to application packages affect all new compute nodes joining the pool, but do not affect compute nodes that are already in the pool until they are rebooted or reimaged.
  kind: object
  properties:
  - description: The ID of the application package to install. This must be inside the same batch account as the pool. This can either be a reference to a specific version or the default version if one exists.
    types:
    - uid: string
    name: id
  - description: If this is omitted, and no default version is specified for this application, the request fails with the error code InvalidApplicationPackageReferences. If you are calling the REST API directly, the HTTP status code is 409.
    types:
    - uid: string
    name: version
- name: ResizeOperationStatus
  description: Describes either the current operation (if the pool AllocationState is Resizing) or the previously completed operation (if the AllocationState is Steady).
  kind: object
  properties:
  - description: The desired number of dedicated compute nodes in the pool.
    types:
    - uid: integer
    name: targetDedicatedNodes
  - description: The desired number of low-priority compute nodes in the pool.
    types:
    - uid: integer
    name: targetLowPriorityNodes
  - description: The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).
    types:
    - uid: string
    name: resizeTimeout
  - description: The default value is requeue.
    types:
    - uid: ComputeNodeDeallocationOption
    name: nodeDeallocationOption
  - description: The time when this resize operation was started.
    types:
    - uid: string
    name: startTime
  - description: This property is set only if an error occurred during the last pool resize, and only when the pool allocationState is Steady.
    types:
    - uid: ResizeError
    name: errors
- name: CloudServiceConfiguration
  description: This property and virtualMachineConfiguration are mutually exclusive and one of the properties must be specified. This property cannot be specified if the Batch account was created with its poolAllocationMode property set to 'UserSubscription'.
  kind: object
  properties:
  - description: 'Possible values are: 2 - OS Family 2, equivalent to Windows Server 2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 - OS Family 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5, equivalent to Windows Server 2016. For more information, see Azure Guest OS Releases (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).'
    types:
    - uid: string
    name: osFamily
  - description: The default value is * which specifies the latest operating system version for the specified OS family.
    types:
    - uid: string
    name: targetOSVersion
  - description: This may differ from targetOSVersion if the pool state is Upgrading. In this case some virtual machines may be on the targetOSVersion and some may be on the currentOSVersion during the upgrade process. Once all virtual machines have upgraded, currentOSVersion is updated to be the same as targetOSVersion.
    types:
    - uid: string
    name: currentOSVersion
- name: VirtualMachineConfiguration
  description: This property and cloudServiceConfiguration are mutually exclusive and one of the properties must be specified.
  kind: object
  properties:
  - description: A reference to the Azure Virtual Machines Marketplace Image or the custom Virtual Machine Image to use.
    types:
    - uid: ImageReference
    name: imageReference
  - description: Settings for the operating system disk of the Virtual Machine.
    types:
    - uid: OSDisk
    name: osDisk
  - description: The Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface between the node and the Batch service. There are different implementations of the node agent, known as SKUs, for different operating systems. You must specify a node agent SKU which matches the selected image reference. To get the list of supported node agent SKUs along with their list of verified image references, see the 'List supported node agent SKUs' operation.
    types:
    - uid: string
    name: nodeAgentSkuId
  - description: This property must not be specified if the imageReference specifies a Linux OS image.
    types:
    - uid: WindowsConfiguration
    name: windowsConfiguration
  - description: This property must be specified if the compute nodes in the pool need to have empty data disks attached to them.
    types:
    - uid: DataDisk
    name: dataDisks
  - description: >
      This only applies to images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the nodes which will be deployed. If omitted, no on-premises licensing discount is applied. Values are:

       Windows_Server - The on-premises license is for Windows Server.
       Windows_Client - The on-premises license is for Windows Client.
    types:
    - uid: string
    name: licenseType
- name: FixedScaleSettings
  description: This property and autoScale are mutually exclusive and one of the properties must be specified.
  kind: object
  properties:
  - description: The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service rejects the request with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).
    types:
    - uid: string
    name: resizeTimeout
  - description: At least one of targetDedicatedNodes, targetLowPriority nodes must be set.
    types:
    - uid: integer
    name: targetDedicatedNodes
  - description: At least one of targetDedicatedNodes, targetLowPriority nodes must be set.
    types:
    - uid: integer
    name: targetLowPriorityNodes
  - description: If omitted, the default value is Requeue.
    types:
    - uid: ComputeNodeDeallocationOption
    name: nodeDeallocationOption
- name: AutoScaleSettings
  description: This property and fixedScale are mutually exclusive and one of the properties must be specified.
  kind: object
  properties:
  - description: A formula for the desired number of compute nodes in the pool.
    types:
    - uid: string
    name: formula
  - description: If omitted, the default value is 15 minutes (PT15M).
    types:
    - uid: string
    name: evaluationInterval
- name: AutoScaleRunError
  description: Details of the error encountered evaluating the autoscale formula on the pool, if the evaluation was unsuccessful.
  kind: object
  properties:
  - description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
    name: code
  - description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
    name: message
  - description: Additional details about the error.
    types:
    - uid: Details
    name: details
- name: PoolEndpointConfiguration
  description: Pool endpoint configuration is only supported on pools with the virtualMachineConfiguration property.
  kind: object
  properties:
  - description: The maximum number of inbound NAT pools per Batch pool is 5. If the maximum number of inbound NAT pools is exceeded the request fails with HTTP status code 400.
    types:
    - uid: InboundNatPool
    name: inboundNatPools
- name: ComputeNodeFillType
  description: How tasks should be distributed across compute nodes.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Spread
  - types:
    - uid: string
    name: Pack
- name: ElevationLevel
  description: nonAdmin - The auto user is a standard user without elevated access. admin - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
  kind: enum
  properties:
  - types:
    - uid: string
    name: NonAdmin
  - types:
    - uid: string
    name: Admin
- name: LinuxUserConfiguration
  description: This property is ignored if specified on a Windows pool. If not specified, the user is created with the default options.
  kind: object
  properties:
  - description: The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the uid.
    types:
    - uid: integer
    name: uid
  - description: The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the gid.
    types:
    - uid: integer
    name: gid
  - description: The private key must not be password protected. The private key is used to automatically configure asymmetric-key based authentication for SSH between nodes in a Linux pool when the pool's enableInterNodeCommunication property is true (it is ignored if enableInterNodeCommunication is false). It does this by placing the key pair into the user's .ssh directory. If not specified, password-less SSH is not configured between nodes (no modification of the user's .ssh directory is done).
    types:
    - uid: string
    name: sshPrivateKey
- name: ResourceFile
  description: A list of files that the Batch service will download to the compute node before running the command line.
  kind: object
  properties:
  - description: 'This URL must be readable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob, or set the ACL for the blob or its container to allow public access.'
    types:
    - uid: string
    name: blobSource
  - description: The location on the compute node to which to download the file, relative to the task's working directory.
    types:
    - uid: string
    name: filePath
  - description: This property applies only to files being downloaded to Linux compute nodes. It will be ignored if it is specified for a resourceFile which will be downloaded to a Windows node. If this property is not specified for a Linux node, then a default value of 0770 is applied to the file.
    types:
    - uid: string
    name: fileMode
- name: EnvironmentSetting
  description: A list of environment variable settings for the start task.
  kind: object
  properties:
  - description: The name of the environment variable.
    types:
    - uid: string
    name: name
  - description: The value of the environment variable.
    types:
    - uid: string
    name: value
- name: UserIdentity
  description: If omitted, the task runs as a non-administrative user unique to the task.
  kind: object
  properties:
  - description: The userName and autoUser properties are mutually exclusive; you must specify one but not both.
    types:
    - uid: string
    name: userName
  - description: The userName and autoUser properties are mutually exclusive; you must specify one but not both.
    types:
    - uid: AutoUserSpecification
    name: autoUser
- name: CertificateStoreLocation
  description: The default value is currentUser. This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.
  kind: enum
  properties:
  - types:
    - uid: string
    name: CurrentUser
  - types:
    - uid: string
    name: LocalMachine
- name: ComputeNodeDeallocationOption
  description: If omitted, the default value is Requeue.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Requeue
  - types:
    - uid: string
    name: Terminate
  - types:
    - uid: string
    name: TaskCompletion
  - types:
    - uid: string
    name: RetainedData
- name: ResizeError
  description: This property is set only if an error occurred during the last pool resize, and only when the pool allocationState is Steady.
  kind: object
  properties:
  - description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    types:
    - uid: string
    name: code
  - description: A message describing the error, intended to be suitable for display in a user interface.
    types:
    - uid: string
    name: message
  - description: Additional details about the error.
    types:
    - uid: Details
    name: details
- name: ImageReference
  description: A reference to the Azure Virtual Machines Marketplace Image or the custom Virtual Machine Image to use.
  kind: object
  properties:
  - description: For example, Canonical or MicrosoftWindowsServer.
    types:
    - uid: string
    name: publisher
  - description: For example, UbuntuServer or WindowsServer.
    types:
    - uid: string
    name: offer
  - description: For example, 14.04.0-LTS or 2012-R2-Datacenter.
    types:
    - uid: string
    name: sku
  - description: A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'.
    types:
    - uid: string
    name: version
  - description: This property is mutually exclusive with other properties. The virtual machine image must be in the same region and subscription as the Azure Batch account. For information about the firewall settings for Batch node agent to communicate with Batch service see https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration .
    types:
    - uid: string
    name: id
- name: OSDisk
  description: Settings for the operating system disk of the Virtual Machine.
  kind: object
  properties:
  - description: Default value is none.
    types:
    - uid: CachingType
    name: caching
- name: WindowsConfiguration
  description: This property must not be specified if the imageReference specifies a Linux OS image.
  kind: object
  properties:
  - description: If omitted, the default value is true.
    types:
    - uid: boolean
    name: enableAutomaticUpdates
- name: DataDisk
  description: This property must be specified if the compute nodes in the pool need to have empty data disks attached to them.
  kind: object
  properties:
  - description: The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun.
    types:
    - uid: integer
    name: lun
  - description: >-
      Values are:

       none - The caching mode for the disk is not enabled.
       readOnly - The caching mode for the disk is read only.
       readWrite - The caching mode for the disk is read and write.

       The default value for caching is none. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
    types:
    - uid: CachingType
    name: caching
  - description: The initial disk size in GB when creating new data disk.
    types:
    - uid: integer
    name: diskSizeGB
  - description: >-
      If omitted, the default is "Standard_LRS". Values are:

       Standard_LRS - The data disk should use standard locally redundant storage.
       Premium_LRS - The data disk should use premium locally redundant storage.
    types:
    - uid: StorageAccountType
    name: storageAccountType
- name: InboundNatPool
  description: The maximum number of inbound NAT pools per Batch pool is 5. If the maximum number of inbound NAT pools is exceeded the request fails with HTTP status code 400.
  kind: object
  properties:
  - description: The name must be unique within a Batch pool, can contain letters, numbers, underscores, periods, and hyphens. Names must start with a letter or number, must end with a letter, number, or underscore, and cannot exceed 77 characters.  If any invalid values are provided the request fails with HTTP status code 400.
    types:
    - uid: string
    name: name
  - description: The protocol of the endpoint.
    types:
    - uid: InboundEndpointProtocol
    name: protocol
  - description: This must be unique within a Batch pool. Acceptable values are between 1 and 65535 except for 22, 3389, 29876 and 29877 as these are reserved. If any reserved values are provided the request fails with HTTP status code 400.
    types:
    - uid: integer
    name: backendPort
  - description: Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved. All ranges within a pool must be distinct and cannot overlap. If any reserved or overlapping values are provided the request fails with HTTP status code 400.
    types:
    - uid: integer
    name: frontendPortRangeStart
  - description: Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved by the Batch service. All ranges within a pool must be distinct and cannot overlap. If any reserved or overlapping values are provided the request fails with HTTP status code 400.
    types:
    - uid: integer
    name: frontendPortRangeEnd
  - description: The maximum number of rules that can be specified across all the endpoints on a Batch pool is 25. If no network security group rules are specified, a default rule will be created to allow inbound access to the specified backendPort. If the maximum number of network security group rules is exceeded the request fails with HTTP status code 400.
    types:
    - uid: NetworkSecurityGroupRule
    name: networkSecurityGroupRules
- name: AutoUserSpecification
  description: The userName and autoUser properties are mutually exclusive; you must specify one but not both.
  kind: object
  properties:
  - description: pool - specifies that the task runs as the common auto user account which is created on every node in a pool. task - specifies that the service should create a new user for the task. The default value is task.
    types:
    - uid: AutoUserScope
    name: scope
  - description: nonAdmin - The auto user is a standard user without elevated access. admin - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
    types:
    - uid: ElevationLevel
    name: elevationLevel
- name: CachingType
  description: Default value is none.
  kind: enum
  properties:
  - types:
    - uid: string
    name: None
  - types:
    - uid: string
    name: ReadOnly
  - types:
    - uid: string
    name: ReadWrite
- name: StorageAccountType
  description: >-
    If omitted, the default is "Standard_LRS". Values are:

     Standard_LRS - The data disk should use standard locally redundant storage.
     Premium_LRS - The data disk should use premium locally redundant storage.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Standard_LRS
  - types:
    - uid: string
    name: Premium_LRS
- name: InboundEndpointProtocol
  description: The protocol of the endpoint.
  kind: enum
  properties:
  - types:
    - uid: string
    name: TCP
  - types:
    - uid: string
    name: UDP
- name: NetworkSecurityGroupRule
  description: The maximum number of rules that can be specified across all the endpoints on a Batch pool is 25. If no network security group rules are specified, a default rule will be created to allow inbound access to the specified backendPort. If the maximum number of network security group rules is exceeded the request fails with HTTP status code 400.
  kind: object
  properties:
  - description: Priorities within a pool must be unique and are evaluated in order of priority. The lower the number the higher the priority. For example, rules could be specified with order numbers of 150, 250, and 350. The rule with the order number of 150 takes precedence over the rule that has an order of 250. Allowed priorities are 150 to 3500. If any reserved or duplicate values are provided the request fails with HTTP status code 400.
    types:
    - uid: integer
    name: priority
  - description: The action that should be taken for a specified IP address, subnet range or tag.
    types:
    - uid: NetworkSecurityGroupRuleAccess
    name: access
  - description: Valid values are a single IP address (i.e. 10.10.10.10), IP subnet (i.e. 192.168.1.0/24), default tag, or * (for all addresses).  If any other values are provided the request fails with HTTP status code 400.
    types:
    - uid: string
    name: sourceAddressPrefix
- name: AutoUserScope
  description: pool - specifies that the task runs as the common auto user account which is created on every node in a pool. task - specifies that the service should create a new user for the task. The default value is task.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Task
  - types:
    - uid: string
    name: Pool
- name: NetworkSecurityGroupRuleAccess
  description: The action that should be taken for a specified IP address, subnet range or tag.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Allow
  - types:
    - uid: string
    name: Deny
examples:
- request:
    uri: GET https://management.azure.com/subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools?api-version=2017-09-01
  responses:
  - statusCode: "200"
    body: >-
      {

        "value": [

          {

            "id": "/subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool",

            "name": "testpool",

            "type": "Microsoft.Batch/batchAccounts/pools",

            "etag": "W/\"0x8D4EDFEBFADF4AB\"",

            "properties": {

              "lastModified": "2017-08-28T10:22:55.9407275Z",

              "creationTime": "2017-08-28T10:22:55.9407275Z",

              "provisioningState": "Succeeded",

              "provisioningStateTransitionTime": "2017-08-28T10:22:55.9407275Z",

              "allocationState": "Steady",

              "allocationStateTransitionTime": "2017-08-28T10:22:55.9407275Z",

              "vmSize": "STANDARD_D4",

              "interNodeCommunication": "Enabled",

              "maxTasksPerNode": 13,

              "taskSchedulingPolicy": {

                "nodeFillType": "Pack"

              },

              "deploymentConfiguration": {

                "cloudServiceConfiguration": {

                  "osFamily": "4",

                  "targetOSVersion": "WA-GUEST-OS-4.45_201708-01"

                }

              },

              "scaleSettings": {

                "fixedScale": {

                  "targetDedicatedNodes": 6,

                  "targetLowPriorityNodes": 28,

                  "resizeTimeout": "PT8M"

                }

              },

              "networkConfiguration": {

                "subnetId": "/subscriptions/subid/resourceGroups/rg1234/providers/Microsoft.Network/virtualNetworks/network1234/subnets/subnet123",

                "endpointConfiguration": {

                  "inboundNatPools": [

                    {

                      "name": "testnat",

                      "protocol": "TCP",

                      "backendPort": 12001,

                      "frontendPortRangeStart": 15000,

                      "frontendPortRangeEnd": 15100,

                      "networkSecurityGroupRules": [

                        {

                          "access": "Allow",

                          "sourceAddressPrefix": "192.100.12.45",

                          "priority": 150

                        },

                        {

                          "access": "Deny",

                          "sourceAddressPrefix": "*",

                          "priority": 3500

                        }

                      ]

                    }

                  ]

                }

              },

              "metadata": [

                {

                  "name": "metadata-1",

                  "value": "value-1"

                },

                {

                  "name": "metadata-2",

                  "value": "value-2"

                }

              ],

              "startTask": {

                "commandLine": "cmd /c SET",

                "resourceFiles": [

                  {

                    "blobSource": "https://testaccount.blob.core.windows.net/example-blob-file",

                    "filePath": "c:\\temp\\gohere",

                    "fileMode": "777"

                  }

                ],

                "environmentSettings": [

                  {

                    "name": "MYSET",

                    "value": "1234"

                  }

                ],

                "userIdentity": {

                  "autoUser": {

                    "scope": "Pool",

                    "elevationLevel": "Admin"

                  }

                },

                "maxTaskRetryCount": 6,

                "waitForSuccess": true

              },

              "userAccounts": [

                {

                  "name": "username1",

                  "elevationLevel": "Admin",

                  "linuxUserConfiguration": {

                    "uid": 1234,

                    "gid": 4567

                  }

                }

              ],

              "applicationPackages": [

                {

                  "id": "/subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool/applications/app_1234",

                  "version": "asdf"

                }

              ],

              "certificates": [

                {

                  "id": "/subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool/certificates/SHA1-1234567",

                  "storeLocation": "LocalMachine",

                  "storeName": "MY",

                  "visibility": [

                    "RemoteUser"

                  ]

                }

              ],

              "applicationLicenses": [

                "app-license0",

                "app-license1"

              ],

              "currentDedicatedNodes": 0,

              "currentLowPriorityNodes": 0,

              "resizeOperationStatus": {

                "startTime": "2017-08-28T10:22:55.9407275Z",

                "targetDedicatedNodes": 6,

                "targetLowPriorityNodes": 28,

                "nodeDeallocationOption": "TaskCompletion",

                "resizeTimeout": "PT8M",

                "errors": [

                  {

                    "code": "AllocationTimedout",

                    "message": "Desired number of dedicated nodes could not be allocated as the resize timeout was reached"

                  }

                ]

              }

            }

          }

        ]

      }
  name: ListPool
- request:
    uri: GET https://management.azure.com/subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools?$select=properties/allocationState,properties/provisioningStateTransitionTime,properties/currentDedicatedNodes,properties/currentLowPriorityNodes&$filter=startswith(name, 'po') or (properties/allocationState eq 'Steady' and properties/provisioningStateTransitionTime lt datetime'2017-02-02')&api-version=2017-09-01
  responses:
  - statusCode: "200"
    body: >-
      {

        "value": [

          {

            "id": "/subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool",

            "name": "testpool",

            "type": "Microsoft.Batch/batchAccounts/pools",

            "etag": "W/\"0x8D4EDFEBFADF4AB\"",

            "properties": {

              "provisioningStateTransitionTime": "2017-08-28T10:22:55.9407275Z",

              "allocationState": "Steady",

              "currentDedicatedNodes": 0,

              "currentLowPriorityNodes": 2

            }

          },

          {

            "id": "/subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/pooltest",

            "name": "pooltest",

            "type": "Microsoft.Batch/batchAccounts/pools",

            "etag": "W/\"0x8D4EDFEBFADF4AB\"",

            "properties": {

              "provisioningStateTransitionTime": "2017-08-26T10:22:55.9407275Z",

              "allocationState": "Resizing",

              "currentDedicatedNodes": 4,

              "currentLowPriorityNodes": 0

            }

          }

        ]

      }
  name: ListPoolWithFilter
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - description: impersonate your user account
    name: user_impersonation
name: ListByBatchAccount
uid: management.azure.com.batchmanagement.pool.listbybatchaccount

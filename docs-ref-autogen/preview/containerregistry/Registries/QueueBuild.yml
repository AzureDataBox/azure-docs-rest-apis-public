### YamlMime:RESTOperation
uid: management.azure.com.containerregistry.registries.queuebuild
name: Queue Build
service: Container Registry
groupName: Registries
apiVersion: 2018-02-01-preview
summary: Creates a new build based on the request parameters and add it to the build queue.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/queueBuild?api-version=2018-02-01-preview
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The Microsoft Azure subscription ID.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group to which the container registry belongs.
  types:
  - uid: string
- name: registryName
  in: path
  isRequired: true
  description: The name of the container registry.
  types:
  - uid: string
  pattern: ^[a-zA-Z0-9]*$
- name: api-version
  in: query
  isRequired: true
  description: The client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: The request was successful; the request was well-formed and received properly.
  types:
  - uid: Build
- name: 202 Accepted
  description: The request was successfully accepted; the operation will complete asynchronously.
- name: Other Status Codes
  description: Error response describing why the operation failed. If the registry/build doesn't exist, 404 (Not found) is returned. If any of the input parameters is wrong, 400(Bad Request) is returned.
requestBody:
- name: BuildTaskBuildRequest
  description: The queue build parameters based on a build task.
  parameters:
  - name: buildTaskName
    in: body
    isRequired: true
    description: The name of build task against which build has to be queued.
    types:
    - uid: string
- name: QuickBuildRequest
  description: The queue build request parameters for a quick build.
  parameters:
  - name: imageNames
    in: body
    description: The fully qualified image names including the repository and tag.
    types:
    - uid: string
      isArray: true
  - name: sourceLocation
    in: body
    isRequired: true
    description: >-
      The URL(absolute or relative) of the source that needs to be built. For Docker build, it can be an URL to a tar or github repoistory as supported by Docker.

      If it is relative URL, the relative path should be obtained from calling getSourceUploadUrl API.
    types:
    - uid: string
  - name: buildArguments
    in: body
    description: The collection of build arguments to be used.
    types:
    - uid: BuildArgument
      isArray: true
  - name: isPushEnabled
    in: body
    description: The value of this property indicates whether the image built should be pushed to the registry or not.
    types:
    - uid: boolean
  - name: noCache
    in: body
    description: The value of this property indicates whether the image cache is enabled or not.
    types:
    - uid: boolean
  - name: timeout
    in: body
    description: Build timeout in seconds.
    types:
    - uid: integer
  - name: platform
    in: body
    isRequired: true
    description: The platform properties against which the build will happen.
    types:
    - uid: PlatformProperties
  - name: dockerFilePath
    in: body
    isRequired: true
    description: The Docker file path relative to the source location.
    types:
    - uid: string
requestHeader: []
definitions:
- name: BuildTaskBuildRequest
  description: The queue build parameters based on a build task.
  kind: object
  properties:
  - name: buildTaskName
    description: The name of build task against which build has to be queued.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the build request.
    types:
    - uid: BuildTask
    typesTitle: string
- name: QuickBuildRequest
  description: The queue build request parameters for a quick build.
  kind: object
  properties:
  - name: imageNames
    description: The fully qualified image names including the repository and tag.
    types:
    - uid: string
      isArray: true
  - name: sourceLocation
    description: >-
      The URL(absolute or relative) of the source that needs to be built. For Docker build, it can be an URL to a tar or github repoistory as supported by Docker.

      If it is relative URL, the relative path should be obtained from calling getSourceUploadUrl API.
    types:
    - uid: string
  - name: buildArguments
    description: The collection of build arguments to be used.
    types:
    - uid: BuildArgument
      isArray: true
  - name: isPushEnabled
    description: The value of this property indicates whether the image built should be pushed to the registry or not.
    types:
    - uid: boolean
  - name: noCache
    description: The value of this property indicates whether the image cache is enabled or not.
    types:
    - uid: boolean
  - name: timeout
    description: Build timeout in seconds.
    types:
    - uid: integer
  - name: platform
    description: The platform properties against which the build will happen.
    types:
    - uid: PlatformProperties
  - name: dockerFilePath
    description: The Docker file path relative to the source location.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the build request.
    types:
    - uid: QuickBuild
    typesTitle: string
- name: Build
  description: Build resource properties
  kind: object
  properties:
  - name: properties.buildId
    description: The unique identifier for the build.
    types:
    - uid: string
  - name: properties.status
    description: The current status of the build.
    types:
    - uid: BuildStatus
  - name: properties.lastUpdatedTime
    description: The last updated time for the build.
    types:
    - uid: string
  - name: properties.buildType
    description: The type of build.
    types:
    - uid: BuildType
  - name: properties.createTime
    description: The time the build was created.
    types:
    - uid: string
  - name: properties.startTime
    description: The time the build started.
    types:
    - uid: string
  - name: properties.finishTime
    description: The time the build finished.
    types:
    - uid: string
  - name: properties.outputImages
    description: The list of all images that were generated from the build.
    types:
    - uid: ImageDescriptor
      isArray: true
  - name: properties.buildTask
    description: The build task with which the build was started.
    types:
    - uid: string
  - name: properties.imageUpdateTrigger
    description: The image update trigger that caused the build.
    types:
    - uid: ImageUpdateTrigger
  - name: properties.gitCommitTrigger
    description: The git commit trigger that caused the build.
    types:
    - uid: GitCommitTrigger
  - name: properties.isArchiveEnabled
    description: The value that indicates whether archiving is enabled or not.
    types:
    - uid: boolean
  - name: properties.platform
    description: The platform properties against which the build will happen.
    types:
    - uid: PlatformProperties
  - name: properties.provisioningState
    description: The provisioning state of a build.
    types:
    - uid: ProvisioningState
  - name: id
    isReadyOnly: true
    description: The resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: The name of the resource.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: The type of the resource.
    types:
    - uid: string
- name: BuildArgument
  description: Properties of a build argument.
  kind: object
  properties:
  - name: type
    description: The type of the argument.
    types:
    - uid: BuildArgumentType
  - name: name
    description: The name of the argument.
    types:
    - uid: string
  - name: value
    description: The value of the argument.
    types:
    - uid: string
  - name: isSecret
    description: Flag to indicate whether the argument represents a secret and want to be removed from build logs.
    types:
    - uid: boolean
- name: PlatformProperties
  description: The platform properties against which the build has to happen.
  kind: object
  properties:
  - name: osType
    description: The operating system type required for the build.
    types:
    - uid: OsType
  - name: cpu
    description: The CPU configuration in terms of number of cores required for the build.
    types:
    - uid: integer
- name: BuildStatus
  description: The current status of the build.
  kind: enum
  properties:
  - name: Queued
    types:
    - uid: string
  - name: Started
    types:
    - uid: string
  - name: Running
    types:
    - uid: string
  - name: Succeeded
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
  - name: Canceled
    types:
    - uid: string
  - name: Error
    types:
    - uid: string
  - name: Timeout
    types:
    - uid: string
- name: BuildType
  description: The type of build.
  kind: enum
  properties:
  - name: AutoBuild
    types:
    - uid: string
  - name: QuickBuild
    types:
    - uid: string
- name: ImageDescriptor
  description: Properties for a registry image.
  kind: object
  properties:
  - name: registry
    description: The registry login server.
    types:
    - uid: string
  - name: repository
    description: The repository name.
    types:
    - uid: string
  - name: tag
    description: The tag name.
    types:
    - uid: string
  - name: digest
    description: The sha256-based digest of the image manifest.
    types:
    - uid: string
- name: ImageUpdateTrigger
  description: The image update trigger that caused a build.
  kind: object
  properties:
  - name: id
    description: The unique ID of the trigger.
    types:
    - uid: string
  - name: timestamp
    description: The timestamp when the image update happened.
    types:
    - uid: string
  - name: images
    description: The list of image updates that caused the build.
    types:
    - uid: ImageDescriptor
      isArray: true
- name: GitCommitTrigger
  description: The git commit trigger that caused a build.
  kind: object
  properties:
  - name: id
    description: The unique ID of the trigger.
    types:
    - uid: string
  - name: commitId
    description: The unique ID that identifies a commit.
    types:
    - uid: string
  - name: repositoryUrl
    description: The repository URL.
    types:
    - uid: string
  - name: branchName
    description: The branch name in the repository.
    types:
    - uid: string
  - name: providerType
    description: The source control provider type.
    types:
    - uid: string
- name: ProvisioningState
  description: The provisioning state of a build.
  kind: enum
  properties:
  - name: Creating
    types:
    - uid: string
  - name: Updating
    types:
    - uid: string
  - name: Deleting
    types:
    - uid: string
  - name: Succeeded
    types:
    - uid: string
  - name: Failed
    types:
    - uid: string
  - name: Canceled
    types:
    - uid: string
- name: BuildArgumentType
  description: The type of the argument.
  kind: enum
  properties:
  - name: DockerBuildArgument
    types:
    - uid: string
- name: OsType
  description: The operating system type required for the build.
  kind: enum
  properties:
  - name: Windows
    types:
    - uid: string
  - name: Linux
    types:
    - uid: string
examples:
- name: Registries_QueueBuild
  request:
    uri: POST https://management.azure.com/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/queueBuild?api-version=2018-02-01-preview
    body: >-
      {
        "type": "QuickBuild",
        "imageNames": [
          "azurerest:testtag"
        ],
        "noCache": true,
        "sourceLocation": "https://myaccount.blob.core.windows.net/sascontainer/source.zip?sv=2015-04-05&st=2015-04-29T22%3A18%3A26Z&se=2015-04-30T02%3A23%3A26Z&sr=b&sp=rw&sip=168.1.5.60-168.1.5.70&spr=https&sig=Z%2FRHIX5Xcg0Mq2rqI3OlWTjEg2tYkboXr1P9ZUXDtkk%3D",
        "buildArguments": [
          {
            "type": "DockerBuildArgument",
            "name": "mytestargument",
            "value": "mytestvalue",
            "isSecret": false
          },
          {
            "type": "DockerBuildArgument",
            "name": "mysecrettestargument",
            "value": "mysecrettestvalue",
            "isSecret": true
          }
        ],
        "isPushEnabled": true,
        "platform": {
          "osType": "Linux",
          "cpu": 2
        },
        "dockerFilePath": "DockerFile"
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "properties": {
          "provisioningState": "Succeeded",
          "buildId": "0accec26-d6de-4757-8e74-d080f38eaaab",
          "status": "Succeeded",
          "lastUpdatedTime": "2018-01-25T05:13:51.617Z"
        },
        "id": "/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/builds/0accec26-d6de-4757-8e74-d080f38eaaab",
        "name": "0accec26-d6de-4757-8e74-d080f38eaaab",
        "type": "Microsoft.ContainerRegistry/registries/builds"
      }
  - statusCode: "202"
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account

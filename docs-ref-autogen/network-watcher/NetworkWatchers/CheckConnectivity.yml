### YamlMime:RESTOperation
uid: management.azure.com.networkwatcher.networkwatchers.checkconnectivity
name: Check Connectivity
service: Network Watcher
groupName: Network Watchers
apiVersion: 2017-10-01
summary: Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.
consumes:
- application/json
- text/json
produces:
- application/json
- text/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectivityCheck?api-version=2017-10-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the network watcher resource group.
  types:
  - uid: string
- name: networkWatcherName
  in: path
  isRequired: true
  description: The name of the network watcher resource.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Successful request for checking connectivity.
  types:
  - uid: ConnectivityInformation
- name: 202 Accepted
  description: Accepted and the operation will complete asynchronously.
  types:
  - uid: ConnectivityInformation
requestBody:
- parameters:
  - name: source
    in: body
    isRequired: true
    description: Parameters that define the source of the connection.
    types:
    - uid: ConnectivitySource
  - name: destination
    in: body
    isRequired: true
    description: Parameters that define destination of connection.
    types:
    - uid: ConnectivityDestination
requestHeader: []
definitions:
- name: ConnectivitySource
  description: Parameters that define the source of the connection.
  kind: object
  properties:
  - name: resourceId
    description: The ID of the resource from which a connectivity check will be initiated.
    types:
    - uid: string
  - name: port
    description: The source port from which a connectivity check will be performed.
    types:
    - uid: integer
- name: ConnectivityDestination
  description: Parameters that define destination of connection.
  kind: object
  properties:
  - name: resourceId
    description: The ID of the resource to which a connection attempt will be made.
    types:
    - uid: string
  - name: address
    description: The IP address or URI the resource to which a connection attempt will be made.
    types:
    - uid: string
  - name: port
    description: Port on which check connectivity will be performed.
    types:
    - uid: integer
- name: ConnectivityInformation
  description: Information on the connectivity status.
  kind: object
  properties:
  - name: hops
    isReadyOnly: true
    description: List of hops between the source and the destination.
    types:
    - uid: ConnectivityHop
      isArray: true
  - name: connectionStatus
    isReadyOnly: true
    description: The connection status.
    types:
    - uid: ConnectionStatus
  - name: avgLatencyInMs
    isReadyOnly: true
    description: Average latency in milliseconds.
    types:
    - uid: integer
  - name: minLatencyInMs
    isReadyOnly: true
    description: Minimum latency in milliseconds.
    types:
    - uid: integer
  - name: maxLatencyInMs
    isReadyOnly: true
    description: Maximum latency in milliseconds.
    types:
    - uid: integer
  - name: probesSent
    isReadyOnly: true
    description: Total number of probes sent.
    types:
    - uid: integer
  - name: probesFailed
    isReadyOnly: true
    description: Number of failed probes.
    types:
    - uid: integer
- name: ConnectivityParameters
  description: Parameters that determine how the connectivity check will be performed.
  kind: object
  properties:
  - name: source
    description: Parameters that define the source of the connection.
    types:
    - uid: ConnectivitySource
  - name: destination
    description: Parameters that define destination of connection.
    types:
    - uid: ConnectivityDestination
- name: ConnectivityHop
  description: Information about a hop between the source and the destination.
  kind: object
  properties:
  - name: type
    isReadyOnly: true
    description: The type of the hop.
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: The ID of the hop.
    types:
    - uid: string
  - name: address
    isReadyOnly: true
    description: The IP address of the hop.
    types:
    - uid: string
  - name: resourceId
    isReadyOnly: true
    description: The ID of the resource corresponding to this hop.
    types:
    - uid: string
  - name: nextHopIds
    isReadyOnly: true
    description: List of next hop identifiers.
    types:
    - uid: string
      isArray: true
  - name: issues
    isReadyOnly: true
    description: List of issues.
    types:
    - uid: ConnectivityIssue
      isArray: true
- name: ConnectionStatus
  description: The connection status.
  kind: enum
  properties:
  - name: Unknown
    types:
    - uid: string
  - name: Connected
    types:
    - uid: string
  - name: Disconnected
    types:
    - uid: string
  - name: Degraded
    types:
    - uid: string
- name: ConnectivityIssue
  description: Information about an issue encountered in the process of checking for connectivity.
  kind: object
  properties:
  - name: origin
    isReadyOnly: true
    description: The origin of the issue.
    types:
    - uid: Origin
  - name: severity
    isReadyOnly: true
    description: The severity of the issue.
    types:
    - uid: Severity
  - name: type
    isReadyOnly: true
    description: The type of issue.
    types:
    - uid: IssueType
  - name: context
    isReadyOnly: true
    description: Provides additional context on the issue.
    types:
    - uid: object
      isArray: true
- name: Origin
  description: The origin of the issue.
  kind: enum
  properties:
  - name: Local
    types:
    - uid: string
  - name: Inbound
    types:
    - uid: string
  - name: Outbound
    types:
    - uid: string
- name: Severity
  description: The severity of the issue.
  kind: enum
  properties:
  - name: Error
    types:
    - uid: string
  - name: Warning
    types:
    - uid: string
- name: IssueType
  description: The type of issue.
  kind: enum
  properties:
  - name: Unknown
    types:
    - uid: string
  - name: AgentStopped
    types:
    - uid: string
  - name: GuestFirewall
    types:
    - uid: string
  - name: DnsResolution
    types:
    - uid: string
  - name: SocketBind
    types:
    - uid: string
  - name: NetworkSecurityRule
    types:
    - uid: string
  - name: UserDefinedRoute
    types:
    - uid: string
  - name: PortThrottled
    types:
    - uid: string
  - name: Platform
    types:
    - uid: string
examples: []
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account

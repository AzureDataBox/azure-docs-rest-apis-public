### YamlMime:RESTOperation
summary: Updates a network watcher tags.
service: Network Watcher
apiVersion: 2017-10-01
groupName: Network Watchers
consumes:
- application/json
- text/json
produces:
- application/json
- text/json
paths:
- content: PATCH https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}?api-version=2017-10-01
uriParameters:
- in: path
  isRequired: true
  description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
  name: subscriptionId
- in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
  name: resourceGroupName
- in: path
  isRequired: true
  description: The name of the network watcher.
  types:
  - uid: string
  name: networkWatcherName
- in: query
  isRequired: true
  description: Client API version.
  types:
  - uid: string
  name: api-version
responses:
- description: Update successful. The operation returns the resulting network watcher resource.
  types:
  - uid: NetworkWatcher
  name: 200 OK
requestBody:
- parameters:
  - in: body
    description: Resource tags.
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
      uid: object
    name: tags
requestHeader: []
definitions:
- name: NetworkWatcher
  description: Network watcher in a resource group.
  kind: object
  properties:
  - description: A unique read-only string that changes whenever the resource is updated.
    types:
    - uid: string
    name: etag
  - isReadyOnly: true
    description: The provisioning state of the resource.
    types:
    - uid: ProvisioningState
    name: properties.provisioningState
  - isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
    name: id
  - isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
    name: name
  - isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
    name: type
  - description: Resource location.
    types:
    - uid: string
    name: location
  - description: Resource tags.
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
      uid: object
    name: tags
- name: TagsObject
  description: Tags object for patch operations.
  kind: object
  properties:
  - description: Resource tags.
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
      uid: object
    name: tags
- name: ProvisioningState
  description: The provisioning state of the resource.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Succeeded
  - types:
    - uid: string
    name: Updating
  - types:
    - uid: string
    name: Deleting
  - types:
    - uid: string
    name: Failed
examples:
- request:
    uri: PATCH https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1?api-version=2017-10-01
    body: >-
      {
        "tags": {
          "tag1": "value1",
          "tag2": "value2"
        }
      }
  responses:
  - statusCode: "200"
    body: >-
      {
        "name": "nw1",
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1",
        "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
        "type": "Microsoft.Network/networkWatchers",
        "location": "eastus",
        "tags": {
          "tag1": "value1",
          "tag2": "value2"
        },
        "properties": {
          "provisioningState": "Succeeded"
        }
      }
  name: Update network watcher tags
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - description: impersonate your user account
    name: user_impersonation
name: Update Tags
uid: management.azure.com.networkwatcher.networkwatchers.updatetags

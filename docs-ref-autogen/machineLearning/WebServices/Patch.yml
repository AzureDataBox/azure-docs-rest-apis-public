### YamlMime:RESTOperation
summary: Modifies an existing web service resource. The PATCH API call is an asynchronous operation. To determine whether it has completed successfully, you must perform a Get operation.
service: Machine Learning
apiVersion: 2016-05-01-preview
groupName: Web Services
consumes:
- application/json
- text/json
produces:
- application/json
- text/json
paths:
- content: PATCH https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}?api-version=2016-05-01-preview
uriParameters:
- in: path
  isRequired: true
  description: The Azure subscription ID.
  types:
  - uid: string
  name: subscriptionId
- in: path
  isRequired: true
  description: Name of the resource group in which the web service is located.
  types:
  - uid: string
  name: resourceGroupName
- in: path
  isRequired: true
  description: The name of the web service.
  types:
  - uid: string
  name: webServiceName
- in: query
  isRequired: true
  description: The version of the Microsoft.MachineLearning resource provider API to use.
  types:
  - uid: string
  name: api-version
responses:
- description: Success. The response payload is identical to the response payload that is returned by the GET operation. The response includes the Provisioning State and the Azure-AsyncOperation header. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more information about Asynchronous Operations, see https://msdn.microsoft.com/en-us/library/mt742920.aspx.
  types:
  - uid: WebService
  name: 200 OK
requestBody:
- parameters:
  - in: body
    isRequired: true
    description: Contains the property payload that describes the web service.
    types:
    - uid: WebServicePropertiesForGraph
    typesTitle: WebServiceProperties
    name: properties
  - in: body
    description: Specifies the name of the resource.
    types:
    - uid: string
    name: name
  - in: body
    isRequired: true
    description: Specifies the location of the resource.
    types:
    - uid: string
    name: location
  - in: body
    description: Contains resource tags defined as key/value pairs.
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
      uid: object
    name: tags
requestHeader: []
definitions:
- name: WebService
  description: Instance of an Azure ML web service resource.
  kind: object
  properties:
  - description: Contains the property payload that describes the web service.
    types:
    - uid: WebServicePropertiesForGraph
    typesTitle: WebServiceProperties
    name: properties
  - isReadyOnly: true
    description: Specifies the resource ID.
    types:
    - uid: string
    name: id
  - description: Specifies the name of the resource.
    types:
    - uid: string
    name: name
  - description: Specifies the location of the resource.
    types:
    - uid: string
    name: location
  - isReadyOnly: true
    description: Specifies the type of the resource.
    types:
    - uid: string
    name: type
  - description: Contains resource tags defined as key/value pairs.
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
      uid: object
    name: tags
- name: WebServicePropertiesForGraph
  description: Properties specific to a Graph based web service.
  kind: object
  properties:
  - description: The definition of the graph package making up this web service.
    types:
    - uid: GraphPackage
    name: package
  - description: The title of the web service.
    types:
    - uid: string
    name: title
  - description: The description of the web service.
    types:
    - uid: string
    name: description
  - isReadyOnly: true
    description: 'Read Only: The date and time when the web service was created.'
    types:
    - uid: string
    name: createdOn
  - isReadyOnly: true
    description: 'Read Only: The date and time when the web service was last modified.'
    types:
    - uid: string
    name: modifiedOn
  - isReadyOnly: true
    description: 'Read Only: The provision state of the web service. Valid values are Unknown, Provisioning, Succeeded, and Failed.'
    types:
    - uid: ProvisioningState
    name: provisioningState
  - description: 'Contains the web service provisioning keys. If you do not specify provisioning keys, the Azure Machine Learning system generates them for you. Note: The keys are not returned from calls to GET operations.'
    types:
    - uid: WebServiceKeys
    name: keys
  - description: 'When set to true, indicates that the web service is read-only and can no longer be updated or patched, only removed. Default, is false. Note: Once set to true, you cannot change its value.'
    types:
    - uid: boolean
    name: readOnly
  - isReadyOnly: true
    description: 'Read Only: Contains the URI of the swagger spec associated with this web service.'
    types:
    - uid: string
    name: swaggerLocation
  - description: When set to true, sample data is included in the web service's swagger definition. The default value is true.
    types:
    - uid: boolean
    name: exposeSampleData
  - description: Contains the configuration settings for the web service endpoint.
    types:
    - uid: RealtimeConfiguration
    name: realtimeConfiguration
  - description: Settings controlling the diagnostics traces collection for the web service.
    types:
    - uid: DiagnosticsConfiguration
    name: diagnostics
  - description: Specifies the storage account that Azure Machine Learning uses to store information about the web service. Only the name of the storage account is returned from calls to GET operations. When updating the storage account information, you must ensure that all necessary assets are available in the new storage account or calls to your web service will fail.
    types:
    - uid: StorageAccount
    name: storageAccount
  - description: Specifies the Machine Learning workspace containing the experiment that is source for the web service.
    types:
    - uid: MachineLearningWorkspace
    name: machineLearningWorkspace
  - description: 'Contains the commitment plan associated with this web service. Set at creation time. Once set, this value cannot be changed. Note: The commitment plan is not returned from calls to GET operations.'
    types:
    - uid: CommitmentPlan
    name: commitmentPlan
  - description: Contains the Swagger 2.0 schema describing one or more of the web service's inputs. For more information, see the Swagger specification.
    types:
    - uid: ServiceInputOutputSpecification
    name: input
  - description: Contains the Swagger 2.0 schema describing one or more of the web service's outputs. For more information, see the Swagger specification.
    types:
    - uid: ServiceInputOutputSpecification
    name: output
  - description: Defines sample input data for one or more of the service's inputs.
    types:
    - uid: ExampleRequest
    name: exampleRequest
  - description: Contains user defined properties describing web service assets. Properties are expressed as Key/Value pairs.
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: AssetItem
      uid: object
    name: assets
  - description: The set of global parameters values defined for the web service, given as a global parameter name to default value map. If no default value is specified, the parameter is considered to be required.
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
      uid: object
    name: parameters
  - description: 'Specifies the package type. Valid values are Graph (Specifies a web service published through the Machine Learning Studio) and Code (Specifies a web service published using code such as Python). Note: Code is not supported at this time.'
    types:
    - uid: Graph
    typesTitle: string
    name: packageType
- name: GraphPackage
  description: The definition of the graph package making up this web service.
  kind: object
  properties:
  - description: The set of nodes making up the graph, provided as a nodeId to GraphNode map
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: GraphNode
      uid: object
    name: nodes
  - description: Defines an edge within the web service's graph.
    types:
    - isArray: true
      uid: GraphEdge
    name: edges
  - description: The collection of global parameters for the graph, given as a global parameter name to GraphParameter map. Each parameter here has a 1:1 match with the global parameters values map declared at the WebServiceProperties level.
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: GraphParameter
      uid: object
    name: graphParameters
- name: ProvisioningState
  description: 'Read Only: The provision state of the web service. Valid values are Unknown, Provisioning, Succeeded, and Failed.'
  kind: enum
  properties:
  - types:
    - uid: string
    name: Unknown
  - types:
    - uid: string
    name: Provisioning
  - types:
    - uid: string
    name: Succeeded
  - types:
    - uid: string
    name: Failed
- name: WebServiceKeys
  description: 'Contains the web service provisioning keys. If you do not specify provisioning keys, the Azure Machine Learning system generates them for you. Note: The keys are not returned from calls to GET operations.'
  kind: object
  properties:
  - description: The primary access key.
    types:
    - uid: string
    name: primary
  - description: The secondary access key.
    types:
    - uid: string
    name: secondary
- name: RealtimeConfiguration
  description: Contains the configuration settings for the web service endpoint.
  kind: object
  properties:
  - description: 'Specifies the maximum concurrent calls that can be made to the web service. Minimum value: 4, Maximum value: 200.'
    types:
    - uid: integer
    name: maxConcurrentCalls
- name: DiagnosticsConfiguration
  description: Settings controlling the diagnostics traces collection for the web service.
  kind: object
  properties:
  - description: 'Specifies the verbosity of the diagnostic output. Valid values are: None - disables tracing; Error - collects only error (stderr) traces; All - collects all traces (stdout and stderr).'
    types:
    - uid: DiagnosticsLevel
    name: level
  - description: Specifies the date and time when the logging will cease. If null, diagnostic collection is not time limited.
    types:
    - uid: string
    name: expiry
- name: StorageAccount
  description: Specifies the storage account that Azure Machine Learning uses to store information about the web service. Only the name of the storage account is returned from calls to GET operations. When updating the storage account information, you must ensure that all necessary assets are available in the new storage account or calls to your web service will fail.
  kind: object
  properties:
  - description: Specifies the name of the storage account.
    types:
    - uid: string
    name: name
  - description: Specifies the key used to access the storage account.
    types:
    - uid: string
    name: key
- name: MachineLearningWorkspace
  description: Specifies the Machine Learning workspace containing the experiment that is source for the web service.
  kind: object
  properties:
  - description: Specifies the workspace ID of the machine learning workspace associated with the web service
    types:
    - uid: string
    name: id
- name: CommitmentPlan
  description: 'Contains the commitment plan associated with this web service. Set at creation time. Once set, this value cannot be changed. Note: The commitment plan is not returned from calls to GET operations.'
  kind: object
  properties:
  - description: Specifies the Azure Resource Manager ID of the commitment plan associated with the web service.
    types:
    - uid: string
    name: id
- name: ServiceInputOutputSpecification
  description: Contains the Swagger 2.0 schema describing one or more of the web service's inputs. For more information, see the Swagger specification.
  kind: object
  properties:
  - description: The title of your Swagger schema.
    types:
    - uid: string
    name: title
  - description: The description of the Swagger schema.
    types:
    - uid: string
    name: description
  - description: The type of the entity described in swagger. Always 'object'.
    types:
    - uid: string
    name: type
  - description: Specifies a collection that contains the column schema for each input or output of the web service. For more information, see the Swagger specification.
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: TableSpecification
      uid: object
    name: properties
- name: ExampleRequest
  description: Defines sample input data for one or more of the service's inputs.
  kind: object
  properties:
  - description: Sample input data for the web service's input(s) given as an input name to sample input values matrix map.
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: array
      uid: object
    name: inputs
  - description: Sample input data for the web service's global parameters
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: object
      uid: object
    name: globalParameters
- name: Assets
  description: Contains user defined properties describing web service assets. Properties are expressed as Key/Value pairs.
  kind: object
  properties:
  - description: Information about an asset associated with the web service.
    types:
    - uid: AssetItem
    name: ''
- name: Nodes
  description: The set of nodes making up the graph, provided as a nodeId to GraphNode map
  kind: object
  properties:
  - description: Specifies a node in the web service graph. The node can either be an input, output or asset node, so only one of the corresponding id properties is populated at any given time.
    types:
    - uid: GraphNode
    name: ''
- name: GraphEdge
  description: The list of edges making up the graph.
  kind: object
  properties:
  - description: The source graph node's identifier.
    types:
    - uid: string
    name: sourceNodeId
  - description: The identifier of the source node's port that the edge connects from.
    types:
    - uid: string
    name: sourcePortId
  - description: The destination graph node's identifier.
    types:
    - uid: string
    name: targetNodeId
  - description: The identifier of the destination node's port that the edge connects into.
    types:
    - uid: string
    name: targetPortId
- name: GraphParameters
  description: The collection of global parameters for the graph, given as a global parameter name to GraphParameter map. Each parameter here has a 1:1 match with the global parameters values map declared at the WebServiceProperties level.
  kind: object
  properties:
  - description: Defines a global parameter in the graph.
    types:
    - uid: GraphParameter
    name: ''
- name: DiagnosticsLevel
  description: 'Specifies the verbosity of the diagnostic output. Valid values are: None - disables tracing; Error - collects only error (stderr) traces; All - collects all traces (stdout and stderr).'
  kind: enum
  properties:
  - types:
    - uid: string
    name: None
  - types:
    - uid: string
    name: Error
  - types:
    - uid: string
    name: All
- name: Properties
  description: Specifies a collection that contains the column schema for each input or output of the web service. For more information, see the Swagger specification.
  kind: object
  properties:
  - description: 'The swagger 2.0 schema describing a single service input or output. See Swagger specification: http://swagger.io/specification/'
    types:
    - uid: TableSpecification
    name: ''
- name: AssetItem
  description: Information about an asset associated with the web service.
  kind: object
  properties:
  - description: Asset's friendly name.
    types:
    - uid: string
    name: name
  - description: Asset's Id.
    types:
    - uid: string
    name: id
  - description: Asset's type.
    types:
    - uid: AssetType
    name: type
  - description: Access information for the asset.
    types:
    - uid: AssetLocation
    name: locationInfo
  - description: Information about the asset's input ports.
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: InputPort
      uid: object
    name: inputPorts
  - description: Information about the asset's output ports.
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: OutputPort
      uid: object
    name: outputPorts
  - description: If the asset is a custom module, this holds the module's metadata.
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
      uid: object
    name: metadata
  - description: Parameter definition for a module asset.
    types:
    - isArray: true
      uid: ModuleAssetParameter
    name: parameters
- name: GraphNode
  description: Specifies a node in the web service graph. The node can either be an input, output or asset node, so only one of the corresponding id properties is populated at any given time.
  kind: object
  properties:
  - description: The id of the asset represented by this node.
    types:
    - uid: string
    name: assetId
  - description: The id of the input element represented by this node.
    types:
    - uid: string
    name: inputId
  - description: The id of the output element represented by this node.
    types:
    - uid: string
    name: outputId
  - description: If applicable, parameters of the node. Global graph parameters map into these, with values set at runtime.
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
      uid: object
    name: parameters
- name: GraphParameter
  description: Defines a global parameter in the graph.
  kind: object
  properties:
  - description: Description of this graph parameter.
    types:
    - uid: string
    name: description
  - description: Graph parameter's type.
    types:
    - uid: ParameterType
    name: type
  - description: Association link for a graph global parameter to a node in the graph.
    types:
    - isArray: true
      uid: GraphParameterLink
    name: links
- name: TableSpecification
  description: 'The swagger 2.0 schema describing a single service input or output. See Swagger specification: http://swagger.io/specification/'
  kind: object
  properties:
  - description: Swagger schema title.
    types:
    - uid: string
    name: title
  - description: Swagger schema description.
    types:
    - uid: string
    name: description
  - description: The type of the entity described in swagger.
    types:
    - uid: string
    name: type
  - description: The format, if 'type' is not 'object'
    types:
    - uid: string
    name: format
  - description: The set of columns within the data table.
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: ColumnSpecification
      uid: object
    name: properties
- name: AssetType
  description: Asset's type.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Module
  - types:
    - uid: string
    name: Resource
- name: AssetLocation
  description: Access information for the asset.
  kind: object
  properties:
  - description: The URI where the asset is accessible from, (e.g. aml://abc for system assets or https://xyz for user asets
    types:
    - uid: string
    name: uri
  - description: Access credentials for the asset, if applicable (e.g. asset specified by storage account connection string + blob URI)
    types:
    - uid: string
    name: credentials
- name: InputPorts
  description: Information about the asset's input ports.
  kind: object
  properties:
  - description: Asset input port
    types:
    - uid: InputPort
    name: ''
- name: OutputPorts
  description: Information about the asset's output ports.
  kind: object
  properties:
  - description: Asset output port
    types:
    - uid: OutputPort
    name: ''
- name: ModuleAssetParameter
  description: If the asset is a custom module, this holds the module's parameters.
  kind: object
  properties:
  - description: Parameter name.
    types:
    - uid: string
    name: name
  - description: Parameter type.
    types:
    - uid: string
    name: parameterType
  - description: Definitions for nested interface parameters if this is a complex module parameter.
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: ModeValueInfo
      uid: object
    name: modeValuesInfo
- name: ParameterType
  description: Graph parameter's type.
  kind: enum
  properties:
  - types:
    - uid: string
    name: String
  - types:
    - uid: string
    name: Int
  - types:
    - uid: string
    name: Float
  - types:
    - uid: string
    name: Enumerated
  - types:
    - uid: string
    name: Script
  - types:
    - uid: string
    name: Mode
  - types:
    - uid: string
    name: Credential
  - types:
    - uid: string
    name: Boolean
  - types:
    - uid: string
    name: Double
  - types:
    - uid: string
    name: ColumnPicker
  - types:
    - uid: string
    name: ParameterRange
  - types:
    - uid: string
    name: DataGatewayName
- name: GraphParameterLink
  description: Association links for this parameter to nodes in the graph.
  kind: object
  properties:
  - description: The graph node's identifier
    types:
    - uid: string
    name: nodeId
  - description: The identifier of the node parameter that the global parameter maps to.
    types:
    - uid: string
    name: parameterKey
- name: InputPort
  description: Asset input port
  kind: object
  properties:
  - description: Port data type.
    types:
    - uid: InputPortType
    name: type
- name: OutputPort
  description: Asset output port
  kind: object
  properties:
  - description: Port data type.
    types:
    - uid: OutputPortType
    name: type
- name: ModeValuesInfo
  description: Definitions for nested interface parameters if this is a complex module parameter.
  kind: object
  properties:
  - description: Nested parameter definition.
    types:
    - uid: ModeValueInfo
    name: ''
- name: InputPortType
  description: Port data type.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Dataset
- name: OutputPortType
  description: Port data type.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Dataset
- name: ModeValueInfo
  description: Nested parameter definition.
  kind: object
  properties:
  - description: The interface string name for the nested parameter.
    types:
    - uid: string
    name: interfaceString
  - description: The definition of the parameter.
    types:
    - isArray: true
      uid: ModuleAssetParameter
    name: parameters
examples: []
security: []
name: Patch
uid: management.azure.com.machinelearning.webservices.patch

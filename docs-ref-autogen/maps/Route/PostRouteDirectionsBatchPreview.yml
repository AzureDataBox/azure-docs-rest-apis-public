### YamlMime:RESTOperation
uid: atlas.microsoft.com.maps.route.postroutedirectionsbatchpreview
name: Post Route Directions Batch Preview
service: Maps
groupName: Route
apiVersion: "1.0"
summary: "\n## Route Directions Batch API\nThe Route Directions Batch API allows the caller to batch up to 1,000 [Route Directions API](https://docs.microsoft.com/en-us/rest/api/maps/route/getroutedirections) queries/requests using just a single API call.\n### Submit Batch Request\nTo send the _route directions_ queries you will use a `POST` request where the request body will contain the `queries` array in `JSON` format and the `Content-Type` header will be set to `application/json`. Here's a sample request body containing 5 _route directions_ queries:  \n<br>\n```json\n{\n    \"queries\": [\n        \"?query=47.639987,-122.128384:47.621252,-122.184408:47.596437,-122.332000&routeType=fastest&travelMode=car\",\n        \"?query=47.620659,-122.348934:47.610101,-122.342015&travelMode=bicycle&routeType=eco&traffic=false\",\n        \"?query=40.759856,-73.985108:40.771136,-73.973506&travelMode=pedestrian&routeType=shortest\"\n    ]\n}\n```\n<br> A _route directions_ query in a batch is just a partial URL _without_ the protocol, base URL, path, api-version and subscription-key. It can accept any of the supported _route directions_ [URI parameters](https://docs.microsoft.com/en-us/rest/api/maps/route/getroutedirections#uri-parameters). The string values in the _route directions_ query must be properly escaped (e.g. \" character should be escaped with \\\\ ) and it should also be properly URL-encoded.     \n<br>\nThe maximum number of queries that can be specified in the batch is **1,000** and the batch should contain at least **1** query.    \n<br>\nPlease note that the Route Directions Batch API is a long-running request. Here's a typical sequence of operations:\n1. Client sends a Route Directions Batch `POST` request to Azure Maps\n2. The server will respond with one of the following:\n    \n    > HTTP `202 Accepted` - Batch request has been accepted.\n    \n    > HTTP `Error` - There was an error processing your Batch request. This could either be a `400 Bad Request` or any other `Error` status code.\n\n3. If the batch request was accepted successfully, the `Location` header in the response contains the URL to download the results of the batch request.\n4. Client issues a `GET` request on the _download URL_ obtained in Step 3 to download the batch results.\n\n<br>\n### Download Batch Results\nTo download the batch results you will issue a `GET` request to the batch download endpoint. This _download URL_ can be obtained from the `Location` header of a successful `POST` batch request and looks like the following:\n<br>\n```\nhttps://atlas.microsoft.com/batch/{batch-id}?api-version=1.0&subscription-key={subscription-key}\n```\n<br> Here's the typical sequence of operations for downloading the batch results:\n1. Client sends a `GET` request using the _download URL_.\n2. The server will respond with one of the following:\n    \n    > HTTP `202 Accepted` - Batch request was accepted but is still being processed. Please try again in some time.\n\n    > HTTP `200 OK` - Batch request successfully processed. The response body contains all the batch results.\n\n<br>\n### Batch Response Model\nWhen downloading the results of a batch request, if the batch has finished processing, the response body contains the batch response. This batch response contains a `summary` component that indicates the `totalRequests` that were part of the original batch request and `successfulRequests` i.e. queries which were executed successfully. The batch response also includes a `batchResults` array which contains a response for each and every query in the batch request. Also, the `batchResults` will contain the results in the exact same order the original queries were sent in the batch request. Each entry in `batchResults` is of one of the following types:\n\n  - [`RouteDirectionsResponse`](https://docs.microsoft.com/en-us/rest/api/maps/route/getroutedirections#routedirectionsresponse) - If the query completed successfully.\n\n  - `Error` - If the query failed. The result will contain a `status code` and a `message` in this case.\n\n<br> Here's a sample Batch Response with 1 _successful_ and 1 _failed_ result:\n<br>\n```json            \n{\n    \"summary\": {\n        \"successfulRequests\": 1,\n        \"totalRequests\": 2\n    },\n    \"batchResults\": [\n        {\n            \"routes\": [\n                {\n                    \"summary\": {\n                        \"lengthInMeters\": 1758,\n                        \"travelTimeInSeconds\": 387,\n                        \"trafficDelayInSeconds\": 0,\n                        \"departureTime\": \"2018-07-17T00:49:56+00:00\",\n                        \"arrivalTime\": \"2018-07-17T00:56:22+00:00\"\n                    },\n                    \"legs\": [\n                        {\n                            \"summary\": {\n                                \"lengthInMeters\": 1758,\n                                \"travelTimeInSeconds\": 387,\n                                \"trafficDelayInSeconds\": 0,\n                                \"departureTime\": \"2018-07-17T00:49:56+00:00\",\n                                \"arrivalTime\": \"2018-07-17T00:56:22+00:00\"\n                            },\n                            \"points\": [\n                                {\n                                    \"latitude\": 47.62094,\n                                    \"longitude\": -122.34892\n                                },\n                                {\n                                    \"latitude\": 47.62094,\n                                    \"longitude\": -122.3485\n                                },\n                                {\n                                    \"latitude\": 47.62095,\n                                    \"longitude\": -122.3476\n                                }\n                            ]\n                        }\n                    ],\n                    \"sections\": [\n                        {\n                            \"startPointIndex\": 0,\n                            \"endPointIndex\": 40,\n                            \"sectionType\": \"TRAVEL_MODE\",\n                            \"travelMode\": \"bicycle\"\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            \"statusCode\": 400,\n            \"message\": \"Bad Request\"\n        }\n    ]\n}\n```\n<br>\n### Data Retention Period\nPlease, be aware that batch results are available for download for **14** days, after which the request for results download will return `400 Bad Request` response.\n<br>"
consumes: []
produces:
- application/json
- application/xml
paths:
- content: POST https://atlas.microsoft.com/route/directions/batch/{format}?subscription-key={subscription-key}&api-version=1.0
uriParameters:
- name: format
  in: path
  isRequired: true
  description: Desired format of the response. Only `JSON` format is supported.
  types:
  - uid: string
- name: subscription-key
  in: query
  isRequired: true
  description: Azure Maps subscription key
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version number of Azure Maps API. Current version is 1.0
  types:
  - uid: string
responses:
- name: 202 Accepted
  description: 'Request Accepted: The request has been accepted for processing. Please use the URL in the Location Header to retry or access the results.'
- name: 400 Bad Request
  description: 'Bad request: one or more parameters were incorrectly specified or are mutually exclusive.'
  types:
  - uid: ErrorResponse
- name: 401 Unauthorized
  description: Access denied due to invalid subscription key. Make sure to provide a valid key for an active subscription.
  types:
  - uid: ErrorResponse
- name: 403 Forbidden
  description: Permission, capacity, or authentication issues.
  types:
  - uid: ErrorResponse
- name: 404 Not Found
  description: 'Not Found: the requested resource could not be found, but it may be available again in the future.'
  types:
  - uid: ErrorResponse
- name: 500 Internal Server Error
  description: An error occurred while processing the request. Please try again later.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: queries
    in: body
    description: The list of queries/requests to process
    types:
    - uid: string
      isArray: true
requestHeader: []
definitions:
- name: ErrorResponse
  description: This response object is returned when an error occurs in the Maps API
  kind: object
  properties:
  - name: error
    description: This object is returned when an error occurs in the Maps API
    types:
    - uid: Error
- name: BatchRequestBody
  description: This type represents the request body for the Batch service.
  kind: object
  properties:
  - name: queries
    description: The list of queries/requests to process
    types:
    - uid: string
      isArray: true
- name: Error
  description: This object is returned when an error occurs in the Maps API
  kind: object
  properties:
  - name: code
    isReadyOnly: true
    description: The HTTP status code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: If available, a human readable description of the error.
    types:
    - uid: string
examples:
- name: A Route Directions Batch API call containing 3 Route Directions API queries
  request:
    uri: POST https://atlas.microsoft.com/route/directions/batch/json?subscription-key=[subscription-key]&api-version=1.0
    body: >-
      {
        "queries": [
          "?query=47.639987,-122.128384:47.621252,-122.184408:47.596437,-122.332000&routeType=fastest&travelMode=car",
          "?query=47.620659,-122.348934:47.610101,-122.342015&travelMode=bicycle&routeType=eco&traffic=false",
          "?query=40.759856,-73.985108:40.771136,-73.973506&travelMode=pedestrian&routeType=shortest"
        ]
      }
  responses:
  - statusCode: "202"
    headers:
    - name: Location
      value: URL to download the results of the long-running batch request.
    body: '{}'
  - statusCode: "400"
    body: >-
      {
        "error": {
          "code": "400 BadRequest",
          "message": "Bad request: one or more parameters were incorrectly specified or are mutually exclusive."
        }
      }
  - statusCode: "401"
    body: >-
      {
        "error": {
          "code": "401 Unauthorized",
          "message": "Access denied due to invalid subscription key. Make sure to provide a valid key for an active subscription."
        }
      }
  - statusCode: "403"
    body: >-
      {
        "error": {
          "code": "403 Forbidden",
          "message": "Permission, capacity, or authentication issues."
        }
      }
  - statusCode: "404"
    body: >-
      {
        "error": {
          "code": "404 NotFound",
          "message": "Not Found: the requested resource could not be found, but it may be available again in the future."
        }
      }
  - statusCode: "500"
    body: >-
      {
        "error": {
          "code": "500 InternalServerError",
          "message": "An error occurred while processing the request. Please try again later."
        }
      }
security:
- name: Ocp-Apim-Subscription-Key
  type: apiKey
  in: header
- name: subscription-key
  type: apiKey
  in: query

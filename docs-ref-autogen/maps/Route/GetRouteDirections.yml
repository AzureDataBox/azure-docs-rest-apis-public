### YamlMime:RESTOperation
uid: atlas.microsoft.com.locationbasedservicesfunctionalapi.route.getroutedirections
name: Get Route Directions
service: Location Based Services Functional API
groupName: Route
apiVersion: "1.0"
summary: Returns routing directions between 2 coordinates
consumes: []
produces:
- application/json
- application/xml
paths:
- content: GET https://atlas.microsoft.com/route/directions/{format}?subscription-key={subscription-key}&api-version=1.0&query={query}
- content: GET https://atlas.microsoft.com/route/directions/{format}?subscription-key={subscription-key}&api-version=1.0&query={query}&maxAlternatives={maxAlternatives}&alternativeType={alternativeType}&minDeviationDistance={minDeviationDistance}&arriveAt={arriveAt}&departAt={departAt}&minDeviationTime={minDeviationTime}&instructionsType={instructionsType}&language={language}&computeBestOrder={computeBestOrder}&routeRepresentation={routeRepresentation}&computeTravelTimeFor={computeTravelTimeFor}&vehicleHeading={vehicleHeading}&report={report}&sectionType={sectionType}&vehicleAxleWeight={vehicleAxleWeight}&vehicleLength={vehicleLength}&vehicleHeight={vehicleHeight}&vehicleWidth={vehicleWidth}&vehicleMaxSpeed={vehicleMaxSpeed}&vehicleWeight={vehicleWeight}&windingness={windingness}&hilliness={hilliness}&travelMode={travelMode}&avoid={avoid}&traffic={traffic}&routeType={routeType}&vehicleLoadType={vehicleLoadType}
  isOptional: true
uriParameters:
- name: format
  in: path
  isRequired: true
  description: Desired format of the response. Possible values are json & xml.
  types:
  - uid: string
- name: subscription-key
  in: query
  isRequired: true
  description: Azure LBS subscription key
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: Version number of Azure LBS API.  Current version is 1.0
  types:
  - uid: string
- name: query
  in: query
  isRequired: true
  description: The Coordinates through which the route is calculated. Needs two coordinates at least. Delimited by colon. First one is the origin and the last is the destination of the route. Optional coordinates in between act as WayPoints in the route.
  types:
  - uid: string
- name: maxAlternatives
  in: query
  description: Number of desired alternative routes to be calculated.
  types:
  - uid: integer
- name: alternativeType
  in: query
  description: Controls the optimality, with respect to the given planning criteria.  Controls the optimality, with respect to the given planning criteria, of the calculated alternatives compared to the reference route.
  types:
  - uid: alternativeType
- name: minDeviationDistance
  in: query
  description: All alternative routes returned will follow the reference route (see section POST Requests) from the origin point of the calculateRoute request for at least this number of meters. Can only be used when reconstructing a route. The minDeviationDistance parameter cannot be used in conjunction with arriveAt
  types:
  - uid: integer
- name: arriveAt
  in: query
  description: The date and time of arrival at the destination point. It must be specified as a dateTime. When a time zone offset is not specified it will be assumed to be that of the destination point. The arriveAt value must be in the future. The arriveAt parameter cannot be used in conjunction with departAt, minDeviationDistance or minDeviationTime.
  types:
  - uid: string
  format: date-time
- name: departAt
  in: query
  description: The date and time of departure from the origin point. Departure times apart from now must be specified as a dateTime. When a time zone offset is not specified, it will be assumed to be that of the origin point. The departAt value must be in the future in the date-time format (1996-12-19T16:39:57-08:00).
  types:
  - uid: string
  format: date-time
- name: minDeviationTime
  in: query
  description: All alternative routes returned will follow the reference route (see section POST Requests) from the origin point of the calculateRoute request for at least this number of seconds. Can only be used when reconstructing a route. The minDeviationTime parameter cannot be used in conjunction with arriveAt
  types:
  - uid: integer
- name: instructionsType
  in: query
  description: If specified, guidance instructions will be returned.  Note that the instructionsType parameter cannot be used in conjunction with routeRepresentation=none
  types:
  - uid: instructionsType
- name: language
  in: query
  description: The language parameter determines the language of the guidance messages. It does not affect proper nouns (the names of streets, plazas, etc.) It has no effect when instructionsType=coded.  Allowed values are (a subset of) the IETF language tags described
  types:
  - uid: string
- name: computeBestOrder
  in: query
  description: Re-order the route waypoints to reduce the route length. Yields best results when used in conjunction with routeType shortest. Possible values are true or false.  True computes a better order, if possible but is not allowed to be used in conjunction with maxAlternatives value greater than 0 or in conjunction with circle waypoints. The response will include the optimized waypoint indices and can be used with a maximum of 20 route waypoints.  False will use the locations in the given order and not allowed to be used in conjunction with routeRepresentation none
  types:
  - uid: boolean
- name: routeRepresentation
  in: query
  description: Specifies the representation of the set of routes provided as response. This parameter value can only be used in conjunction with computeBestOrder=true.
  types:
  - uid: routeRepresentation
- name: computeTravelTimeFor
  in: query
  description: 'Specifies whether to return additional travel times using different types of traffic information (none, historic, live) as well as the default best-estimate travel time. Possible values are none which , or all which '
  types:
  - uid: computeTravelTimeFor
- name: vehicleHeading
  in: query
  description: The directional heading of the vehicle in degrees starting at true North and continuing in clockwise direction. North is 0 degrees, east is 90 degrees, south is 180 degrees, west is 270 degrees. Possible values 0-359
  types:
  - uid: integer
- name: report
  in: query
  description: Specifies which data should be reported for diagnosis purposes
  types:
  - uid: string
- name: sectionType
  in: query
  description: Specifies which of the section types are reported in the route response. For example if sectionType = pedestrian the sections which are suited for pedestrians only are returned. Multiple types can be used. The default sectionType refers to the travelMode input. By default travelMode is set to car
  types:
  - uid: sectionType
- name: vehicleAxleWeight
  in: query
  description: Weight per axle of the vehicle in kg. A value of 0 means that weight restrictions per axle are not considered.
  types:
  - uid: integer
- name: vehicleLength
  in: query
  description: Width of the vehicle in meters. A value of 0 means that width restrictions are not considered.
  types:
  - uid: number
  format: float
- name: vehicleHeight
  in: query
  description: Height of the vehicle in meters. A value of 0 means that height restrictions are not considered.
  types:
  - uid: number
  format: float
- name: vehicleWidth
  in: query
  description: Length of the vehicle in meters. A value of 0 means that length restrictions are not considered.
  types:
  - uid: number
  format: float
- name: vehicleMaxSpeed
  in: query
  description: Maximum speed of the vehicle in km/hour. A value of 0 means that an appropriate value for the vehicle will be determined and applied during route planning. A non-zero value may be overridden during route planning.
  types:
  - uid: integer
- name: vehicleWeight
  in: query
  description: Weight of the vehicle in kilograms.
  types:
  - uid: integer
- name: windingness
  in: query
  description: Level of turns for thrilling route. This parameter can only be used in conjunction with routeType=thrilling.
  types:
  - uid: windingness
- name: hilliness
  in: query
  description: Degree of hilliness for thrilling route. This parameter can only be used in conjunction with routeType=thrilling.
  types:
  - uid: hilliness
- name: travelMode
  in: query
  description: The mode of travel for the requested route. Note that the requested travelMode may not be available for the entire route. Where the requested travelMode is not available for a particular section, the travelMode element of the response for that section will be other. Note that travel modes bus, motorcycle, taxi and van are BETA functionality. Full restriction data is not available in all areas. In calculateReachableRange requests, the values bicycle and pedestrian must not be used
  types:
  - uid: travelMode
- name: avoid
  in: query
  description: 'Specifies something that the route calculation should try to avoid when determining the route. Can be specified multiple times. Possible values: (tollRoads avoids toll roads), (motorways avoids motorways), (ferries avoids ferries), (unpavedRoads avoids unpaved roads), (carpools avoids routes that require use of carpool (HOV/ High Occupancy Vehicle) lanes), (alreadyUsedRoads avoids using the same road multiple times. Most useful in conjunction with routeType=thrilling). In calculateReachableRange requests, the value alreadyUsedRoads must not be used.'
  types:
  - uid: avoid
- name: traffic
  in: query
  description: 'Possible values: (true (do consider all available traffic information during routing)), (false (ignore current traffic data during routing). Note that although the current traffic data is ignored during routing, the effect of historic traffic on effective road speeds is still incorporated).'
  types:
  - uid: boolean
- name: routeType
  in: query
  description: 'The type of route requested. Notes on specific values: (fastest returns the fastest route), (shortest returns the shortest route by distance), (eco routes balance economy and speed), (thrilling routes include interesting or challenging roads and use as few motorways as possible. You can choose the level of turns included and also the degree of hilliness. See the hilliness and windingness parameters for how to set this. There is a limit of 900 km on routes planned with routeType=thrilling)'
  types:
  - uid: routeType
- name: vehicleLoadType
  in: query
  description: Types of cargo that may be classified as hazardous materials and restricted from some roads. Available vehicleLoadType values are US Hazmat classes 1 through 9, plus generic classifications for use in other countries. Values beginning with USHazmat are for US routing while otherHazmat should be used for all other countries. vehicleLoadType can be specified multiple times. This parameter is currently only considered for travelMode=truck.
  types:
  - uid: vehicleLoadType
responses:
- name: 200 OK
  description: OK
  types:
  - uid: RouteDirectionsResult
- name: 400 Bad Request
  description: 'Bad request: one or more parameters were incorrectly specified or are mutually exclusive.'
  types:
  - uid: Error
- name: 401 Unauthorized
  description: 'Unauthorized: Access is denied due to invalid credentials.'
  types:
  - uid: Error
- name: 403 Forbidden
  description: Permission, capacity, or authentication issues.
  types:
  - uid: Error
- name: 404 Not Found
  description: 'Not Found: the requested resource could not be found, but it may be available again in the future.'
  types:
  - uid: Error
- name: 500 Internal Server Error
  description: An error occurred while processing the request. Please try again later.
  types:
  - uid: Error
requestHeader: []
definitions:
- name: alternativeType
  description: Controls the optimality, with respect to the given planning criteria.  Controls the optimality, with respect to the given planning criteria, of the calculated alternatives compared to the reference route.
  kind: enum
  properties:
  - name: anyRoute
    description: Allow any alternative route to be returned irrespective of how it compares to the reference route in terms of optimality.
    types:
    - uid: string
  - name: betterRoute
    description: Return an alternative route only if it is better than the reference route according to the given planning criteria.
    types:
    - uid: string
- name: instructionsType
  description: If specified, guidance instructions will be returned.  Note that the instructionsType parameter cannot be used in conjunction with routeRepresentation=none
  kind: enum
  properties:
  - name: coded
    description: Returns raw instruction data without human-readable messages.
    types:
    - uid: string
  - name: text
    description: Returns raw instructions data with human-readable messages in plain text.
    types:
    - uid: string
  - name: tagged
    description: Returns raw instruction data with tagged human-readable messages to permit formatting.
    types:
    - uid: string
- name: routeRepresentation
  description: Specifies the representation of the set of routes provided as response. This parameter value can only be used in conjunction with computeBestOrder=true.
  kind: enum
  properties:
  - name: polyline
    description: Includes route geometry in the response.
    types:
    - uid: string
  - name: none
    description: Includes only the optimized waypoint indices but does not include the route geometry in the response.
    types:
    - uid: string
- name: computeTravelTimeFor
  description: 'Specifies whether to return additional travel times using different types of traffic information (none, historic, live) as well as the default best-estimate travel time. Possible values are none which , or all which '
  kind: enum
  properties:
  - name: none
    description: Does not compute additional travel times.
    types:
    - uid: string
  - name: all
    description: Computes travel times for all types of traffic information and specifies all results in the fields noTrafficTravelTimeInSeconds, historicTrafficTravelTimeInSeconds and liveTrafficIncidentsTravelTimeInSeconds being included in the summaries in the route response.
    types:
    - uid: string
- name: sectionType
  description: Specifies which of the section types are reported in the route response. For example if sectionType = pedestrian the sections which are suited for pedestrians only are returned. Multiple types can be used. The default sectionType refers to the travelMode input. By default travelMode is set to car
  kind: enum
  properties:
  - name: carTrain
    types:
    - uid: string
  - name: country
    types:
    - uid: string
  - name: ferry
    types:
    - uid: string
  - name: motorway
    types:
    - uid: string
  - name: pedestrian
    types:
    - uid: string
  - name: tollRoad
    types:
    - uid: string
  - name: tollVignette
    types:
    - uid: string
  - name: traffic
    types:
    - uid: string
  - name: travelMode
    types:
    - uid: string
  - name: tunnel
    types:
    - uid: string
- name: windingness
  description: Level of turns for thrilling route. This parameter can only be used in conjunction with routeType=thrilling.
  kind: enum
  properties:
  - name: low
    types:
    - uid: string
  - name: normal
    types:
    - uid: string
  - name: high
    types:
    - uid: string
- name: hilliness
  description: Degree of hilliness for thrilling route. This parameter can only be used in conjunction with routeType=thrilling.
  kind: enum
  properties:
  - name: low
    types:
    - uid: string
  - name: normal
    types:
    - uid: string
  - name: high
    types:
    - uid: string
- name: travelMode
  description: The mode of travel for the requested route. Note that the requested travelMode may not be available for the entire route. Where the requested travelMode is not available for a particular section, the travelMode element of the response for that section will be other. Note that travel modes bus, motorcycle, taxi and van are BETA functionality. Full restriction data is not available in all areas. In calculateReachableRange requests, the values bicycle and pedestrian must not be used
  kind: enum
  properties:
  - name: car
    types:
    - uid: string
  - name: truck
    types:
    - uid: string
  - name: taxi
    types:
    - uid: string
  - name: bus
    types:
    - uid: string
  - name: van
    types:
    - uid: string
  - name: motorcycle
    types:
    - uid: string
  - name: bicycle
    types:
    - uid: string
  - name: pedestrian
    types:
    - uid: string
- name: avoid
  description: 'Specifies something that the route calculation should try to avoid when determining the route. Can be specified multiple times. Possible values: (tollRoads avoids toll roads), (motorways avoids motorways), (ferries avoids ferries), (unpavedRoads avoids unpaved roads), (carpools avoids routes that require use of carpool (HOV/ High Occupancy Vehicle) lanes), (alreadyUsedRoads avoids using the same road multiple times. Most useful in conjunction with routeType=thrilling). In calculateReachableRange requests, the value alreadyUsedRoads must not be used.'
  kind: enum
  properties:
  - name: tollRoads
    types:
    - uid: string
  - name: motorways
    types:
    - uid: string
  - name: ferries
    types:
    - uid: string
  - name: unpavedRoads
    types:
    - uid: string
  - name: carpools
    types:
    - uid: string
  - name: alreadyUsedRoads
    types:
    - uid: string
- name: routeType
  description: 'The type of route requested. Notes on specific values: (fastest returns the fastest route), (shortest returns the shortest route by distance), (eco routes balance economy and speed), (thrilling routes include interesting or challenging roads and use as few motorways as possible. You can choose the level of turns included and also the degree of hilliness. See the hilliness and windingness parameters for how to set this. There is a limit of 900 km on routes planned with routeType=thrilling)'
  kind: enum
  properties:
  - name: fastest
    types:
    - uid: string
  - name: shortest
    types:
    - uid: string
  - name: eco
    types:
    - uid: string
  - name: thrilling
    types:
    - uid: string
- name: vehicleLoadType
  description: Types of cargo that may be classified as hazardous materials and restricted from some roads. Available vehicleLoadType values are US Hazmat classes 1 through 9, plus generic classifications for use in other countries. Values beginning with USHazmat are for US routing while otherHazmat should be used for all other countries. vehicleLoadType can be specified multiple times. This parameter is currently only considered for travelMode=truck.
  kind: enum
  properties:
  - name: USHazmatClass1
    description: Explosives
    types:
    - uid: string
  - name: USHazmatClass2
    description: Compressed gas
    types:
    - uid: string
  - name: USHazmatClass3
    description: Flammable liquids
    types:
    - uid: string
  - name: USHazmatClass4
    description: Flammable solids
    types:
    - uid: string
  - name: USHazmatClass5
    description: Oxidizers
    types:
    - uid: string
  - name: USHazmatClass6
    description: Poisons
    types:
    - uid: string
  - name: USHazmatClass7
    description: Radioactive
    types:
    - uid: string
  - name: USHazmatClass8
    description: Corrosives
    types:
    - uid: string
  - name: USHazmatClass9
    description: Miscellaneous
    types:
    - uid: string
  - name: otherHazmatExplosive
    description: Explosives
    types:
    - uid: string
  - name: otherHazmatGeneral
    description: Miscellaneous
    types:
    - uid: string
  - name: otherHazmatHarmfulToWater
    description: Harmful to water
    types:
    - uid: string
- name: RouteDirectionsResult
  description: This object is returned from a successful Route Directions call
  kind: object
  properties:
  - name: formatVersion
    isReadyOnly: true
    description: Format Version property
    types:
    - uid: string
  - name: copyright
    isReadyOnly: true
    description: Copyright property
    types:
    - uid: string
  - name: privacy
    isReadyOnly: true
    description: Privacy property
    types:
    - uid: string
  - name: routes
    isReadyOnly: true
    description: Routes array
    types:
    - uid: RouteDef
      isArray: true
- name: Error
  description: This object is returned when an error occurs in the Location Based Service API
  kind: object
  properties:
  - name: statuscode
    isReadyOnly: true
    description: Error code.
    types:
    - uid: string
  - name: message
    isReadyOnly: true
    description: If available, a human readable description of the error.
    types:
    - uid: string
- name: RouteDef
  kind: object
  properties:
  - name: summary
    isReadyOnly: true
    description: Summary object
    types:
    - uid: Summary
  - name: legs
    isReadyOnly: true
    description: Legs array
    types:
    - uid: Leg
      isArray: true
  - name: sections
    isReadyOnly: true
    description: Sections object
    types:
    - uid: Section
      isArray: true
- name: Summary
  description: Summary object
  kind: object
  properties:
  - name: query
    isReadyOnly: true
    description: Query property
    types:
    - uid: string
  - name: queryType
    isReadyOnly: true
    description: QueryType property
    types:
    - uid: string
  - name: queryTime
    isReadyOnly: true
    description: QueryTime property
    types:
    - uid: integer
  - name: numResults
    isReadyOnly: true
    description: NumResults property
    types:
    - uid: integer
  - name: offset
    isReadyOnly: true
    description: Offset property
    types:
    - uid: integer
  - name: totalResults
    isReadyOnly: true
    description: TotalResults property
    types:
    - uid: integer
  - name: fuzzyLevel
    isReadyOnly: true
    description: FuzzyLevel property
    types:
    - uid: integer
- name: Leg
  kind: object
  properties:
  - name: summary
    isReadyOnly: true
    description: Summary object
    types:
    - uid: Summary
  - name: points
    isReadyOnly: true
    description: Points array
    types:
    - uid: Points
      isArray: true
- name: Section
  kind: object
  properties:
  - name: startPointIndex
    isReadyOnly: true
    description: Start Point Index property
    types:
    - uid: integer
  - name: endPointIndex
    isReadyOnly: true
    description: End Point Index property
    types:
    - uid: integer
  - name: sectionType
    isReadyOnly: true
    description: Section Type property
    types:
    - uid: string
  - name: travelMode
    isReadyOnly: true
    description: Travel Mode property
    types:
    - uid: string
- name: Points
  description: Points array
  kind: object
  properties:
  - name: latitude
    isReadyOnly: true
    description: Latitude property
    types:
    - uid: number
  - name: longitude
    isReadyOnly: true
    description: Longitude property
    types:
    - uid: number
examples:
- name: GetRouteDirections
  request:
    uri: GET https://atlas.microsoft.com/route/directions/json?api-version=1.0&query=52.50931,13.42936:52.50274,13.43872
  responses:
  - statusCode: "200"
    body: >-
      {
        "formatVersion": "0.0.12",
        "copyright": "Copyright 2017 TomTom International BV. All rights reserved. This navigation data is the proprietary copyright of TomTom International BV and may be used only in accordance with the terms of a fully executed license agreement entered into between TomTom International BV, or an authorised reseller and yourself. If you have not entered into such a license agreement you are not authorised to use this data in any manner and should immediately return it to TomTom International BV.",
        "privacy": "TomTom keeps information that tells us how and when you use our services. This includes information about the device you are using and the information we receive while you use the service, such as locations, routes, destinations and search queries. TomTom is unable to identify you based on the information it collects, and will not try to. TomTom uses the information for technical diagnostics, to detect fraud and abuse, to create usage reports, and to improve its services. The information is kept only for these purposes and for a limited period of time, after which it is destroyed. TomTom applies security methods based on industry standards to protect the information against unauthorised access. TomTom will not give anyone else access to the information or use it for any other purpose, unless explicitly and lawfully ordered to do so following due legal process. You can find out more at http://tomtom.com/privacy. You can contact TomTom by going to http://tomtom.com/support.",
        "routes": [
          {
            "summary": {
              "lengthInMeters": 1147,
              "travelTimeInSeconds": 162,
              "trafficDelayInSeconds": 0,
              "departureTime": "2017-09-07T16:56:58+00:00",
              "arrivalTime": "2017-09-07T16:59:40+00:00"
            },
            "legs": [
              {
                "summary": {
                  "lengthInMeters": 1147,
                  "travelTimeInSeconds": 162,
                  "trafficDelayInSeconds": 0,
                  "departureTime": "2017-09-07T16:56:58+00:00",
                  "arrivalTime": "2017-09-07T16:59:40+00:00"
                },
                "points": [
                  {
                    "latitude": 52.50931,
                    "longitude": 13.42937
                  },
                  {
                    "latitude": 52.50904,
                    "longitude": 13.42912
                  },
                  {
                    "latitude": 52.50894,
                    "longitude": 13.42904
                  },
                  {
                    "latitude": 52.50867,
                    "longitude": 13.42879
                  },
                  {
                    "latitude": 52.5084,
                    "longitude": 13.42857
                  },
                  {
                    "latitude": 52.50791,
                    "longitude": 13.42824
                  },
                  {
                    "latitude": 52.50757,
                    "longitude": 13.42772
                  },
                  {
                    "latitude": 52.50735,
                    "longitude": 13.42823
                  },
                  {
                    "latitude": 52.5073,
                    "longitude": 13.42836
                  },
                  {
                    "latitude": 52.50573,
                    "longitude": 13.43194
                  },
                  {
                    "latitude": 52.50512,
                    "longitude": 13.43336
                  },
                  {
                    "latitude": 52.50464,
                    "longitude": 13.43451
                  },
                  {
                    "latitude": 52.5045,
                    "longitude": 13.43481
                  },
                  {
                    "latitude": 52.50443,
                    "longitude": 13.43498
                  },
                  {
                    "latitude": 52.50343,
                    "longitude": 13.43737
                  },
                  {
                    "latitude": 52.50274,
                    "longitude": 13.43872
                  }
                ]
              }
            ],
            "sections": [
              {
                "startPointIndex": 0,
                "endPointIndex": 15,
                "sectionType": "TRAVEL_MODE",
                "travelMode": "car"
              }
            ]
          }
        ]
      }
  - statusCode: "400"
    body: >-
      {
        "statuscode": "400",
        "message": "Bad request: one or more parameters were incorrectly specified or are mutually exclusive."
      }
  - statusCode: "401"
    body: >-
      {
        "statuscode": "401",
        "message": "Unauthorized: Access is denied due to invalid credentials."
      }
  - statusCode: "403"
    body: >-
      {
        "statuscode": "403",
        "message": "Permission, capacity, or authentication issues."
      }
  - statusCode: "404"
    body: >-
      {
        "statuscode": "404",
        "message": "Not Found: the requested resource could not be found, but it may be available again in the future."
      }
  - statusCode: "500"
    body: >-
      {
        "statuscode": "500",
        "message": "An error occurred while processing the request. Please try again later."
      }
security:
- name: Ocp-Apim-Subscription-Key
  type: apiKey
  in: header
- name: subscription-key
  type: apiKey
  in: query

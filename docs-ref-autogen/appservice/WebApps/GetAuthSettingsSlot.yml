### YamlMime:RESTOperation
summary: Gets the Authentication/Authorization settings of an app.
service: App Service
apiVersion: 2016-08-01
groupName: Web Apps
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/authsettings/list?api-version=2016-08-01
uriParameters:
- in: path
  isRequired: true
  description: Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
  types:
  - uid: string
  name: subscriptionId
- in: path
  isRequired: true
  description: Name of the resource group to which the resource belongs.
  types:
  - uid: string
  pattern: ^[-\w\._\(\)]+[^\.]$
  name: resourceGroupName
- in: path
  isRequired: true
  description: Name of the app.
  types:
  - uid: string
  name: name
- in: path
  isRequired: true
  description: Name of the deployment slot. If a slot is not specified, the API will get the settings for the production slot.
  types:
  - uid: string
  name: slot
- in: query
  isRequired: true
  description: API Version
  types:
  - uid: string
  name: api-version
responses:
- description: OK
  types:
  - uid: SiteAuthSettings
  name: 200 OK
requestHeader: []
definitions:
- name: SiteAuthSettings
  description: Configuration settings for the Azure App Service Authentication / Authorization feature.
  kind: object
  properties:
  - description: <code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.
    types:
    - uid: boolean
    name: enabled
  - description: >-
      The RuntimeVersion of the Authentication / Authorization feature in use for the current app.

      The setting in this value can control the behavior of certain features in the Authentication / Authorization module.
    types:
    - uid: string
    name: runtimeVersion
  - description: The action to take when an unauthenticated client attempts to access the app.
    types:
    - uid: UnauthenticatedClientAction
    name: unauthenticatedClientAction
  - description: >-
      <code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.
       The default is <code>false</code>.
    types:
    - uid: boolean
    name: tokenStoreEnabled
  - description: >-
      External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.

      This is an advanced setting typically only needed by Windows Store application backends.

      Note that URLs within the current domain are always implicitly allowed.
    types:
    - isArray: true
      uid: string
    name: allowedExternalRedirectUrls
  - description: >-
      The default authentication provider to use when multiple providers are configured.

      This setting is only needed if multiple providers are configured and the unauthenticated client

      action is set to "RedirectToLoginPage".
    types:
    - uid: BuiltInAuthenticationProvider
    name: defaultProvider
  - description: >-
      The number of hours after session token expiration that a session token can be used to

      call the token refresh API. The default is 72 hours.
    types:
    - uid: number
    name: tokenRefreshExtensionHours
  - description: "The Client ID of this relying party application, known as the client_id.\nThis setting is required for enabling OpenID Connection authentication with Azure Active Directory or \nother 3rd party OpenID Connect providers.\nMore information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html"
    types:
    - uid: string
    name: clientId
  - description: >-
      The Client Secret of this relying party application (in Azure Active Directory, this is also referred to as the Key).

      This setting is optional. If no client secret is configured, the OpenID Connect implicit auth flow is used to authenticate end users.

      Otherwise, the OpenID Connect Authorization Code Flow is used to authenticate end users.

      More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
    types:
    - uid: string
    name: clientSecret
  - description: >-
      The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.

      When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.

      This URI is a case-sensitive identifier for the token issuer.

      More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html
    types:
    - uid: string
    name: issuer
  - description: "Allowed audience values to consider when validating JWTs issued by \nAzure Active Directory. Note that the <code>ClientID</code> value is always considered an\nallowed audience, regardless of this setting."
    types:
    - isArray: true
      uid: string
    name: allowedAudiences
  - description: >-
      Login parameters to send to the OpenID Connect authorization endpoint when

      a user logs in. Each parameter must be in the form "key=value".
    types:
    - isArray: true
      uid: string
    name: additionalLoginParams
  - description: >-
      The OpenID Connect Client ID for the Google web application.

      This setting is required for enabling Google Sign-In.

      Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
    types:
    - uid: string
    name: googleClientId
  - description: >-
      The client secret associated with the Google web application.

      This setting is required for enabling Google Sign-In.

      Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
    types:
    - uid: string
    name: googleClientSecret
  - description: >-
      The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication.

      This setting is optional. If not specified, "openid", "profile", and "email" are used as default scopes.

      Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
    types:
    - isArray: true
      uid: string
    name: googleOAuthScopes
  - description: >-
      The App ID of the Facebook app used for login.

      This setting is required for enabling Facebook Login.

      Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
    types:
    - uid: string
    name: facebookAppId
  - description: >-
      The App Secret of the Facebook app used for Facebook Login.

      This setting is required for enabling Facebook Login.

      Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
    types:
    - uid: string
    name: facebookAppSecret
  - description: >-
      The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication.

      This setting is optional.

      Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
    types:
    - isArray: true
      uid: string
    name: facebookOAuthScopes
  - description: >-
      The OAuth 1.0a consumer key of the Twitter application used for sign-in.

      This setting is required for enabling Twitter Sign-In.

      Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
    types:
    - uid: string
    name: twitterConsumerKey
  - description: >-
      The OAuth 1.0a consumer secret of the Twitter application used for sign-in.

      This setting is required for enabling Twitter Sign-In.

      Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
    types:
    - uid: string
    name: twitterConsumerSecret
  - description: >-
      The OAuth 2.0 client ID that was created for the app used for authentication.

      This setting is required for enabling Microsoft Account authentication.

      Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm
    types:
    - uid: string
    name: microsoftAccountClientId
  - description: >-
      The OAuth 2.0 client secret that was created for the app used for authentication.

      This setting is required for enabling Microsoft Account authentication.

      Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm
    types:
    - uid: string
    name: microsoftAccountClientSecret
  - description: >-
      The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication.

      This setting is optional. If not specified, "wl.basic" is used as the default scope.

      Microsoft Account Scopes and permissions documentation: https://msdn.microsoft.com/en-us/library/dn631845.aspx
    types:
    - isArray: true
      uid: string
    name: microsoftAccountOAuthScopes
  - isReadyOnly: true
    description: Resource Id.
    types:
    - uid: string
    name: id
  - isReadyOnly: true
    description: Resource Name.
    types:
    - uid: string
    name: name
  - description: Kind of resource.
    types:
    - uid: string
    name: kind
  - isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
    name: type
- name: UnauthenticatedClientAction
  description: The action to take when an unauthenticated client attempts to access the app.
  kind: enum
  properties:
  - types:
    - uid: string
    name: RedirectToLoginPage
  - types:
    - uid: string
    name: AllowAnonymous
- name: BuiltInAuthenticationProvider
  description: >-
    The default authentication provider to use when multiple providers are configured.

    This setting is only needed if multiple providers are configured and the unauthenticated client

    action is set to "RedirectToLoginPage".
  kind: enum
  properties:
  - types:
    - uid: string
    name: AzureActiveDirectory
  - types:
    - uid: string
    name: Facebook
  - types:
    - uid: string
    name: Google
  - types:
    - uid: string
    name: MicrosoftAccount
  - types:
    - uid: string
    name: Twitter
examples: []
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - description: impersonate your user account
    name: user_impersonation
name: GetAuthSettingsSlot
uid: management.azure.com.appservice.webapps.getauthsettingsslot

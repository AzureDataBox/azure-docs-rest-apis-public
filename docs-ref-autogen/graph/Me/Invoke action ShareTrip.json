{
  "swagger": "2.0",
  "info": {
    "version": "1.0.1",
    "title": "OData Service for namespace Microsoft.OData.Service.Sample.TrippinInMemory.Models",
    "description": "This OData service is located at http://localhost"
  },
  "host": "localhost",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/Me/Microsoft.OData.Service.Sample.TrippinInMemory.Models.ShareTrip": {
      "post": {
        "tags": [
          "Me"
        ],
        "summary": "Invoke action ShareTrip",
        "operationId": "Invoke action ShareTrip",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Action parameters",
            "schema": {
              "type": "object",
              "properties": {
                "userName": {
                  "type": "string"
                },
                "tripId": {
                  "format": "int32",
                  "maximum": 2147483647,
                  "minimum": -2147483648,
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-internal-toc-name": "Invoke action ShareTrip"
      }
    }
  },
  "definitions": {
    "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person": {
      "title": "Person",
      "type": "object",
      "properties": {
        "UserName": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "MiddleName": {
          "type": "string"
        },
        "Gender": {},
        "Age": {
          "format": "int64"
        },
        "Emails": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AddressInfo": {
          "type": "array",
          "items": {}
        },
        "HomeAddress": {},
        "FavoriteFeature": {},
        "Features": {
          "type": "array",
          "items": {}
        },
        "Friends": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
          }
        },
        "BestFriend": {},
        "Trips": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip"
          }
        }
      }
    },
    "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airline": {
      "title": "Airline",
      "type": "object",
      "properties": {
        "AirlineCode": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Airport": {
      "title": "Airport",
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "IcaoCode": {
          "type": "string"
        },
        "IataCode": {
          "type": "string"
        },
        "Location": {}
      }
    },
    "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location": {
      "title": "Location",
      "type": "object",
      "properties": {
        "Address": {
          "type": "string"
        },
        "City": {}
      }
    },
    "Microsoft.OData.Service.Sample.TrippinInMemory.Models.City": {
      "title": "City",
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "CountryRegion": {
          "type": "string"
        },
        "Region": {
          "type": "string"
        }
      }
    },
    "Microsoft.OData.Service.Sample.TrippinInMemory.Models.AirportLocation": {
      "allOf": [
        {
          "$ref": "#/definitions/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
        },
        {
          "title": "AirportLocation",
          "type": "object",
          "properties": {
            "Loc": {
              "$ref": "#/definitions/Edm.GeographyPoint"
            }
          }
        }
      ]
    },
    "Microsoft.OData.Service.Sample.TrippinInMemory.Models.EventLocation": {
      "allOf": [
        {
          "$ref": "#/definitions/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Location"
        },
        {
          "title": "EventLocation",
          "type": "object",
          "properties": {
            "BuildingInfo": {
              "type": "string"
            }
          }
        }
      ]
    },
    "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Trip": {
      "title": "Trip",
      "type": "object",
      "properties": {
        "TripId": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "ShareId": {
          "format": "uuid",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Budget": {
          "format": "float"
        },
        "Description": {
          "type": "string"
        },
        "Tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StartsAt": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "EndsAt": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "PlanItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PlanItem"
          }
        }
      }
    },
    "Microsoft.OData.Service.Sample.TrippinInMemory.Models.PlanItem": {
      "title": "PlanItem",
      "type": "object",
      "properties": {
        "PlanItemId": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "ConfirmationCode": {
          "type": "string"
        },
        "StartsAt": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "EndsAt": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "Duration": {
          "format": "duration",
          "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
          "type": "string"
        }
      }
    },
    "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Event": {
      "allOf": [
        {
          "$ref": "#/definitions/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PlanItem"
        },
        {
          "title": "Event",
          "type": "object",
          "properties": {
            "OccursAt": {},
            "Description": {
              "type": "string"
            }
          }
        }
      ]
    },
    "Microsoft.OData.Service.Sample.TrippinInMemory.Models.PublicTransportation": {
      "allOf": [
        {
          "$ref": "#/definitions/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PlanItem"
        },
        {
          "title": "PublicTransportation",
          "type": "object",
          "properties": {
            "SeatNumber": {
              "type": "string"
            }
          }
        }
      ]
    },
    "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Flight": {
      "allOf": [
        {
          "$ref": "#/definitions/Microsoft.OData.Service.Sample.TrippinInMemory.Models.PublicTransportation"
        },
        {
          "title": "Flight",
          "type": "object",
          "properties": {
            "FlightNumber": {
              "type": "string"
            },
            "Airline": {},
            "From": {},
            "To": {}
          }
        }
      ]
    },
    "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Employee": {
      "allOf": [
        {
          "$ref": "#/definitions/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
        },
        {
          "title": "Employee",
          "type": "object",
          "properties": {
            "Cost": {
              "format": "int64"
            },
            "Peers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
              }
            }
          }
        }
      ]
    },
    "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Manager": {
      "allOf": [
        {
          "$ref": "#/definitions/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
        },
        {
          "title": "Manager",
          "type": "object",
          "properties": {
            "Budget": {
              "format": "int64"
            },
            "BossOffice": {},
            "DirectReports": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Microsoft.OData.Service.Sample.TrippinInMemory.Models.Person"
              }
            }
          }
        }
      ]
    },
    "Microsoft.OData.Service.Sample.TrippinInMemory.Models.PersonGender": {
      "title": "PersonGender",
      "enum": [
        "Male",
        "Female",
        "Unknow"
      ],
      "type": "string"
    },
    "Microsoft.OData.Service.Sample.TrippinInMemory.Models.Feature": {
      "title": "Feature",
      "enum": [
        "Feature1",
        "Feature2",
        "Feature3",
        "Feature4"
      ],
      "type": "string"
    },
    "Edm.Geography": {
      "$ref": "#/definitions/Edm.Geometry"
    },
    "Edm.GeographyPoint": {
      "$ref": "#/definitions/Edm.GeometryPoint"
    },
    "Edm.GeographyLineString": {
      "$ref": "#/definitions/Edm.GeometryLineString"
    },
    "Edm.GeographyPolygon": {
      "$ref": "#/definitions/Edm.GeometryPolygon"
    },
    "Edm.GeographyMultiPoint": {
      "$ref": "#/definitions/Edm.GeometryMultiPoint"
    },
    "Edm.GeographyMultiLineString": {
      "$ref": "#/definitions/Edm.GeometryMultiLineString"
    },
    "Edm.GeographyMultiPolygon": {
      "$ref": "#/definitions/Edm.GeometryMultiPolygon"
    },
    "Edm.GeographyCollection": {
      "$ref": "#/definitions/Edm.GeometryCollection"
    },
    "Edm.Geometry": {
      "type": "object"
    },
    "Edm.GeometryPoint": {
      "required": [
        "type",
        "coordinates"
      ],
      "type": "object",
      "properties": {
        "type": {
          "default": "Point",
          "enum": [
            "Point"
          ],
          "type": "string"
        },
        "coordinates": {
          "$ref": "#/definitions/GeoJSON.position"
        }
      }
    },
    "Edm.GeometryLineString": {
      "required": [
        "type",
        "coordinates"
      ],
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "LineString"
          ]
        },
        "coordinates": {
          "minItems": 2,
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoJSON.position"
          }
        }
      }
    },
    "Edm.GeometryPolygon": {
      "required": [
        "type",
        "coordinates"
      ],
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "Polygon"
          ]
        },
        "coordinates": {
          "minItems": 4,
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/GeoJSON.position"
            }
          }
        }
      }
    },
    "Edm.GeometryMultiPoint": {
      "required": [
        "type",
        "coordinates"
      ],
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "MultiPoint"
          ]
        },
        "coordinates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoJSON.position"
          }
        }
      }
    },
    "Edm.GeometryMultiLineString": {
      "required": [
        "type",
        "coordinates"
      ],
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "MultiLineString"
          ]
        },
        "coordinates": {
          "minItems": 2,
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/GeoJSON.position"
            }
          }
        }
      }
    },
    "Edm.GeometryMultiPolygon": {
      "required": [
        "type",
        "coordinates"
      ],
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "MultiPolygon"
          ]
        },
        "coordinates": {
          "minItems": 4,
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GeoJSON.position"
              }
            }
          }
        }
      }
    },
    "Edm.GeometryCollection": {
      "required": [
        "type",
        "coordinates"
      ],
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "GeometryCollection"
          ]
        },
        "coordinates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Edm.Geometry"
          }
        }
      }
    },
    "GeoJSON.position": {
      "minItems": 2,
      "type": "array",
      "items": {
        "type": "number"
      }
    },
    "odata.error": {
      "required": [
        "error"
      ],
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/odata.error.main"
        }
      }
    },
    "odata.error.main": {
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/odata.error.detail"
          }
        },
        "innererror": {
          "description": "The structure of this object is service-specific",
          "type": "object"
        }
      }
    },
    "odata.error.detail": {
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "top": {
      "name": "$top",
      "in": "Query",
      "description": "Show only the first n items",
      "type": "integer",
      "minimum": 0
    },
    "skip": {
      "name": "$skip",
      "in": "Query",
      "description": "Skip the first n items",
      "type": "integer",
      "minimum": 0
    },
    "count": {
      "name": "$count",
      "in": "Query",
      "description": "Include count of items",
      "type": "boolean"
    },
    "filter": {
      "name": "$filter",
      "in": "Query",
      "description": "Filter items by property values",
      "type": "string"
    },
    "search": {
      "name": "$search",
      "in": "Query",
      "description": "Search items by search phrases",
      "type": "string"
    }
  },
  "responses": {
    "error": {
      "description": "error",
      "schema": {
        "$ref": "#/definitions/odata.error"
      }
    }
  },
  "tags": [
    {
      "name": "People"
    },
    {
      "name": "Airlines"
    },
    {
      "name": "Airports"
    },
    {
      "name": "NewComePeople"
    },
    {
      "name": "Me"
    },
    {
      "name": "ResetDataSource"
    }
  ],
  "x-internal-service-name": "graph",
  "x-internal-toc-name": "Me",
  "x-internal-split-type": "Operation"
}
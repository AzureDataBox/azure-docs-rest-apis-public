### YamlMime:RESTOperation
summary: Gets a database's threat detection policy.
service: SQL Database
apiVersion: 2014-04-01
groupName: Database Threat Detection Policies
consumes:
- application/json
produces:
- application/json
paths:
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/securityAlertPolicies/{securityAlertPolicyName}?api-version=2014-04-01
uriParameters:
- in: path
  isRequired: true
  description: The subscription ID that identifies an Azure subscription.
  types:
  - uid: string
  name: subscriptionId
- in: path
  isRequired: true
  description: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
  types:
  - uid: string
  name: resourceGroupName
- in: path
  isRequired: true
  description: The name of the server.
  types:
  - uid: string
  name: serverName
- in: path
  isRequired: true
  description: The name of the database for which database Threat Detection policy is defined.
  types:
  - uid: string
  name: databaseName
- in: path
  isRequired: true
  description: The name of the security alert policy.
  types:
  - uid: string
  name: securityAlertPolicyName
- in: query
  isRequired: true
  description: The API version to use for the request.
  types:
  - uid: string
  name: api-version
responses:
- description: Successfully retrieved the database Threat Detection policy.
  types:
  - uid: DatabaseSecurityAlertPolicy
  name: 200 OK
- description: >-
    *** Error Responses: ***

     * 500 GetDatabaseSecurityAlertPolicyFailed - Failed to get database Threat Detection security alert policies. * 500 DatabaseIsUnavailable - Your settings are currently unavailable, please try again later
  name: Other Status Codes
requestHeader: []
definitions:
- name: DatabaseSecurityAlertPolicy
  description: Contains information about a database Threat Detection policy.
  kind: object
  properties:
  - description: The geo-location where the resource lives
    types:
    - uid: string
    name: location
  - isReadyOnly: true
    description: Resource kind.
    types:
    - uid: string
    name: kind
  - description: Specifies the state of the policy. If state is Enabled, storageEndpoint and storageAccountAccessKey are required.
    types:
    - uid: SecurityAlertPolicyState
    name: properties.state
  - description: 'Specifies the semicolon-separated list of alerts that are disabled, or empty string to disable no alerts. Possible values: Sql_Injection; Sql_Injection_Vulnerability; Access_Anomaly; Usage_Anomaly.'
    types:
    - uid: string
    name: properties.disabledAlerts
  - description: Specifies the semicolon-separated list of e-mail addresses to which the alert is sent.
    types:
    - uid: string
    name: properties.emailAddresses
  - description: Specifies that the alert is sent to the account administrators.
    types:
    - uid: SecurityAlertPolicyEmailAccountAdmins
    name: properties.emailAccountAdmins
  - description: Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs. If state is Enabled, storageEndpoint is required.
    types:
    - uid: string
    name: properties.storageEndpoint
  - description: Specifies the identifier key of the Threat Detection audit storage account. If state is Enabled, storageAccountAccessKey is required.
    types:
    - uid: string
    name: properties.storageAccountAccessKey
  - description: Specifies the number of days to keep in the Threat Detection audit logs.
    types:
    - uid: integer
    name: properties.retentionDays
  - description: Specifies whether to use the default server policy.
    types:
    - uid: SecurityAlertPolicyUseServerDefault
    name: properties.useServerDefault
  - isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
    name: id
  - isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
    name: name
  - isReadyOnly: true
    description: Resource type.
    types:
    - uid: string
    name: type
- name: SecurityAlertPolicyState
  description: Specifies the state of the policy. If state is Enabled, storageEndpoint and storageAccountAccessKey are required.
  kind: enum
  properties:
  - types:
    - uid: string
    name: New
  - types:
    - uid: string
    name: Enabled
  - types:
    - uid: string
    name: Disabled
- name: SecurityAlertPolicyEmailAccountAdmins
  description: Specifies that the alert is sent to the account administrators.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Enabled
  - types:
    - uid: string
    name: Disabled
- name: SecurityAlertPolicyUseServerDefault
  description: Specifies whether to use the default server policy.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Enabled
  - types:
    - uid: string
    name: Disabled
examples:
- request:
    uri: GET https://management.azure.com/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/securityalert-6852/providers/Microsoft.Sql/servers/securityalert-2080/databases/testdb/securityAlertPolicies/default?api-version=2014-04-01
  responses:
  - statusCode: "200"
    body: >-
      {

        "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/securityalert-6852/providers/Microsoft.Sql/servers/securityalert-2080/databases/testdb",

        "name": "default",

        "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",

        "location": "Japan East",

        "kind": "V12",

        "properties": {

          "state": "Enabled",

          "emailAccountAdmins": "Enabled",

          "emailAddresses": "test@microsoft.com;user@microsoft.com",

          "disabledAlerts": "Usage_Anomaly",

          "retentionDays": 0,

          "storageAccountAccessKey": "",

          "storageEndpoint": "",

          "useServerDefault": "Enabled"

        }

      }
  name: Get database security alert policy
security: []
name: Get
uid: management.azure.com.sqldatabase.databasethreatdetectionpolicies.get

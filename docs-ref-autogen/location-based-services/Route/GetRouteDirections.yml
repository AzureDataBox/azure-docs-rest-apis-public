### YamlMime:RESTOperation
summary: Returns routing directions between 2 coordinates
service: Location Based Services Functional API
apiVersion: "1.0"
groupName: Route
consumes: []
produces:
- application/json
- application/xml
paths:
- content: GET https://atlas.microsoft.com/route/directions/{format}?api-version=1.0&subscription-key={subscription-key}&query={query}
- content: GET https://atlas.microsoft.com/route/directions/{format}?api-version=1.0&subscription-key={subscription-key}&query={query}&maxAlternatives={maxAlternatives}&alternativeType={alternativeType}&minDeviationDistance={minDeviationDistance}&minDeviationTime={minDeviationTime}&instructionsType={instructionsType}&language={language}&computeBestOrder={computeBestOrder}&routeRepresentation={routeRepresentation}&computeTravelTimeFor={computeTravelTimeFor}&vehicleHeading={vehicleHeading}&report={report}&sectionType={sectionType}
  isOptional: true
uriParameters:
- in: path
  isRequired: true
  description: Desired format of the response
  types:
  - uid: string
  name: format
- in: query
  isRequired: true
  description: Version number of Azure LBS API.  Current version is 1.0
  types:
  - uid: string
  name: api-version
- in: query
  isRequired: true
  description: Azure LBS subscription key
  types:
  - uid: string
  name: subscription-key
- in: query
  isRequired: true
  description: The applicable query string and/or coordinates
  types:
  - uid: string
  name: query
- in: query
  description: Number of desired alternative routes to be calculated.  Max value is 5
  types:
  - uid: string
  name: maxAlternatives
- in: query
  description: Controls the optimality, with respect to the given planning criteria.  Controls the optimality, with respect to the given planning criteria, of the calculated alternatives compared to the reference route. Possible values are anyRoute which allow any alternative route to be returned irrespective of how it compares to the reference route in terms of optimality, and betterRoute which return an alternative route only if it is better than the reference route according to the given planning criteria
  types:
  - uid: string
  name: alternativeType
- in: query
  description: All alternative routes returned will follow the reference route (see section POST Requests) from the origin point of the calculateRoute request for at least this number of meters. Can only be used when reconstructing a route. The minDeviationDistance parameter cannot be used in conjunction with arriveAt
  types:
  - uid: string
  name: minDeviationDistance
- in: query
  description: All alternative routes returned will follow the reference route (see section POST Requests) from the origin point of the calculateRoute request for at least this number of seconds. Can only be used when reconstructing a route. The minDeviationTime parameter cannot be used in conjunction with arriveAt
  types:
  - uid: string
  name: minDeviationTime
- in: query
  description: If specified, guidance instructions will be returned.  Possible values are coded which returns raw instruction data without human-readable messages, text which returns raw instructions data with human-readable messages in plain text, and tagged which returns raw instruction data with tagged human-readable messages to permit formatting. Note that the instructionsType parameter cannot be used in conjunction with routeRepresentation=none
  types:
  - uid: string
  name: instructionsType
- in: query
  description: The language parameter determines the language of the guidance messages. It does not affect proper nouns (the names of streets, plazas, etc.) It has no effect when instructionsType=coded.  Allowed values are (a subset of) the IETF language tags described
  types:
  - uid: string
  name: language
- in: query
  description: Re-order the route waypoints to reduce the route length. Yields best results when used in conjunction with routeType shortest. Possible values are true or false.  True computes a better order, if possible but is not allowed to be used in conjunction with maxAlternatives value greater than 0 or in conjunction with circle waypoints. The response will include the optimized waypoint indices and can be used with a maximum of 20 route waypoints.  False will use the locations in the given order and not allowed to be used in conjunction with routeRepresentation none
  types:
  - uid: string
  name: computeBestOrder
- in: query
  description: Specifies the representation of the set of routes provided as response. Possible values are polyline includes routes in the response, or none which includes only the optimized waypoint indices but does not include the routes in the response. This parameter value can only be used in conjunction with computeBestOrder true.
  types:
  - uid: string
  name: routeRepresentation
- in: query
  description: Specifies whether to return additional travel times using different types of traffic information (none, historic, live) as well as the default best-estimate travel time. Possible values are none which does not compute additional travel times, or all which computes travel times for all types of traffic information and specifying all results in the fields noTrafficTravelTimeInSeconds, historicTrafficTravelTimeInSeconds and liveTrafficIncidentsTravelTimeInSeconds being included in the summaries in the route response
  types:
  - uid: string
  name: computeTravelTimeFor
- in: query
  description: The directional heading of the vehicle in degrees starting at true North and continuing in clockwise direction. North is 0 degrees, east is 90 degrees, south is 180 degrees, west is 270 degrees. Possible values 0-359
  types:
  - uid: string
  name: vehicleHeading
- in: query
  description: Specifies which data should be reported for diagnosis purposes
  types:
  - uid: string
  name: report
- in: query
  description: Specifies which of the section types is reported in the route response. Valid values are carTrain, ferry, tunnel, motorway, pedestrian, tollRoad, tollVignette, country, travelMode
  types:
  - uid: string
  name: sectionType
responses:
- description: OK
  types:
  - uid: routedirections200
  name: 200 OK
- description: 'Bad request: one or more parameters were incorrectly specified or are mutually exclusive.'
  types:
  - uid: Error
  name: 400 Bad Request
- description: 'Unauthorized: Access is denied due to invalid credentials.'
  types:
  - uid: Error
  name: Other Status Codes
- description: Permission, capacity, or authentication issues.
  types:
  - uid: Error
  name: Other Status Codes
- description: 'Not Found: the requested resource could not be found, but it may be available again in the future.'
  types:
  - uid: Error
  name: Other Status Codes
- description: An error occurred while processing the request. Please try again later.
  types:
  - uid: Error
  name: Other Status Codes
requestHeader: []
definitions:
- name: routedirections200
  description: This object is returned from a successful Route Directions call
  kind: object
  properties:
  - isReadyOnly: true
    description: Format Version property
    types:
    - uid: string
    name: formatVersion
  - isReadyOnly: true
    description: Copyright property
    types:
    - uid: string
    name: copyright
  - isReadyOnly: true
    description: Privacy property
    types:
    - uid: string
    name: privacy
  - isReadyOnly: true
    description: Routes array
    types:
    - uid: Routes
    name: routes
- name: Error
  description: This object is returned when an error occurs in the Location Based Service API
  kind: object
  properties:
  - isReadyOnly: true
    description: Error code.
    types:
    - uid: string
    name: statuscode
  - isReadyOnly: true
    description: If available, a human readable description of the error.
    types:
    - uid: string
    name: message
examples:
- request:
    uri: GET https://atlas.microsoft.com/route/directions/json?api-version=1.0&query=52.50931,13.42936:52.50274,13.43872
  responses:
  - statusCode: "200"
    body: '{"formatVersion":"0.0.12","copyright":"Copyright 2017 TomTom International BV. All rights reserved. This navigation data is the proprietary copyright of TomTom International BV and may be used only in accordance with the terms of a fully executed license agreement entered into between TomTom International BV, or an authorised reseller and yourself. If you have not entered into such a license agreement you are not authorised to use this data in any manner and should immediately return it to TomTom International BV.","privacy":"TomTom keeps information that tells us how and when you use our services. This includes information about the device you are using and the information we receive while you use the service, such as locations, routes, destinations and search queries. TomTom is unable to identify you based on the information it collects, and will not try to. TomTom uses the information for technical diagnostics, to detect fraud and abuse, to create usage reports, and to improve its services. The information is kept only for these purposes and for a limited period of time, after which it is destroyed. TomTom applies security methods based on industry standards to protect the information against unauthorised access. TomTom will not give anyone else access to the information or use it for any other purpose, unless explicitly and lawfully ordered to do so following due legal process. You can find out more at http://tomtom.com/privacy. You can contact TomTom by going to http://tomtom.com/support.","routes":[{"summary":{"lengthInMeters":1147,"travelTimeInSeconds":162,"trafficDelayInSeconds":0,"departureTime":"2017-09-07T16:56:58+00:00","arrivalTime":"2017-09-07T16:59:40+00:00"},"legs":[{"summary":{"lengthInMeters":1147,"travelTimeInSeconds":162,"trafficDelayInSeconds":0,"departureTime":"2017-09-07T16:56:58+00:00","arrivalTime":"2017-09-07T16:59:40+00:00"},"points":[{"latitude":52.50931,"longitude":13.42937},{"latitude":52.50904,"longitude":13.42912},{"latitude":52.50894,"longitude":13.42904},{"latitude":52.50867,"longitude":13.42879},{"latitude":52.5084,"longitude":13.42857},{"latitude":52.50791,"longitude":13.42824},{"latitude":52.50757,"longitude":13.42772},{"latitude":52.50735,"longitude":13.42823},{"latitude":52.5073,"longitude":13.42836},{"latitude":52.50573,"longitude":13.43194},{"latitude":52.50512,"longitude":13.43336},{"latitude":52.50464,"longitude":13.43451},{"latitude":52.5045,"longitude":13.43481},{"latitude":52.50443,"longitude":13.43498},{"latitude":52.50343,"longitude":13.43737},{"latitude":52.50274,"longitude":13.43872}]}],"sections":[{"startPointIndex":0,"endPointIndex":15,"sectionType":"TRAVEL_MODE","travelMode":"car"}]}]}'
  - statusCode: "400"
    body: '{"statuscode":"400","message":"Bad request: one or more parameters were incorrectly specified or are mutually exclusive."}'
  - statusCode: "401"
    body: '{"statuscode":"401","message":"Unauthorized: Access is denied due to invalid credentials."}'
  - statusCode: "403"
    body: '{"statuscode":"403","message":"Permission, capacity, or authentication issues."}'
  - statusCode: "404"
    body: '{"statuscode":"404","message":"Not Found: the requested resource could not be found, but it may be available again in the future."}'
  - statusCode: "500"
    body: '{"statuscode":"500","message":"An error occurred while processing the request. Please try again later."}'
  name: GetRouteDirections
security:
- type: apiKey
  in: header
  name: Ocp-Apim-Subscription-Key
- type: apiKey
  in: query
  name: subscription-key
name: GetRouteDirections
uid: atlas.microsoft.com.locationbasedservicesfunctionalapi.route.getroutedirections

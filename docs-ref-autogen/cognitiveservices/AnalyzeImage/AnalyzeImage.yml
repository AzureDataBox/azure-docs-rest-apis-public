### YamlMime:RESTOperation
uid: vision/v1.0.cognitiveservices.analyzeimage.analyzeimage
name: Analyze Image
service: Cognitive Services
groupName: Analyze Image
apiVersion: "1.0"
summary: This operation extracts a rich set of visual features based on the image content. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.  Within your request, there is an optional parameter to allow you to choose which features to return.  By default, image categories are returned in the response.
consumes:
- application/json
produces:
- application/json
paths:
- content: POST https://{AzureRegion}.api.cognitive.microsoft.com/vision/v1.0/analyze
- content: POST https://{AzureRegion}.api.cognitive.microsoft.com/vision/v1.0/analyze?overload=url&visualFeatures={visualFeatures}&details={details}&language={language}
  isOptional: true
uriParameters:
- name: AzureRegion
  in: path
  isRequired: true
  description: Supported Azure regions for Cognitive Services endpoints
  types:
  - uid: string
- name: visualFeatures
  in: query
  description: A string indicating what visual feature types to return. Multiple values should be comma-separated. Valid visual feature types include:Categories - categorizes image content according to a taxonomy defined in documentation. Tags - tags the image with a detailed list of words related to the image content. Description - describes the image content with a complete English sentence. Faces - detects if faces are present. If present, generate coordinates, gender and age. ImageType - detects if image is clipart or a line drawing. Color - determines the accent color, dominant color, and whether an image is black&white.Adult - detects if the image is pornographic in nature (depicts nudity or a sex act).  Sexually suggestive content is also detected.
  types:
  - uid: array
- name: details
  in: query
  description: A string indicating which domain-specific details to return. Multiple values should be comma-separated. Valid visual feature types include:Celebrities - identifies celebrities if detected in the image.
  types:
  - uid: array
- name: language
  in: query
  description: A string indicating which language to return. The service will return recognition results in specified language. If this parameter is not specified, the default value is &quot;en&quot;.Supported languages:en - English, Default.zh - Simplified Chinese.
  types:
  - uid: Language
responses:
- name: 200 OK
  description: The response include the extracted features in JSON format.Here is the definitions for enumeration typesClipartTypeNon-clipart = 0,  ambiguous = 1, normal-clipart = 2, good-clipart = 3.LineDrawingTypeNon-LineDrawing = 0,LineDrawing = 1.
  types:
  - uid: ImageAnalysis
- name: Other Status Codes
  description: Error response.
  types:
  - uid: ComputerVisionError
requestBody:
- parameters:
  - name: url
    in: body
    isRequired: true
    description: "  "
    types:
    - uid: string
requestHeader: []
definitions:
- name: Language
  description: A string indicating which language to return. The service will return recognition results in specified language. If this parameter is not specified, the default value is &quot;en&quot;.Supported languages:en - English, Default.zh - Simplified Chinese.
  kind: enum
  properties:
  - name: en
    types:
    - uid: string
  - name: zh
    types:
    - uid: string
- name: ImageAnalysis
  description: Result of AnalyzeImage operation.
  kind: object
  properties:
  - name: categories
    description: "  \nAn object describing identified category."
    types:
    - uid: Category
      isArray: true
  - name: adult
    description: "  \nA property scoring on whether the image is adult-oriented and/or racy."
    types:
    - uid: AdultInfo
  - name: color
    description: "  \nA property scoring on color spectrums."
    types:
    - uid: ColorInfo
  - name: imageType
    description: "  \nA property indicating type of image (whether it's clipart or line drawing)"
    types:
    - uid: ImageType
  - name: tags
    description: "  \nAn image caption, i.e. a brief description of what the image depicts."
    types:
    - uid: ImageTag
      isArray: true
  - name: description
    description: "  \nDescription of the image."
    types:
    - uid: ImageDescriptionDetails
  - name: faces
    description: "  \nAn object describing a face identified in the image."
    types:
    - uid: FaceDescription
      isArray: true
  - name: requestId
    description: "  \nId of the request for tracking purposes."
    types:
    - uid: string
  - name: metadata
    description: "  \nImage metadata"
    types:
    - uid: ImageMetadata
- name: ComputerVisionError
  kind: object
  properties:
  - name: code
    description: "  \nThe error code."
    types:
    - uid: ComputerVisionErrorCodes
  - name: message
    description: "  \nA message explaining the error reported by the service."
    types:
    - uid: string
  - name: requestId
    description: "  \nA unique request identifier."
    types:
    - uid: string
- name: ImageUrl
  kind: object
  properties:
  - name: url
    description: "  "
    types:
    - uid: string
- name: Category
  description: An array indicating identified categories.
  kind: object
  properties:
  - name: name
    description: "  \nName of the category."
    types:
    - uid: string
  - name: score
    description: "  \nScoring of the category."
    types:
    - uid: number
  - name: detail
    description: "  \nAdditional category detail if available."
    types:
    - uid: CategoryDetail
- name: AdultInfo
  description: A property scoring on whether the image is adult-oriented and/or racy.
  kind: object
  properties:
  - name: isAdultContent
    description: "  \nA value indicating if the image contains adult-oriented content."
    types:
    - uid: boolean
  - name: isRacyContent
    description: "  \nA value indicating if the image is race."
    types:
    - uid: boolean
  - name: adultScore
    description: "  \nScore from 0 to 1 that indicates how much of adult content is within the image."
    types:
    - uid: number
  - name: racyScore
    description: "  \nScore from 0 to 1 that indicates how suggestive is the image."
    types:
    - uid: number
- name: ColorInfo
  description: A property scoring on color spectrums.
  kind: object
  properties:
  - name: dominantColorForeground
    description: "  \nPossible dominant foreground color."
    types:
    - uid: string
  - name: dominantColorBackground
    description: "  \nPossible dominant background color."
    types:
    - uid: string
  - name: dominantColors
    description: "  "
    types:
    - uid: string
      isArray: true
  - name: accentColor
    description: "  \nPossible accent color."
    types:
    - uid: string
  - name: isBWImg
    description: "  \nA value indicating if the image is black and white."
    types:
    - uid: boolean
- name: ImageType
  description: A property indicating type of image (whether it's clipart or line drawing)
  kind: object
  properties:
  - name: clipArtType
    description: "  \nConfidence level that the image is a clip art."
    types:
    - uid: number
  - name: lineDrawingType
    description: "  \nConfidence level that the image is a line drawing."
    types:
    - uid: number
- name: ImageTag
  description: A list of tags with confidence level.
  kind: object
  properties:
  - name: name
    description: "  \nThe tag value"
    types:
    - uid: string
  - name: confidence
    description: "  \nThe level of confidence the service has in the caption"
    types:
    - uid: number
- name: ImageDescriptionDetails
  description: Description of the image.
  kind: object
  properties:
  - name: tags
    description: "  "
    types:
    - uid: string
      isArray: true
  - name: captions
    description: "  \nAn image caption, i.e. a brief description of what the image depicts."
    types:
    - uid: ImageCaption
      isArray: true
  - name: requestId
    description: "  \nId of the REST API request."
    types:
    - uid: string
  - name: metadata
    description: "  \nImage metadata"
    types:
    - uid: ImageMetadata
- name: FaceDescription
  description: An array of possible faces within the image.
  kind: object
  properties:
  - name: age
    description: "  \nPossible age of the face."
    types:
    - uid: integer
  - name: gender
    description: "  \nPossible gender of the face."
    types:
    - uid: Male
    - uid: Female
    typesTitle: enum
  - name: faceRectangle
    description: "  \nAn object describing face rectangle."
    types:
    - uid: FaceRectangle
- name: ImageMetadata
  description: Image metadata
  kind: object
  properties:
  - name: width
    description: "  \nImage width"
    types:
    - uid: integer
  - name: height
    description: "  \nImage height"
    types:
    - uid: integer
  - name: format
    description: "  \nImage format"
    types:
    - uid: string
- name: ComputerVisionErrorCodes
  description: The error code.
  kind: enum
  properties:
  - name: InvalidImageUrl
    types:
    - uid: string
  - name: InvalidImageFormat
    types:
    - uid: string
  - name: InvalidImageSize
    types:
    - uid: string
  - name: NotSupportedVisualFeature
    types:
    - uid: string
  - name: NotSupportedImage
    types:
    - uid: string
  - name: InvalidDetails
    types:
    - uid: string
  - name: NotSupportedLanguage
    types:
    - uid: string
  - name: BadArgument
    types:
    - uid: string
  - name: FailedToProcess
    types:
    - uid: string
  - name: Timeout
    types:
    - uid: string
  - name: InternalServerError
    types:
    - uid: string
  - name: Unspecified
    types:
    - uid: string
  - name: StorageException
    types:
    - uid: string
- name: CategoryDetail
  description: Additional category detail if available.
  kind: object
  properties:
  - name: celebrities
    description: "  \nAn object describing possible celebrity identification."
    types:
    - uid: CelebritiesModel
      isArray: true
- name: ImageCaption
  description: A list of captions, sorted by confidence level.
  kind: object
  properties:
  - name: text
    description: "  \nThe text of the caption"
    types:
    - uid: string
  - name: confidence
    description: "  \nThe level of confidence the service has in the caption"
    types:
    - uid: number
- name: FaceRectangle
  description: An object describing face rectangle.
  kind: object
  properties:
  - name: left
    description: "  \nX-coordinate of the top left point of the face."
    types:
    - uid: integer
  - name: top
    description: "  \nY-coordinate of the top left point of the face."
    types:
    - uid: integer
  - name: width
    description: "  \nWidth measured from the top-left point of the face."
    types:
    - uid: integer
  - name: height
    description: "  \nHeight measured from the top-left point of the face."
    types:
    - uid: integer
- name: CelebritiesModel
  description: An array of celebrities if any identified.
  kind: object
  properties:
  - name: name
    description: "  \nName of the celebrity."
    types:
    - uid: string
  - name: confidence
    description: "  \nLevel of confidence ranging from 0 to 1."
    types:
    - uid: number
  - name: faceRectangle
    description: "  \nAn object describing face rectangle."
    types:
    - uid: FaceRectangle
examples:
- name: Successful Analyze with Url request
  request:
    uri: POST https://{AzureRegion}.api.cognitive.microsoft.com/vision/v1.0/analyze?overload=url&visualFeatures=Categories,Adult,Tags,Description,Faces,Color,ImageType&details=Celebrities&language=en
  responses:
  - statusCode: "200"
    body: >-
      {
        "categories": [
          {
            "name": "abstract_",
            "score": 0.00390625
          },
          {
            "name": "people_",
            "score": 0.83984375,
            "detail": {
              "celebrities": [
                {
                  "name": "Satya Nadella",
                  "faceRectangle": {
                    "left": 597,
                    "top": 162,
                    "width": 248,
                    "height": 248
                  },
                  "confidence": 0.999028444
                }
              ],
              "landmarks": [
                {
                  "name": "Forbidden City",
                  "confidence": 0.9978346
                }
              ]
            }
          }
        ],
        "adult": {
          "isAdultContent": false,
          "isRacyContent": false,
          "adultScore": 0.0934349000453949,
          "racyScore": 0.068613491952419281
        },
        "tags": [
          {
            "name": "person",
            "confidence": 0.98979085683822632
          },
          {
            "name": "man",
            "confidence": 0.94493889808654785
          },
          {
            "name": "outdoor",
            "confidence": 0.938492476940155
          },
          {
            "name": "window",
            "confidence": 0.89513939619064331
          }
        ],
        "description": {
          "tags": [
            "person",
            "man",
            "outdoor",
            "window",
            "glasses"
          ],
          "captions": [
            {
              "text": "Satya Nadella sitting on a bench",
              "confidence": 0.48293603002174407
            }
          ]
        },
        "requestId": "0dbec5ad-a3d3-4f7e-96b4-dfd57efe967d",
        "metadata": {
          "width": 1500,
          "height": 1000,
          "format": "Jpeg"
        },
        "faces": [
          {
            "age": 44,
            "gender": "Male",
            "faceRectangle": {
              "left": 593,
              "top": 160,
              "width": 250,
              "height": 250
            }
          }
        ],
        "color": {
          "dominantColorForeground": "Brown",
          "dominantColorBackground": "Brown",
          "dominantColors": [
            "Brown",
            "Black"
          ],
          "accentColor": "873B59",
          "isBWImg": false
        },
        "imageType": {
          "clipArtType": 0,
          "lineDrawingType": 0
        }
      }
security:
- name: Ocp-Apim-Subscription-Key
  type: apiKey
  in: header

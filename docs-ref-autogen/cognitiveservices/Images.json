{
  "swagger": "2.0",
  "info": {
    "title": "Content Moderator Image Text Client",
    "version": "1.0",
    "description": "You use the API to scan your content as it is generated. Content Moderator then processes your content and sends the results along with relevant information either back to your systems or to the built-in review tool. You can use this information to take decisions e.g. take it down, send to human judge, etc.\r\n\r\nWhen using the API, images need to have a minimum of 128 pixels and a maximum file size of 4MB. \r\nText can be at most 1024 characters long. \r\nIf the content passed to the text API or the image API exceeds the size limits, the API will return an error code that informs about the issue.\r\n\r\nThis API is currently available in:\r\n\r\n* West US - westus.api.cognitive.microsoft.com\r\n* East US 2 - eastus2.api.cognitive.microsoft.com\r\n* West Central US - westcentralus.api.cognitive.microsoft.com\r\n* West Europe - westeurope.api.cognitive.microsoft.com\r\n* Southeast Asia - southeastasia.api.cognitive.microsoft.com ."
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{azureRegion}.api.cognitive.microsoft.com",
    "parameters": [
      {
        "$ref": "#/parameters/AzureRegion"
      }
    ]
  },
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {},
  "x-ms-paths": {
    "/contentmoderator/moderate/v1.0/ProcessImage/FindFaces?overload=stream": {
      "post": {
        "tags": [
          "Images"
        ],
        "operationId": "Images_FindFacesFileInput",
        "description": "Returns the list of faces found.",
        "parameters": [
          {
            "name": "CacheImage",
            "in": "query",
            "description": "Whether to retain the submitted image for future use; defaults to false if omitted.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/ocpApimSubscriptionKeyParameter"
          },
          {
            "$ref": "#/parameters/contentTypeHeader"
          },
          {
            "$ref": "#/parameters/ImageStreamParameter"
          }
        ],
        "consumes": [
          "image/gif",
          "image/jpeg",
          "image/png",
          "image/bmp",
          "image/tiff"
        ],
        "responses": {
          "200": {
            "description": "The list of faces found.",
            "schema": {
              "$ref": "#/definitions/FoundFaces"
            }
          },
          "default": {
            "description": ""
          }
        },
        "x-ms-examples": {
          "Find Faces request": {
            "$ref": "./examples/FindFacesStreamResource.JSON"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/contentmoderator/moderate/v1.0/ProcessImage/FindFaces?overload=url": {
      "post": {
        "tags": [
          "Images"
        ],
        "operationId": "Images_FindFacesUrlInput",
        "description": "Returns the list of faces found.",
        "parameters": [
          {
            "name": "CacheImage",
            "in": "query",
            "description": "Whether to retain the submitted image for future use; defaults to false if omitted.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/ocpApimSubscriptionKeyParameter"
          },
          {
            "$ref": "#/parameters/contentTypeHeader"
          },
          {
            "$ref": "#/parameters/ImageUrlParameter"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of faces found.",
            "schema": {
              "$ref": "#/definitions/FoundFaces"
            }
          },
          "default": {
            "description": ""
          }
        },
        "x-ms-examples": {
          "Find Faces request": {
            "$ref": "./examples/FindFacesResource.JSON"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/contentmoderator/moderate/v1.0/ProcessImage/OCR?overload=url": {
      "post": {
        "tags": [
          "Images"
        ],
        "operationId": "Images_OCRUrlInput",
        "description": "Returns any text found in the image for the language specified. If no language is specified in input then the detection defaults to English.",
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "description": "<a href=\"http://www-01.sil.org/iso639-3/codes.asp\">ISO 639-3 code</a>.",
            "required": true,
            "type": "string",
            "default": "eng"
          },
          {
            "name": "CacheImage",
            "in": "query",
            "description": "Whether to retain the submitted image for future use; defaults to false if omitted.",
            "type": "boolean",
            "default": false
          },
          {
            "name": "enhanced",
            "in": "query",
            "description": "When set to True, the image goes through additional processing to come with additional candidates.\n\nimage/tiff is not supported when enhanced is set to true\n\nNote: This impacts the response time.",
            "type": "boolean",
            "default": false
          },
          {
            "$ref": "#/parameters/ocpApimSubscriptionKeyParameter"
          },
          {
            "$ref": "#/parameters/contentTypeHeader"
          },
          {
            "$ref": "#/parameters/ImageUrlParameter"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The found text and list of candidate text.",
            "schema": {
              "$ref": "#/definitions/OCR"
            }
          },
          "default": {
            "description": ""
          }
        },
        "x-ms-examples": {
          "Image OCR request": {
            "$ref": "./examples/OCRResource.JSON"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/contentmoderator/moderate/v1.0/ProcessImage/OCR?overload=stream": {
      "post": {
        "tags": [
          "Images"
        ],
        "operationId": "Images_OCRFileInput",
        "description": "Returns any text found in the image for the language specified. If no language is specified in input then the detection defaults to English.",
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "description": "<a href=\"http://www-01.sil.org/iso639-3/codes.asp\">ISO 639-3 code</a>.",
            "required": true,
            "type": "string",
            "default": "eng"
          },
          {
            "name": "CacheImage",
            "in": "query",
            "description": "Whether to retain the submitted image for future use; defaults to false if omitted.",
            "type": "boolean",
            "default": false
          },
          {
            "name": "enhanced",
            "in": "query",
            "description": "When set to True, the image goes through additional processing to come with additional candidates.\n\nimage/tiff is not supported when enhanced is set to true\n\nNote: This impacts the response time.",
            "type": "boolean",
            "default": false
          },
          {
            "$ref": "#/parameters/ocpApimSubscriptionKeyParameter"
          },
          {
            "$ref": "#/parameters/contentTypeHeader"
          },
          {
            "$ref": "#/parameters/ImageStreamParameter"
          }
        ],
        "consumes": [
          "image/gif",
          "image/jpeg",
          "image/png",
          "image/bmp",
          "image/tiff"
        ],
        "responses": {
          "200": {
            "description": "The found text and list of candidate text.",
            "schema": {
              "$ref": "#/definitions/OCR"
            }
          },
          "default": {
            "description": ""
          }
        },
        "x-ms-examples": {
          "Image OCR request": {
            "$ref": "./examples/OCRStreamResource.JSON"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/contentmoderator/moderate/v1.0/ProcessImage/Evaluate?overload=stream": {
      "post": {
        "tags": [
          "Images"
        ],
        "operationId": "Images_EvaluateFileInput",
        "description": "Returns probabilities of the image containing racy or adult content.",
        "parameters": [
          {
            "name": "CacheImage",
            "in": "query",
            "description": "Whether to retain the submitted image for future use; defaults to false if omitted.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/ocpApimSubscriptionKeyParameter"
          },
          {
            "$ref": "#/parameters/contentTypeHeader"
          },
          {
            "$ref": "#/parameters/ImageStreamParameter"
          }
        ],
        "consumes": [
          "image/gif",
          "image/jpeg",
          "image/png",
          "image/bmp",
          "image/tiff"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Evaluate"
            }
          },
          "default": {
            "description": ""
          }
        },
        "x-ms-examples": {
          "Evaluate Image request": {
            "$ref": "./examples/EvaluateImageStreamResource.JSON"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/contentmoderator/moderate/v1.0/ProcessImage/Evaluate?overload=url": {
      "post": {
        "tags": [
          "Images"
        ],
        "operationId": "Images_EvaluateUrlInput",
        "description": "Returns probabilities of the image containing racy or adult content.",
        "parameters": [
          {
            "name": "CacheImage",
            "in": "query",
            "description": "Whether to retain the submitted image for future use; defaults to false if omitted.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/ocpApimSubscriptionKeyParameter"
          },
          {
            "$ref": "#/parameters/contentTypeHeader"
          },
          {
            "$ref": "#/parameters/ImageUrlParameter"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Evaluate"
            }
          },
          "default": {
            "description": ""
          }
        },
        "x-ms-examples": {
          "Evaluate Image request": {
            "$ref": "./examples/EvaluateImageResource.JSON"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/contentmoderator/moderate/v1.0/ProcessImage/Match?overload=url": {
      "post": {
        "tags": [
          "Images"
        ],
        "operationId": "Images_MatchUrlInput",
        "description": "Fuzzily match an image against one of your custom Image Lists. You can create and manage your custom image lists using <a href=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a> API. \r\n\r\nReturns ID and tags of matching image.<br/>\r\n<br/>\r\nNote: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.",
        "parameters": [
          {
            "name": "listId",
            "in": "query",
            "description": "The list id.",
            "type": "string"
          },
          {
            "name": "cacheimage",
            "in": "query",
            "description": "Use cached image.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/ocpApimSubscriptionKeyParameter"
          },
          {
            "$ref": "#/parameters/contentTypeHeader"
          },
          {
            "$ref": "#/parameters/ImageUrlParameter"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Supported values for tags are:\r\n<ul>\r\n<li>101: Nudity</li>\r\n<li>102: Sexual Content</li>\r\n<li>201: Alcohol</li>\r\n<li>202: Tobacco</li>\r\n<li>203: Drugs</li>\r\n<li>301: Child Exploitation</li>\r\n<li>401: Violence</li>\r\n<li>402: Weapons</li>\r\n<li>403: Gore</li>\r\n<li>501: Profanity</li>\r\n<li>502: Vulgarity</li>\r\n</ul>.",
            "schema": {
              "$ref": "#/definitions/MatchResponse"
            }
          },
          "default": {
            "description": ""
          }
        },
        "x-ms-examples": {
          "Match Image request": {
            "$ref": "./examples/MatchImageResource.JSON"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/contentmoderator/moderate/v1.0/ProcessImage/Match?overload=stream": {
      "post": {
        "tags": [
          "Images"
        ],
        "operationId": "Images_MatchFileInput",
        "description": "Fuzzily match an image against one of your custom Image Lists. You can create and manage your custom image lists using <a href=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a> API. \r\n\r\nReturns ID and tags of matching image.<br/>\r\n<br/>\r\nNote: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.",
        "parameters": [
          {
            "name": "listId",
            "in": "query",
            "description": "The list id.",
            "type": "string"
          },
          {
            "name": "cacheimage",
            "in": "query",
            "description": "Use cached image.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/ocpApimSubscriptionKeyParameter"
          },
          {
            "$ref": "#/parameters/contentTypeHeader"
          },
          {
            "$ref": "#/parameters/ImageStreamParameter"
          }
        ],
        "consumes": [
          "image/gif",
          "image/jpeg",
          "image/png",
          "image/bmp",
          "image/tiff"
        ],
        "responses": {
          "200": {
            "description": "Supported values for tags are:\r\n<ul>\r\n<li>101: Nudity</li>\r\n<li>102: Sexual Content</li>\r\n<li>201: Alcohol</li>\r\n<li>202: Tobacco</li>\r\n<li>203: Drugs</li>\r\n<li>301: Child Exploitation</li>\r\n<li>401: Violence</li>\r\n<li>402: Weapons</li>\r\n<li>403: Gore</li>\r\n<li>501: Profanity</li>\r\n<li>502: Vulgarity</li>\r\n</ul>.",
            "schema": {
              "$ref": "#/definitions/MatchResponse"
            }
          },
          "default": {
            "description": ""
          }
        },
        "x-ms-examples": {
          "Match Image request": {
            "$ref": "./examples/MatchImageStreamResource.JSON"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/contentmoderator/lists/v1.0/imagelists/{listId}/images?overload=url": {
      "post": {
        "tags": [
          "ImageList"
        ],
        "operationId": "ImageList_AddImageUrlInput",
        "description": "Add an image to the list with list Id equal to list Id passed.",
        "parameters": [
          {
            "$ref": "#/parameters/listId"
          },
          {
            "$ref": "#/parameters/tag"
          },
          {
            "$ref": "#/parameters/label"
          },
          {
            "$ref": "#/parameters/ocpApimSubscriptionKeyParameter"
          },
          {
            "$ref": "#/parameters/contentTypeHeader"
          },
          {
            "$ref": "#/parameters/ImageUrlParameter"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AddImage"
            }
          }
        },
        "x-ms-examples": {
          "Add Image request": {
            "$ref": "./examples/AddImageResource.JSON"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/contentmoderator/lists/v1.0/imagelists/{listId}/images?overload=stream": {
      "post": {
        "tags": [
          "ImageList"
        ],
        "operationId": "ImageList_AddImageFileInput",
        "description": "Add an image to the list with list Id equal to list Id passed.",
        "parameters": [
          {
            "$ref": "#/parameters/listId"
          },
          {
            "$ref": "#/parameters/tag"
          },
          {
            "$ref": "#/parameters/label"
          },
          {
            "$ref": "#/parameters/ocpApimSubscriptionKeyParameter"
          },
          {
            "$ref": "#/parameters/contentTypeHeader"
          },
          {
            "$ref": "#/parameters/ImageStreamParameter"
          }
        ],
        "consumes": [
          "image/gif",
          "image/jpeg",
          "image/png",
          "image/bmp",
          "image/tiff"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AddImage"
            }
          }
        },
        "x-ms-examples": {
          "Add Image request": {
            "$ref": "./examples/AddImageStreamResource.JSON"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    }
  },
  "definitions": {
    "Screen": {
      "description": "The response for a Screen text request.",
      "properties": {
        "originalText": {
          "description": "The original text.",
          "type": "string"
        },
        "normalizedText": {
          "description": "The normalized text.",
          "type": "string"
        },
        "misrepresentation": {
          "description": "The misrepresentation text.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "description": "The evaluate status.",
          "$ref": "#/definitions/ResponseStatus"
        },
        "pii": {
          "description": "Personal Identifier Information details.",
          "$ref": "#/definitions/PIIDetailsProperties"
        },
        "language": {
          "description": "Language of the input text content.",
          "type": "string"
        },
        "terms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TermsProperties"
          }
        },
        "trackingId": {
          "description": "Unique Content Moderator transaction Id.",
          "type": "string"
        }
      }
    },
    "PIIDetailsProperties": {
      "description": "Personal Identifier Information details.",
      "properties": {
        "email": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmailProperties"
          }
        },
        "ipa": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPAProperties"
          }
        },
        "phone": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhoneProperties"
          }
        },
        "address": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddressProperties"
          }
        }
      }
    },
    "EmailProperties": {
      "description": "Email Address details.",
      "properties": {
        "detected": {
          "description": "Detected Email Address from the input text content.",
          "type": "string"
        },
        "subType": {
          "description": "Subtype of the detected Email Address.",
          "type": "string"
        },
        "text": {
          "description": "Email Address in the input text content.",
          "type": "string"
        },
        "index": {
          "description": "Index(Location) of the Email address in the input text content.",
          "type": "number"
        }
      }
    },
    "IPAProperties": {
      "description": "IP Address details.",
      "properties": {
        "subType": {
          "description": "Subtype of the detected IP Address.",
          "type": "string"
        },
        "text": {
          "description": "Detected IP Address.",
          "type": "string"
        },
        "index": {
          "description": "Index(Location) of the IP Address in the input text content.",
          "type": "number"
        }
      }
    },
    "PhoneProperties": {
      "description": "Phone Property details.",
      "properties": {
        "countryCode": {
          "description": "CountryCode of the detected Phone number.",
          "type": "string"
        },
        "text": {
          "description": "Detected Phone number.",
          "type": "string"
        },
        "index": {
          "description": "Index(Location) of the Phone number in the input text content.",
          "type": "number"
        }
      }
    },
    "AddressProperties": {
      "description": "Address details.",
      "properties": {
        "text": {
          "description": "Detected Address.",
          "type": "string"
        },
        "index": {
          "description": "Index(Location) of the Address in the input text content.",
          "type": "number"
        }
      }
    },
    "TermsProperties": {
      "description": "Detected Terms details.",
      "properties": {
        "index": {
          "description": "Index(Location) of the detected profanity term in the input text content.",
          "type": "number"
        },
        "originalIndex": {
          "description": "Original Index(Location) of the detected profanity term in the input text content.",
          "type": "number"
        },
        "listId": {
          "description": "Matched Terms list Id.",
          "type": "number"
        },
        "term": {
          "description": "Detected profanity term.",
          "type": "string"
        }
      }
    },
    "FoundFaces": {
      "description": "Request object the contains found faces.",
      "properties": {
        "status": {
          "description": "The evaluate status",
          "$ref": "#/definitions/ResponseStatus"
        },
        "trackingId": {
          "description": "The tracking id.",
          "type": "string"
        },
        "cacheId": {
          "description": "The cache id.",
          "type": "string"
        },
        "result": {
          "description": "True if result was found.",
          "type": "boolean"
        },
        "count": {
          "description": "Number of faces found.",
          "type": "integer"
        },
        "advancedInfo": {
          "description": "The advanced info.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "faces": {
          "description": "The list of faces.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FoundFace"
          }
        }
      }
    },
    "FoundFace": {
      "description": "Coordinates to the found face.",
      "properties": {
        "bottom": {
          "description": "The bottom coordinate.",
          "type": "integer"
        },
        "left": {
          "description": "The left coordinate.",
          "type": "integer"
        },
        "right": {
          "description": "The right coordinate.",
          "type": "integer"
        },
        "top": {
          "description": "The top coordinate.",
          "type": "integer"
        }
      }
    },
    "OCR": {
      "description": "Contains the text found in image for the language specified.",
      "properties": {
        "status": {
          "description": "The evaluate status",
          "$ref": "#/definitions/ResponseStatus"
        },
        "metadata": {
          "description": "Array of KeyValue.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValuePair"
          }
        },
        "trackingId": {
          "description": "The tracking id.",
          "type": "string"
        },
        "cacheId": {
          "description": "The cache id.",
          "type": "string"
        },
        "language": {
          "description": "The ISO 639-3 code.",
          "type": "string"
        },
        "text": {
          "description": "The found text.",
          "type": "string"
        },
        "candidates": {
          "description": "The list of candidate text.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Candidate"
          }
        }
      }
    },
    "KeyValuePair": {
      "description": "The key value pair object properties.",
      "properties": {
        "key": {
          "description": "The key parameter.",
          "type": "string"
        },
        "value": {
          "description": "The value parameter.",
          "type": "string"
        }
      }
    },
    "Candidate": {
      "description": "OCR candidate text.",
      "properties": {
        "text": {
          "description": "The text found.",
          "type": "string"
        },
        "confidence": {
          "description": "The confidence level.",
          "type": "number"
        }
      }
    },
    "Evaluate": {
      "description": "Evaluate response object.",
      "properties": {
        "cacheID": {
          "description": "The cache id.",
          "type": "string"
        },
        "result": {
          "description": "Evaluate result.",
          "type": "boolean"
        },
        "trackingId": {
          "description": "The tracking id.",
          "type": "string"
        },
        "adultClassificationScore": {
          "description": "The adult classification score.",
          "type": "number"
        },
        "isImageAdultClassified": {
          "description": "Indicates if an image is classified as adult.",
          "type": "boolean"
        },
        "racyClassificationScore": {
          "description": "The racy classication score.",
          "type": "number"
        },
        "isImageRacyClassified": {
          "description": "Indicates if the image is classified as racy.",
          "type": "boolean"
        },
        "advancedInfo": {
          "description": "The advanced info.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "description": "The evaluate status",
          "$ref": "#/definitions/ResponseStatus"
        }
      }
    },
    "ResponseStatus": {
      "description": "The evaluate response status object.",
      "properties": {
        "code": {
          "description": "Evaluate response status code.",
          "type": "integer"
        },
        "description": {
          "description": "Description of evaluate response status code.",
          "type": "string"
        },
        "exception": {
          "description": "The evaluate response exception object."
        }
      }
    },
    "MatchResponse": {
      "description": "The response for a Match request.",
      "properties": {
        "trackingId": {
          "description": "The tracking id.",
          "type": "string"
        },
        "cacheID": {
          "description": "The cache id.",
          "type": "string"
        },
        "isMatch": {
          "description": "Indicates if there is a match.",
          "type": "boolean"
        },
        "matches": {
          "description": "The match details.",
          "$ref": "#/definitions/MatchDetailProperties"
        },
        "status": {
          "description": "The evaluate status",
          "$ref": "#/definitions/ResponseStatus"
        }
      }
    },
    "MatchDetailProperties": {
      "description": "The match detail.",
      "properties": {
        "score": {
          "description": "Confidence score of the image match.",
          "type": "number"
        },
        "matchId": {
          "description": "The match id.",
          "type": "string"
        },
        "source": {
          "description": "The source.",
          "type": "string"
        },
        "tags": {
          "description": "The tags for match details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MatchDetailTag"
          }
        },
        "label": {
          "description": "The label.",
          "type": "string"
        }
      }
    },
    "MatchDetailTag": {
      "description": "The details for a match.",
      "properties": {
        "key": {
          "description": "The key parameter.",
          "type": "string"
        },
        "value": {
          "description": "The value parameter.",
          "type": "string"
        }
      }
    },
    "DetectedLanguageResult": {
      "description": "Detect language result.",
      "properties": {
        "detectedLanguage": {
          "description": "The detected language.",
          "type": "string"
        },
        "status": {
          "description": "The detect language status",
          "$ref": "#/definitions/ResponseStatus"
        },
        "trackingId": {
          "description": "The tracking id.",
          "type": "string"
        }
      }
    },
    "CreateImageList": {
      "description": "Create Image List Response.",
      "properties": {
        "id": {
          "description": "Image List Id.",
          "type": "number"
        },
        "name": {
          "description": "Image List Name.",
          "type": "string"
        },
        "description": {
          "description": "Description for image list.",
          "type": "string"
        },
        "metadata": {
          "description": "Image List Metadata.",
          "type": "object",
          "properties": {
            "key One": {
              "description": "Optional Key value pair to describe your list.",
              "type": "string"
            },
            "key Two": {
              "description": "Optional Key value pair to describe your list.",
              "type": "string"
            }
          }
        }
      }
    },
    "CreateTermList": {
      "description": "Create Term List Response.",
      "properties": {
        "id": {
          "description": "Term list Id.",
          "type": "number"
        },
        "name": {
          "description": "Term list name.",
          "type": "string"
        },
        "description": {
          "description": "Description for term list.",
          "type": "string"
        },
        "metadata": {
          "description": "Term list metadata.",
          "type": "object",
          "properties": {
            "key One": {
              "description": "Optional Key value pair to describe your list.",
              "type": "string"
            },
            "key Two": {
              "description": "Optional Key value pair to describe your list.",
              "type": "string"
            }
          }
        }
      }
    },
    "ImageListGetDetails": {
      "description": "Get Image List Details Response.",
      "properties": {
        "id": {
          "description": "Id of the image list.",
          "type": "number"
        },
        "name": {
          "description": "Name of the image list.",
          "type": "string"
        },
        "description": {
          "description": "Description of the image list.",
          "type": "string"
        },
        "metadata": {
          "description": "Metadata of the image list.",
          "type": "object",
          "properties": {
            "key One": {
              "description": "Optional Key value pair to describe your list.",
              "type": "string"
            },
            "key Two": {
              "description": "Optional Key value pair to describe your list.",
              "type": "string"
            }
          }
        }
      }
    },
    "TermListGetListIdDetails": {
      "description": "Get Term List Details Response.",
      "properties": {
        "id": {
          "description": "Term list Id.",
          "type": "number"
        },
        "name": {
          "description": "Term list name.",
          "type": "string"
        },
        "description": {
          "description": "Description of the term list.",
          "type": "string"
        },
        "metadata": {
          "description": "Term List metadata.",
          "type": "object",
          "properties": {
            "key One": {
              "description": "Optional Key value pair to describe your list.",
              "type": "string"
            },
            "key Two": {
              "description": "Optional Key value pair to describe your list.",
              "type": "string"
            }
          }
        }
      }
    },
    "GetAllImageList": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Image list Id.",
            "type": "number"
          },
          "name": {
            "description": "Image list name.",
            "type": "string"
          },
          "description": {
            "description": "Description for image list.",
            "type": "string"
          },
          "metadata": {
            "description": "Image list metadata.",
            "type": "object",
            "properties": {
              "key One": {
                "description": "Optional Key value pair to describe your list.",
                "type": "string"
              },
              "key Two": {
                "description": "Optional Key value pair to describe your list.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "GetAllTermList": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Term list id.",
            "type": "number"
          },
          "name": {
            "description": "Term list name.",
            "type": "string"
          },
          "description": {
            "description": "Description for the term list.",
            "type": "string"
          },
          "metadata": {
            "description": "Term list metadata.",
            "type": "object",
            "properties": {
              "key One": {
                "description": "Optional Key value pair to describe your list.",
                "type": "string"
              },
              "key Two": {
                "description": "Optional Key value pair to describe your list.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "RefreshIndex": {
      "description": "Refresh Index Response.",
      "properties": {
        "contentSourceId": {
          "description": "Content source Id.",
          "type": "string"
        },
        "isUpdateSuccess": {
          "description": "Update success status.",
          "type": "boolean"
        },
        "advancedInfo": {
          "description": "Advanced info list.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "key One": {
                "description": "Key value pair.",
                "type": "string"
              },
              "key Two": {
                "description": "Key value pair.",
                "type": "string"
              }
            }
          }
        },
        "status": {
          "description": "Refresh index status.",
          "$ref": "#/definitions/AddGetRefreshStatus"
        },
        "trackingId": {
          "description": "Tracking Id.",
          "type": "string"
        }
      }
    },
    "UpdateImageList": {
      "description": "Update Image List Response.",
      "properties": {
        "id": {
          "description": "Id of the image list.",
          "type": "number"
        },
        "name": {
          "description": "Name of the image list.",
          "type": "string"
        },
        "description": {
          "description": "Description of the image list.",
          "type": "string"
        },
        "metadata": {
          "description": "Metadata of the image list.",
          "type": "object",
          "properties": {
            "key One": {
              "description": "Optional Key value pair to describe your list.",
              "type": "string"
            },
            "key Two": {
              "description": "Optional Key value pair to describe your list.",
              "type": "string"
            }
          }
        }
      }
    },
    "UpdateTermList": {
      "description": "Update Term List Response.",
      "properties": {
        "id": {
          "description": "Term List Id.",
          "type": "number"
        },
        "name": {
          "description": "Term List Name.",
          "type": "string"
        },
        "description": {
          "description": "Description for term list.",
          "type": "string"
        },
        "metadata": {
          "description": "Term List Metadata.",
          "type": "object",
          "properties": {
            "key One": {
              "description": "Optional Key value pair to describe your list.",
              "type": "string"
            },
            "key Two": {
              "description": "Optional Key value pair to describe your list.",
              "type": "string"
            }
          }
        }
      }
    },
    "AddImage": {
      "description": "Add Image Response.",
      "properties": {
        "contentId": {
          "description": "Content Id.",
          "type": "string"
        },
        "additionalInfo": {
          "description": "Advanced info list.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "key": {
                "description": "Key parameter.",
                "type": "string"
              },
              "value": {
                "description": "Value parameter.",
                "type": "string"
              }
            }
          }
        },
        "status": {
          "description": "Add image response status.",
          "$ref": "#/definitions/AddGetRefreshStatus"
        },
        "trackingId": {
          "description": "Tracking Id.",
          "type": "string"
        }
      }
    },
    "AddGetRefreshStatus": {
      "description": "Add and Get status response properties",
      "properties": {
        "code": {
          "description": "Status code.",
          "type": "number"
        },
        "description": {
          "description": "Status description.",
          "type": "string"
        },
        "exception": {
          "description": "Exception status.",
          "type": "string"
        }
      }
    },
    "GetAllImageIds": {
      "description": "Gets all image Id response properties.",
      "properties": {
        "contentSource": {
          "description": "Source of thecontent.",
          "type": "string"
        },
        "contentIds": {
          "description": "Id of the contents.",
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "status": {
          "description": "Get Image status.",
          "type": "object",
          "$ref": "#/definitions/AddGetRefreshStatus"
        },
        "trackingId": {
          "description": "Tracking Id.",
          "type": "string"
        }
      }
    },
    "GetAllTerms": {
      "description": "Gets all term Id response properties.",
      "properties": {
        "data": {
          "description": "Term data details.",
          "$ref": "#/definitions/TermData"
        },
        "paging": {
          "description": "Paging details.",
          "properties": {
            "Total": {
              "description": "Total details.",
              "type": "number"
            },
            "Limit": {
              "description": "Limit details.",
              "type": "number"
            },
            "Offset": {
              "description": "Offset details.",
              "type": "number"
            },
            "Returned": {
              "description": "Returned text details.",
              "type": "number"
            }
          }
        }
      }
    },
    "TermData": {
      "description": "Gets all term Id response properties.",
      "properties": {
        "language": {
          "description": "Language of the terms.",
          "type": "string"
        },
        "terms": {
          "description": "List of terms.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/termsInList"
          }
        },
        "status": {
          "description": "Get Term Status.",
          "type": "object",
          "$ref": "#/definitions/AddGetRefreshStatus"
        },
        "trackingId": {
          "description": "Tracking Id.",
          "type": "string"
        }
      }
    },
    "termsInList": {
      "description": "Terms in list Id passed.",
      "properties": {
        "term": {
          "description": "Added term details.",
          "type": "string"
        }
      }
    },
    "Review": {
      "description": "The Review object.",
      "properties": {
        "reviewId": {
          "description": "Id of the review.",
          "type": "string"
        },
        "subTeam": {
          "description": "Name of the subteam.",
          "type": "string"
        },
        "status": {
          "description": "The status string (<Pending, Complete>).",
          "type": "string"
        },
        "reviewerResultTags": {
          "description": "Array of KeyValue with Reviewer set Tags.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValuePair"
          }
        },
        "createdBy": {
          "description": "The reviewer name.",
          "type": "string"
        },
        "metadata": {
          "description": "Array of KeyValue.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValuePair"
          }
        },
        "type": {
          "description": "The type of content.",
          "type": "string"
        },
        "content": {
          "description": "The content value.",
          "type": "string"
        },
        "contentId": {
          "description": "Id of the content.",
          "type": "string"
        },
        "callbackEndpoint": {
          "description": "The callback endpoint.",
          "type": "string"
        }
      }
    },
    "Job": {
      "description": "The Job object.",
      "properties": {
        "id": {
          "description": "The job id.",
          "type": "string"
        },
        "teamName": {
          "description": "The team name associated with the job.",
          "type": "string"
        },
        "status": {
          "description": "The status string (<Pending, Failed, Completed>).",
          "type": "string"
        },
        "workflowId": {
          "description": "The Id of the workflow.",
          "type": "string"
        },
        "type": {
          "description": "Type of the content.",
          "type": "string"
        },
        "callBackEndpoint": {
          "description": "The callback endpoint.",
          "type": "string"
        },
        "reviewId": {
          "description": "Review Id if one is created.",
          "type": "string"
        },
        "resultMetaData": {
          "description": "Array of KeyValue pairs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValuePair"
          }
        },
        "jobExecutionReport": {
          "description": "Job execution report- Array of KeyValue pairs object.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/jobExecutionReportValues"
          }
        }
      }
    },
    "jobExecutionReportValues": {
      "description": "Job Execution Report Values.",
      "properties": {
        "ts": {
          "description": "Time details.",
          "type": "string"
        },
        "msg": {
          "description": "Message details.",
          "type": "string"
        }
      }
    },
    "ReviewListResult": {
      "description": "The list of review ids.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The Id of the review."
        }
      }
    },
    "JobListResult": {
      "description": "The list of job ids.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The job id."
        }
      }
    },
    "CreateJob": {
      "properties": {
        "jobId": {
          "description": "Id of the created job.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "languageQueryParameter": {
      "name": "language",
      "in": "query",
      "description": "<a href=\"http://www-01.sil.org/iso639-3/codes.asp\">ISO 639-3 code</a>.",
      "required": true,
      "type": "string",
      "default": "eng"
    },
    "CacheImage": {
      "name": "CacheImage",
      "in": "query",
      "description": "Whether to retain the submitted image for future use; defaults to false if omitted.",
      "type": "boolean"
    },
    "enhanced": {
      "name": "enhanced",
      "in": "query",
      "description": "When set to True, the image goes through additional processing to come with additional candidates.\n\nimage/tiff is not supported when enhanced is set to true\n\nNote: This impacts the response time.",
      "type": "boolean",
      "default": false
    },
    "ImageId": {
      "name": "ImageId",
      "in": "path",
      "description": "Id of the image.",
      "required": true,
      "type": "string"
    },
    "listIdQueryParameter": {
      "name": "listId",
      "in": "query",
      "description": "The list Id.",
      "type": "string"
    },
    "autocorrect": {
      "name": "autocorrect",
      "in": "query",
      "required": false,
      "description": "Autocorrect text.",
      "type": "boolean",
      "default": false
    },
    "PII": {
      "name": "PII",
      "in": "query",
      "description": "Detect personal identifiable information.",
      "required": false,
      "type": "boolean",
      "default": false
    },
    "classify": {
      "name": "classify",
      "description": "Classify input.",
      "in": "query",
      "required": false,
      "type": "boolean",
      "default": false
    },
    "textContent": {
      "name": "Text Content",
      "description": "Content to screen.",
      "in": "body",
      "required": true,
      "schema": {
        "format": "binary",
        "type": "string"
      }
    },
    "textBody": {
      "name": "Text Content",
      "in": "body",
      "required": true,
      "schema": {
        "format": "binary",
        "type": "string"
      },
      "description": "Text content whose language is to be detected."
    },
    "term": {
      "name": "term",
      "in": "path",
      "description": "Term to be deleted",
      "required": true,
      "type": "string"
    },
    "label": {
      "name": "label",
      "in": "query",
      "description": "The image label.",
      "type": "string",
      "required": false
    },
    "language": {
      "name": "language",
      "in": "query",
      "description": "Language of the terms.",
      "required": true,
      "type": "string"
    },
    "body": {
      "name": "body",
      "in": "body",
      "description": "Schema of the body.",
      "required": true,
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the list.",
            "type": "string"
          },
          "description": {
            "description": "Description of the list.",
            "type": "string"
          },
          "metadata": {
            "description": "Metadata of the list.",
            "type": "object",
            "properties": {
              "key One": {
                "description": "Optional key value pair to describe your list.",
                "type": "string"
              },
              "key Two": {
                "description": "Optional key value pair to describe your list.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "tag": {
      "name": "tag",
      "in": "query",
      "description": "Tag for the image.",
      "type": "number",
      "required": false
    },
    "listId": {
      "name": "listId",
      "in": "path",
      "description": "List Id of the image list.",
      "required": true,
      "type": "string"
    },
    "contentTypeHeader": {
      "name": "Content-Type",
      "description": "The content type.",
      "required": true,
      "type": "string",
      "in": "header"
    },
    "ImageUrlParameter": {
      "name": "ImageUrl",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "properties": {
          "dataRepresentation": {
            "type": "string",
            "default": "URL"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "description": "The image url."
    },
    "ImageStreamParameter": {
      "name": "ImageStream",
      "required": true,
      "in": "body",
      "schema": {
        "type": "object",
        "format": "file"
      },
      "description": "The image file."
    },
    "ocpApimSubscriptionKeyParameter": {
      "name": "Ocp-Apim-Subscription-Key",
      "description": "The subscription key in header",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "header"
    },
    "AzureRegion": {
      "name": "azureRegion",
      "description": "Supported Azure regions for Computer Vision endpoints",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true,
      "x-ms-enum": {
        "name": "AzureRegion",
        "modelAsString": true
      },
      "enum": [
        "westus",
        "westeurope",
        "southeastasia",
        "eastus2",
        "westcentralus"
      ]
    }
  },
  "x-internal-service-name": "Cognitive Services",
  "x-internal-toc-name": "Images",
  "x-internal-split-members": [
    {
      "displayName": "Evaluate",
      "relativePath": "Images/Evaluate"
    },
    {
      "displayName": "Evaluate File Input",
      "relativePath": "Images/EvaluateFileInput"
    },
    {
      "displayName": "Evaluate Url Input",
      "relativePath": "Images/EvaluateUrlInput"
    },
    {
      "displayName": "Find Faces",
      "relativePath": "Images/FindFaces"
    },
    {
      "displayName": "Find Faces File Input",
      "relativePath": "Images/FindFacesFileInput"
    },
    {
      "displayName": "Find Faces Url Input",
      "relativePath": "Images/FindFacesUrlInput"
    },
    {
      "displayName": "Match",
      "relativePath": "Images/Match"
    },
    {
      "displayName": "Match File Input",
      "relativePath": "Images/MatchFileInput"
    },
    {
      "displayName": "Match Url Input",
      "relativePath": "Images/MatchUrlInput"
    },
    {
      "displayName": "OCR",
      "relativePath": "Images/OCR"
    },
    {
      "displayName": "OCR File Input",
      "relativePath": "Images/OCRFileInput"
    },
    {
      "displayName": "OCR Url Input",
      "relativePath": "Images/OCRUrlInput"
    }
  ],
  "x-internal-split-type": "OperationGroup"
}
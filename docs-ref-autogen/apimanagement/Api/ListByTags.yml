### YamlMime:RESTOperation
uid: management.azure.com.apimanagement.api.listbytags
name: List By Tags
service: API Management
groupName: Api
<<<<<<< HEAD
apiVersion: 2017-03-01
=======
apiVersion: 2018-01-01
>>>>>>> master
summary: Lists a collection of apis associated with tags.
consumes:
- application/json
produces:
- application/json
paths:
<<<<<<< HEAD
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apisByTags?api-version=2017-03-01
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apisByTags?$filter={$filter}&$top={$top}&$skip={$skip}&api-version=2017-03-01
=======
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apisByTags?api-version=2018-01-01
- content: GET https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apisByTags?$filter={$filter}&$top={$top}&$skip={$skip}&api-version=2018-01-01
>>>>>>> master
  isOptional: true
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: serviceName
  in: path
  isRequired: true
  description: The name of the API Management service.
  types:
  - uid: string
  pattern: ^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$
- name: $filter
  in: query
  description: >-
    | Field       | Supported operators    | Supported functions                         |

    |-------------|------------------------|---------------------------------------------|

    | id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |

    | name        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |

    | aid         | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |

    | apiRevision | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |

    | path        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |

    | description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |

    | serviceUrl  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |

    | isCurrent   | eq                     | substringof, contains, startswith, endswith |
  types:
  - uid: string
- name: $top
  in: query
  description: Number of records to return.
  types:
  - uid: integer
  format: int32
- name: $skip
  in: query
  description: Number of records to skip.
  types:
  - uid: integer
  format: int32
- name: api-version
  in: query
  isRequired: true
  description: Version of the API to be used with the client request.
  types:
  - uid: string
responses:
- name: 200 OK
  description: Lists a collection of TagResource entities.
  types:
  - uid: TagResourceCollection
requestHeader: []
definitions:
- name: TagResourceCollection
  description: Paged Tag list representation.
  kind: object
  properties:
  - name: value
<<<<<<< HEAD
    description: Contract details.
    types:
    - uid: TagResourceContract
      isArray: true
=======
    description: TagResource contract properties.
    types:
    - uid: TagResourceContract
      isArray: true
  - name: count
    description: Total record count number across all pages.
    types:
    - uid: integer
>>>>>>> master
  - name: nextLink
    description: Next page link if any.
    types:
    - uid: string
- name: TagResourceContract
<<<<<<< HEAD
  description: Contract details.
  kind: object
  properties:
  - name: properties.tag
    description: Tag associated with the resource.
    types:
    - uid: TagContract
  - name: properties.api
    description: Api associated with the tag.
    types:
    - uid: ApiContract
  - name: properties.operation
    description: Api associated with the tag.
    types:
    - uid: OperationEntityContract
  - name: properties.product
    description: Product associated with the tag.
    types:
    - uid: ProductContract
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type for API Management resource.
    types:
    - uid: string
- name: TagContract
  description: Tag Contract details.
  kind: object
  properties:
  - name: properties.displayName
    description: Tag name.
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type for API Management resource.
    types:
    - uid: string
- name: ApiContract
  description: API details.
  kind: object
  properties:
  - name: properties.displayName
    description: API name.
    types:
    - uid: string
  - name: properties.serviceUrl
    description: Absolute URL of the backend service implementing this API.
    types:
    - uid: string
  - name: properties.path
    description: Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
    types:
    - uid: string
  - name: properties.protocols
=======
  description: TagResource contract properties.
  kind: object
  properties:
  - name: tag
    description: Tag associated with the resource.
    types:
    - uid: TagTagResourceContractProperties
  - name: api
    description: Api associated with the tag.
    types:
    - uid: ApiTagResourceContractProperties
  - name: operation
    description: Operation associated with the tag.
    types:
    - uid: OperationTagResourceContractProperties
  - name: product
    description: Product associated with the tag.
    types:
    - uid: ProductTagResourceContractProperties
- name: TagTagResourceContractProperties
  description: Contract defining the Tag property in the Tag Resource Contract
  kind: object
  properties:
  - name: id
    description: Tag identifier
    types:
    - uid: string
  - name: name
    description: Tag Name
    types:
    - uid: string
- name: ApiTagResourceContractProperties
  description: API contract properties for the Tag Resources.
  kind: object
  properties:
  - name: id
    description: API identifier in the form /apis/{apiId}.
    types:
    - uid: string
  - name: name
    description: API name.
    types:
    - uid: string
  - name: serviceUrl
    description: Absolute URL of the backend service implementing this API.
    types:
    - uid: string
  - name: path
    description: Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
    types:
    - uid: string
  - name: protocols
>>>>>>> master
    description: Describes on which protocols the operations in this API can be invoked.
    types:
    - uid: string
      isArray: true
<<<<<<< HEAD
  - name: properties.apiVersionSet
    description: Api Version Set Contract details.
    types:
    - uid: ApiVersionSetContract
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type for API Management resource.
    types:
    - uid: string
  - name: properties.description
    description: Description of the API. May include HTML formatting tags.
    types:
    - uid: string
  - name: properties.authenticationSettings
    description: Collection of authentication settings included into this API.
    types:
    - uid: AuthenticationSettingsContract
  - name: properties.subscriptionKeyParameterNames
    description: Protocols over which API is made available.
    types:
    - uid: SubscriptionKeyParameterNamesContract
  - name: properties.type
    description: Type of API.
    types:
    - uid: ApiType
  - name: properties.apiRevision
    description: Describes the Revision of the Api. If no value is provided, default revision 1 is created
    types:
    - uid: string
  - name: properties.apiVersion
    description: Indicates the Version identifier of the API if the API is versioned
    types:
    - uid: string
  - name: properties.isCurrent
=======
  - name: description
    description: Description of the API. May include HTML formatting tags.
    types:
    - uid: string
  - name: authenticationSettings
    description: Collection of authentication settings included into this API.
    types:
    - uid: AuthenticationSettingsContract
  - name: subscriptionKeyParameterNames
    description: Protocols over which API is made available.
    types:
    - uid: SubscriptionKeyParameterNamesContract
  - name: type
    description: Type of API.
    types:
    - uid: ApiType
  - name: apiRevision
    description: Describes the Revision of the Api. If no value is provided, default revision 1 is created
    types:
    - uid: string
  - name: apiVersion
    description: Indicates the Version identifier of the API if the API is versioned
    types:
    - uid: string
  - name: isCurrent
>>>>>>> master
    isReadyOnly: true
    description: Indicates if API revision is current api revision.
    types:
    - uid: boolean
<<<<<<< HEAD
  - name: properties.isOnline
=======
  - name: isOnline
>>>>>>> master
    isReadyOnly: true
    description: Indicates if API revision is accessible via the gateway.
    types:
    - uid: boolean
<<<<<<< HEAD
  - name: properties.apiVersionSetId
    description: A resource identifier for the related ApiVersionSet.
    types:
    - uid: string
- name: OperationEntityContract
  description: Operation Entity Contract Properties.
  kind: object
  properties:
  - name: properties.displayName
=======
  - name: apiVersionSetId
    description: A resource identifier for the related ApiVersionSet.
    types:
    - uid: string
- name: OperationTagResourceContractProperties
  description: Operation Entity contract Properties.
  kind: object
  properties:
  - name: id
    description: Identifier of the operation in form /operations/{operationId}.
    types:
    - uid: string
  - name: name
>>>>>>> master
    isReadyOnly: true
    description: Operation name.
    types:
    - uid: string
<<<<<<< HEAD
  - name: properties.apiName
=======
  - name: apiName
>>>>>>> master
    isReadyOnly: true
    description: Api Name.
    types:
    - uid: string
<<<<<<< HEAD
  - name: properties.apiRevision
=======
  - name: apiRevision
>>>>>>> master
    isReadyOnly: true
    description: Api Revision.
    types:
    - uid: string
<<<<<<< HEAD
  - name: properties.apiVersion
=======
  - name: apiVersion
>>>>>>> master
    isReadyOnly: true
    description: Api Version.
    types:
    - uid: string
<<<<<<< HEAD
  - name: properties.description
=======
  - name: description
>>>>>>> master
    isReadyOnly: true
    description: Operation Description.
    types:
    - uid: string
<<<<<<< HEAD
  - name: properties.method
=======
  - name: method
>>>>>>> master
    isReadyOnly: true
    description: A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.
    types:
    - uid: string
<<<<<<< HEAD
  - name: properties.urlTemplate
=======
  - name: urlTemplate
>>>>>>> master
    isReadyOnly: true
    description: 'Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}'
    types:
    - uid: string
<<<<<<< HEAD
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type for API Management resource.
    types:
    - uid: string
- name: ProductContract
  description: Product details.
  kind: object
  properties:
  - name: properties.displayName
    description: Product name.
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type for API Management resource.
    types:
    - uid: string
  - name: properties.description
    description: Product description. May include HTML formatting tags.
    types:
    - uid: string
  - name: properties.terms
    description: Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms before they can complete the subscription process.
    types:
    - uid: string
  - name: properties.subscriptionRequired
    description: Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred to as "protected" and a valid subscription key is required for a request to an API included in the product to succeed. If false, the product is referred to as "open" and requests to an API included in the product can be made without a subscription key. If property is omitted when creating a new product it's value is assumed to be true.
    types:
    - uid: boolean
  - name: properties.approvalRequired
    description: whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and has a value of false.
    types:
    - uid: boolean
  - name: properties.subscriptionsLimit
    description: Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false.
    types:
    - uid: integer
  - name: properties.state
    description: whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is notPublished.
    types:
    - uid: ProductState
- name: ApiVersionSetContract
  description: Api Version Set Contract details.
  kind: object
  properties:
  - name: properties.displayName
    description: Name of API Version Set
    types:
    - uid: string
  - name: properties.versioningScheme
    description: An value that determines where the API Version identifer will be located in a HTTP request.
    types:
    - uid: versioningScheme
  - name: id
    isReadyOnly: true
    description: Resource ID.
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: Resource name.
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: Resource type for API Management resource.
    types:
    - uid: string
  - name: properties.description
    description: Description of API Version Set.
    types:
    - uid: string
  - name: properties.versionQueryName
    description: Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
    types:
    - uid: string
  - name: properties.versionHeaderName
    description: Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
    types:
    - uid: string
=======
- name: ProductTagResourceContractProperties
  description: Product profile.
  kind: object
  properties:
  - name: id
    description: Identifier of the product in the form of /products/{productId}
    types:
    - uid: string
  - name: name
    description: Product name.
    types:
    - uid: string
  - name: description
    description: Product description. May include HTML formatting tags.
    types:
    - uid: string
  - name: terms
    description: Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms before they can complete the subscription process.
    types:
    - uid: string
  - name: subscriptionRequired
    description: Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred to as "protected" and a valid subscription key is required for a request to an API included in the product to succeed. If false, the product is referred to as "open" and requests to an API included in the product can be made without a subscription key. If property is omitted when creating a new product it's value is assumed to be true.
    types:
    - uid: boolean
  - name: approvalRequired
    description: whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and has a value of false.
    types:
    - uid: boolean
  - name: subscriptionsLimit
    description: Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false.
    types:
    - uid: integer
  - name: state
    description: whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is notPublished.
    types:
    - uid: ProductState
>>>>>>> master
- name: AuthenticationSettingsContract
  description: API Authentication Settings.
  kind: object
  properties:
  - name: oAuth2
    description: OAuth2 Authentication settings
    types:
    - uid: OAuth2AuthenticationSettingsContract
- name: SubscriptionKeyParameterNamesContract
  description: Subscription key parameter names details.
  kind: object
  properties:
  - name: header
    description: Subscription key header name.
    types:
    - uid: string
  - name: query
    description: Subscription key query string parameter name.
    types:
    - uid: string
- name: ApiType
  description: Type of API.
  kind: enum
  properties:
  - name: http
    types:
    - uid: string
  - name: soap
    types:
    - uid: string
- name: ProductState
  description: whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is notPublished.
  kind: enum
  properties:
  - name: notPublished
    types:
    - uid: string
  - name: published
    types:
    - uid: string
<<<<<<< HEAD
- name: versioningScheme
  description: An value that determines where the API Version identifer will be located in a HTTP request.
  kind: enum
  properties:
  - name: Segment
    description: The API Version is passed in a path segment.
    types:
    - uid: string
  - name: Query
    description: The API Version is passed in a query parameter.
    types:
    - uid: string
  - name: Header
    description: The API Version is passed in a HTTP header.
    types:
    - uid: string
=======
>>>>>>> master
- name: OAuth2AuthenticationSettingsContract
  description: API OAuth2 Authentication settings details.
  kind: object
  properties:
  - name: authorizationServerId
    description: OAuth authorization server identifier.
    types:
    - uid: string
  - name: scope
    description: operations scope.
    types:
    - uid: string
examples:
- name: ApiManagementListApisByTags
  request:
<<<<<<< HEAD
    uri: GET https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apisByTags?api-version=2017-03-01
=======
    uri: GET https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apisByTags?api-version=2018-01-01
>>>>>>> master
  responses:
  - statusCode: "200"
    body: >-
      {
        "value": [
          {
<<<<<<< HEAD
            "properties": {
              "tag": {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/tags/5600b59375ff190048020002",
                "type": "Microsoft.ApiManagement/service/tags",
                "name": "5600b59375ff190048020002",
                "properties": {
                  "displayName": "tag2"
                }
              },
              "api": {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/echo-api",
                "type": "Microsoft.ApiManagement/service/apis",
                "name": "echo-api",
                "properties": {
                  "displayName": "Echo API",
                  "apiRevision": "1",
                  "serviceUrl": "http://echoapi.cloudapp.net/api",
                  "path": "echo",
                  "protocols": [
                    "https"
                  ],
                  "isCurrent": true,
                  "isOnline": true
                }
              }
            }
          },
          {
            "properties": {
              "tag": {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/tags/5600b59375ff190048020002",
                "type": "Microsoft.ApiManagement/service/tags",
                "name": "5600b59375ff190048020002",
                "properties": {
                  "displayName": "tag2"
                }
              },
              "api": {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/echo-api2",
                "type": "Microsoft.ApiManagement/service/apis",
                "name": "echo-api2",
                "properties": {
                  "displayName": "Echo API2",
                  "apiRevision": "1",
                  "serviceUrl": "http://echoapi.cloudapp.net/api",
                  "path": "echo2",
                  "protocols": [
                    "https"
                  ],
                  "isCurrent": true,
                  "isOnline": true
                }
              }
            }
          },
          {
            "properties": {
              "tag": {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/tags/5600b59375ff190048020001",
                "type": "Microsoft.ApiManagement/service/tags",
                "name": "5600b59375ff190048020001",
                "properties": {
                  "displayName": "tag1"
                }
              },
              "api": {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/echo-api",
                "type": "Microsoft.ApiManagement/service/apis",
                "name": "echo-api",
                "properties": {
                  "displayName": "Echo API",
                  "apiRevision": "1",
                  "serviceUrl": "http://echoapi.cloudapp.net/api",
                  "path": "echo",
                  "protocols": [
                    "https"
                  ],
                  "isCurrent": true,
                  "isOnline": true
                }
              }
            }
          }
        ],
        "nextLink": ""
=======
            "tag": {
              "id": "/tags/apitag123",
              "name": "awesomeTag"
            },
            "api": {
              "id": "/apis/echo-api",
              "name": "Echo API",
              "apiRevision": "1",
              "serviceUrl": "http://echoapi.cloudapp.net/api",
              "path": "echo",
              "isCurrent": true
            }
          }
        ],
        "count": 1
>>>>>>> master
      }
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account

### YamlMime:RESTOperation
uid: management.azure.com.apimanagement.authorizationserver.createorupdate
name: Create Or Update
service: API Management
groupName: Authorization Server
apiVersion: 2017-03-01
summary: Creates new authorization server or updates an existing authorization server.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}?api-version=2017-03-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: serviceName
  in: path
  isRequired: true
  description: The name of the API Management service.
  types:
  - uid: string
  pattern: ^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$
- name: authsid
  in: path
  isRequired: true
  description: Identifier of the authorization server.
  types:
  - uid: string
  pattern: ^[^*#&+:<>?]+$
- name: api-version
  in: query
  isRequired: true
  description: Version of the API to be used with the client request.
  types:
  - uid: string
responses:
- name: 201 Created
  description: Authorization server was successfully registered.
  types:
  - uid: AuthorizationServerContract
- name: 200 OK
  description: Authorization server is already registered.
  types:
  - uid: AuthorizationServerContract
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- parameters:
  - name: properties.displayName
    in: body
    isRequired: true
    description: "  \nUser-friendly authorization server name."
    types:
    - uid: string
  - name: properties.clientRegistrationEndpoint
    in: body
    isRequired: true
    description: "  \nOptional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced."
    types:
    - uid: string
  - name: properties.authorizationEndpoint
    in: body
    isRequired: true
    description: "  \nOAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2."
    types:
    - uid: string
  - name: properties.grantTypes
    in: body
    isRequired: true
    description: "  "
    types:
    - uid: string
      isArray: true
  - name: properties.clientId
    in: body
    isRequired: true
    description: "  \nClient or app id registered with this authorization server."
    types:
    - uid: string
  - name: properties.description
    in: body
    description: "  \nDescription of the authorization server. Can contain HTML formatting tags."
    types:
    - uid: string
  - name: properties.authorizationMethods
    in: body
    description: "  "
    types:
    - uid: string
      isArray: true
  - name: properties.clientAuthenticationMethod
    in: body
    description: "  "
    types:
    - uid: string
      isArray: true
  - name: properties.tokenBodyParameters
    in: body
    description: "  \nOAuth acquire token request body parameter (www-url-form-encoded)."
    types:
    - uid: TokenBodyParameterContract
      isArray: true
  - name: properties.tokenEndpoint
    in: body
    description: "  \nOAuth token endpoint. Contains absolute URI to entity being referenced."
    types:
    - uid: string
  - name: properties.supportState
    in: body
    description: "  \nIf true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security."
    types:
    - uid: boolean
  - name: properties.defaultScope
    in: body
    description: "  \nAccess token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values."
    types:
    - uid: string
  - name: properties.bearerTokenSendingMethods
    in: body
    description: "  "
    types:
    - uid: string
      isArray: true
  - name: properties.clientSecret
    in: body
    description: "  \nClient or app secret registered with this authorization server."
    types:
    - uid: string
  - name: properties.resourceOwnerUsername
    in: body
    description: "  \nCan be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username."
    types:
    - uid: string
  - name: properties.resourceOwnerPassword
    in: body
    description: "  \nCan be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password."
    types:
    - uid: string
requestHeader: []
definitions:
- name: TokenBodyParameterContract
  description: 'Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {"name" : "name value", "value": "a value"}.'
  kind: object
  properties:
  - name: name
    description: "  \nbody parameter name."
    types:
    - uid: string
  - name: value
    description: "  \nbody parameter value."
    types:
    - uid: string
- name: AuthorizationServerContract
  description: Page values.
  kind: object
  properties:
  - name: properties.displayName
    description: "  \nUser-friendly authorization server name."
    types:
    - uid: string
  - name: properties.clientRegistrationEndpoint
    description: "  \nOptional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced."
    types:
    - uid: string
  - name: properties.authorizationEndpoint
    description: "  \nOAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2."
    types:
    - uid: string
  - name: properties.grantTypes
    description: "  "
    types:
    - uid: string
      isArray: true
  - name: properties.clientId
    description: "  \nClient or app id registered with this authorization server."
    types:
    - uid: string
  - name: id
    isReadyOnly: true
    description: "  \nResource ID."
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: "  \nResource name."
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: "  \nResource type for API Management resource."
    types:
    - uid: string
  - name: properties.description
    description: "  \nDescription of the authorization server. Can contain HTML formatting tags."
    types:
    - uid: string
  - name: properties.authorizationMethods
    description: "  "
    types:
    - uid: string
      isArray: true
  - name: properties.clientAuthenticationMethod
    description: "  "
    types:
    - uid: string
      isArray: true
  - name: properties.tokenBodyParameters
    description: "  \nOAuth acquire token request body parameter (www-url-form-encoded)."
    types:
    - uid: TokenBodyParameterContract
      isArray: true
  - name: properties.tokenEndpoint
    description: "  \nOAuth token endpoint. Contains absolute URI to entity being referenced."
    types:
    - uid: string
  - name: properties.supportState
    description: "  \nIf true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security."
    types:
    - uid: boolean
  - name: properties.defaultScope
    description: "  \nAccess token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values."
    types:
    - uid: string
  - name: properties.bearerTokenSendingMethods
    description: "  "
    types:
    - uid: string
      isArray: true
  - name: properties.clientSecret
    description: "  \nClient or app secret registered with this authorization server."
    types:
    - uid: string
  - name: properties.resourceOwnerUsername
    description: "  \nCan be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username."
    types:
    - uid: string
  - name: properties.resourceOwnerPassword
    description: "  \nCan be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password."
    types:
    - uid: string
- name: ErrorResponse
  description: Error Body contract.
  kind: object
  properties:
  - name: code
    description: "  \nService-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
    types:
    - uid: string
  - name: message
    description: "  \nHuman-readable representation of the error."
    types:
    - uid: string
  - name: details
    description: "  \nError Field contract."
    types:
    - uid: ErrorFieldContract
      isArray: true
- name: ErrorFieldContract
  description: Error Field contract.
  kind: object
  properties:
  - name: code
    description: "  \nProperty level error code."
    types:
    - uid: string
  - name: message
    description: "  \nHuman-readable representation of property-level error."
    types:
    - uid: string
  - name: target
    description: "  \nProperty name."
    types:
    - uid: string
examples:
- name: ApiManagementCreateAuthorizationServer
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/authorizationServers/newauthServer?api-version=2017-03-01
    body: >-
      {
        "properties": {
          "displayName": "test2",
          "description": "test server",
          "clientRegistrationEndpoint": "https://www.contoso.com/apps",
          "authorizationEndpoint": "https://www.contoso.com/oauth2/auth",
          "authorizationMethods": [
            "GET"
          ],
          "tokenEndpoint": "https://www.contoso.com/oauth2/token",
          "supportState": true,
          "defaultScope": "read write",
          "grantTypes": [
            "authorizationCode",
            "implicit"
          ],
          "bearerTokenSendingMethods": [
            "authorizationHeader"
          ],
          "clientId": "1",
          "clientSecret": "2",
          "resourceOwnerUsername": "un",
          "resourceOwnerPassword": "pwd"
        }
      }
  responses:
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/authorizationServers/newauthServer",
        "type": "Microsoft.ApiManagement/service/authorizationServers",
        "name": "newauthServer",
        "properties": {
          "displayName": "test2",
          "description": "test server",
          "clientRegistrationEndpoint": "https://www.contoso.com/apps",
          "authorizationEndpoint": "https://www.contoso.com/oauth2/auth",
          "authorizationMethods": [
            "GET"
          ],
          "tokenEndpoint": "https://www.contoso.com/oauth2/token",
          "supportState": true,
          "defaultScope": "read write",
          "grantTypes": [
            "authorizationCode",
            "implicit"
          ],
          "bearerTokenSendingMethods": [
            "authorizationHeader"
          ],
          "clientId": "1",
          "clientSecret": "2",
          "resourceOwnerUsername": "un",
          "resourceOwnerPassword": "pwd"
        }
      }
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/authorizationServers/newauthServer",
        "type": "Microsoft.ApiManagement/service/authorizationServers",
        "name": "newauthServer",
        "properties": {
          "displayName": "test2",
          "description": "test server",
          "clientRegistrationEndpoint": "https://www.contoso.com/apps",
          "authorizationEndpoint": "https://www.contoso.com/oauth2/auth",
          "authorizationMethods": [
            "GET"
          ],
          "tokenEndpoint": "https://www.contoso.com/oauth2/token",
          "supportState": true,
          "defaultScope": "read write",
          "grantTypes": [
            "authorizationCode",
            "implicit"
          ],
          "bearerTokenSendingMethods": [
            "authorizationHeader"
          ],
          "clientId": "1",
          "clientSecret": "2",
          "resourceOwnerUsername": "un",
          "resourceOwnerPassword": "pwd"
        }
      }
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account

{
  "swagger": "2.0",
  "info": {
    "version": "2018-01-01",
    "title": "ApiManagementClient",
    "description": "Use these REST APIs for performing operations on who is going to receive notifications associated with your Azure API Management deployment."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {},
  "definitions": {
    "NotificationCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotificationContract"
          },
          "description": "Page values."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Notification list representation."
    },
    "NotificationContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NotificationContractProperties",
          "description": "Notification entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Notification details."
    },
    "NotificationContractProperties": {
      "properties": {
        "title": {
          "type": "string",
          "description": "Title of the Notification.",
          "minLength": 1,
          "maxLength": 1000
        },
        "description": {
          "type": "string",
          "description": "Description of the Notification."
        },
        "recipients": {
          "$ref": "#/definitions/RecipientsContractProperties",
          "description": "Recipient Parameter values."
        }
      },
      "required": [
        "title"
      ],
      "description": "Notification Contract properties."
    },
    "RecipientsContractProperties": {
      "properties": {
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Emails subscribed for the notification."
        },
        "users": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Users subscribed for the notification."
        }
      },
      "description": "Notification Parameter contract."
    },
    "RecipientUserCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecipientUserContract"
          },
          "description": "Page values."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Recipient User list representation."
    },
    "RecipientUserContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RecipientUsersContractProperties",
          "description": "Recipient User entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Recipient User details."
    },
    "RecipientUsersContractProperties": {
      "properties": {
        "userId": {
          "type": "string",
          "description": "API Management UserId subscribed to notification."
        }
      },
      "description": "Recipient User Contract Properties."
    },
    "RecipientEmailCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecipientEmailContract"
          },
          "description": "Page values."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Recipient User list representation."
    },
    "RecipientEmailContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RecipientEmailContractProperties",
          "description": "Recipient Email contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Recipient Email details."
    },
    "RecipientEmailContractProperties": {
      "properties": {
        "email": {
          "type": "string",
          "description": "User Email subscribed to notification."
        }
      },
      "description": "Recipient Email Contract Properties."
    },
    "PolicyContractProperties": {
      "properties": {
        "policyContent": {
          "type": "string",
          "description": "Json escaped Xml Encoded contents of the Policy."
        },
        "contentFormat": {
          "type": "string",
          "description": "Format of the policyContent.",
          "enum": [
            "xml",
            "xml-link",
            "rawxml",
            "rawxml-link"
          ],
          "x-ms-enum": {
            "name": "PolicyContentFormat",
            "modelAsString": true,
            "values": [
              {
                "value": "xml",
                "description": "The contents are inline and Content type is an XML document."
              },
              {
                "value": "xml-link",
                "description": "The policy XML document is hosted on a http endpoint accessible from the API Management service."
              },
              {
                "value": "rawxml",
                "description": "The contents are inline and Content type is a non XML encoded policy document."
              },
              {
                "value": "rawxml-link",
                "description": "The policy document is not Xml encoded and is hosted on a http endpoint accessible from the API Management service."
              }
            ]
          },
          "default": "xml"
        }
      },
      "required": [
        "policyContent"
      ],
      "description": "Policy contract Properties."
    },
    "PolicyContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PolicyContractProperties",
          "description": "Properties of the Policy."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Policy Contract details."
    },
    "Resource": {
      "description": "The Resource definition.",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "type": "string",
          "description": "Resource name.",
          "readOnly": true
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type for API Management resource."
        }
      }
    },
    "ErrorFieldContract": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Property level error code."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of property-level error."
        },
        "target": {
          "type": "string",
          "description": "Property name."
        }
      },
      "description": "Error Field contract."
    },
    "ErrorResponse": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorFieldContract"
          },
          "description": "The list of invalid fields send in request, in case of validation error."
        }
      },
      "description": "Error Body contract."
    }
  },
  "parameters": {
    "NotificationNameParameter": {
      "name": "notificationName",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "RequestPublisherNotificationMessage",
        "PurchasePublisherNotificationMessage",
        "NewApplicationNotificationMessage",
        "BCC",
        "NewIssuePublisherNotificationMessage",
        "AccountClosedPublisher",
        "QuotaLimitApproachingPublisherNotificationMessage"
      ],
      "x-ms-enum": {
        "name": "NotificationName",
        "modelAsString": true,
        "values": [
          {
            "value": "RequestPublisherNotificationMessage",
            "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval."
          },
          {
            "value": "PurchasePublisherNotificationMessage",
            "description": "The following email recipients and users will receive email notifications about new API product subscriptions."
          },
          {
            "value": "NewApplicationNotificationMessage",
            "description": "The following email recipients and users will receive email notifications when new applications are submitted to the application gallery."
          },
          {
            "value": "BCC",
            "description": "The following recipients will receive blind carbon copies of all emails sent to developers."
          },
          {
            "value": "NewIssuePublisherNotificationMessage",
            "description": "The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal."
          },
          {
            "value": "AccountClosedPublisher",
            "description": "The following email recipients and users will receive email notifications when developer closes his account."
          },
          {
            "value": "QuotaLimitApproachingPublisherNotificationMessage",
            "description": "The following email recipients and users will receive email notifications when subscription usage gets close to usage quota."
          }
        ]
      },
      "description": "Notification Name Identifier.",
      "x-ms-parameter-location": "method"
    },
    "EmailParameter": {
      "name": "email",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Email identifier.",
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Version of the API to be used with the client request."
    },
    "ServiceNameParameter": {
      "name": "serviceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the API Management service.",
      "minLength": 1,
      "maxLength": 50,
      "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "UserIdParameter": {
      "name": "uid",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "User identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "pattern": "(^[\\w]+$)|(^[\\w][\\w\\-]+[\\w]$)",
      "x-ms-parameter-location": "method"
    },
    "IfMatchOptionalParameter": {
      "name": "If-Match",
      "in": "header",
      "required": false,
      "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SkipQueryParameter": {
      "name": "$skip",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "Number of records to skip.",
      "minimum": 0,
      "x-ms-parameter-location": "method"
    },
    "TopQueryParameter": {
      "name": "$top",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "Number of records to return.",
      "minimum": 1,
      "x-ms-parameter-location": "method"
    }
  },
  "x-internal-service-name": "API Management",
  "x-internal-toc-name": "Notification",
  "x-internal-split-members": [
    {
      "displayName": "Create Or Update",
      "relativePath": "Notification/CreateOrUpdate"
    },
    {
      "displayName": "Get",
      "relativePath": "Notification/Get"
    },
    {
      "displayName": "List By Service",
      "relativePath": "Notification/ListByService"
    }
  ],
  "x-internal-split-type": "OperationGroup"
}
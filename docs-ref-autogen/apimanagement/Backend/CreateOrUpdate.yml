### YamlMime:RESTOperation
uid: management.azure.com.apimanagement.backend.createorupdate
name: Create Or Update
service: API Management
groupName: Backend
apiVersion: 2017-03-01
summary: Creates or Updates a backend.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}?api-version=2017-03-01
uriParameters:
- name: subscriptionId
  in: path
  isRequired: true
  description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  types:
  - uid: string
- name: resourceGroupName
  in: path
  isRequired: true
  description: The name of the resource group.
  types:
  - uid: string
- name: serviceName
  in: path
  isRequired: true
  description: The name of the API Management service.
  types:
  - uid: string
  pattern: ^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$
- name: backendid
  in: path
  isRequired: true
  description: Identifier of the Backend entity. Must be unique in the current API Management service instance.
  types:
  - uid: string
  pattern: ^[^*#&+:<>?]+$
- name: api-version
  in: query
  isRequired: true
  description: Version of the API to be used with the client request.
  types:
  - uid: string
responses:
- name: 201 Created
  description: Backend was successfully created.
  types:
  - uid: BackendContract
- name: 200 OK
  description: The existing backend was successfully updated.
  types:
  - uid: BackendContract
- name: Other Status Codes
  description: Error response describing why the operation failed.
  types:
  - uid: ErrorResponse
requestBody:
- parameters:
  - name: properties.url
    in: body
    isRequired: true
    description: "  \nRuntime Url of the Backend."
    types:
    - uid: string
  - name: properties.protocol
    in: body
    isRequired: true
    description: "  \nBackend communication protocol."
    types:
    - uid: BackendProtocol
  - name: properties.title
    in: body
    description: "  \nBackend Title."
    types:
    - uid: string
  - name: properties.description
    in: body
    description: "  \nBackend Description."
    types:
    - uid: string
  - name: properties.resourceId
    in: body
    description: "  \nManagement Uri of the Resource in External System. This url can be the Arm Resource Id of Logic Apps, Function Apps or Api Apps."
    types:
    - uid: string
  - name: properties.properties
    in: body
    description: "  \nBackend Properties contract"
    types:
    - uid: BackendProperties
  - name: properties.credentials
    in: body
    description: "  \nBackend Credentials Contract Properties"
    types:
    - uid: BackendCredentialsContract
  - name: properties.proxy
    in: body
    description: "  \nBackend Proxy Contract Properties"
    types:
    - uid: BackendProxyContract
  - name: properties.tls
    in: body
    description: "  \nBackend TLS Properties"
    types:
    - uid: BackendTlsProperties
requestHeader: []
definitions:
- name: BackendProperties
  description: Backend Properties contract
  kind: object
  properties:
  - name: serviceFabricCluster
    description: "  \nBackend Service Fabric Cluster Properties"
    types:
    - uid: BackendServiceFabricClusterProperties
- name: BackendCredentialsContract
  description: Backend Credentials Contract Properties
  kind: object
  properties:
  - name: certificate
    description: "  "
    types:
    - uid: string
      isArray: true
  - name: query
    description: "  \nQuery Parameter description."
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: array
  - name: header
    description: "  \nHeader Parameter description."
    types:
    - uid: object
      isDictionary: true
      additionalTypes:
      - uid: string
      - uid: array
  - name: authorization
    description: "  \nAuthorization header authentication"
    types:
    - uid: BackendAuthorizationHeaderCredentials
- name: BackendProxyContract
  description: Backend Proxy Contract Properties
  kind: object
  properties:
  - name: url
    description: "  \nWebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings."
    types:
    - uid: string
  - name: username
    description: "  \nUsername to connect to the WebProxy server"
    types:
    - uid: string
  - name: password
    description: "  \nPassword to connect to the WebProxy Server"
    types:
    - uid: string
- name: BackendTlsProperties
  description: Backend TLS Properties
  kind: object
  properties:
  - name: validateCertificateChain
    description: "  \nFlag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend host."
    types:
    - uid: boolean
  - name: validateCertificateName
    description: "  \nFlag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend host."
    types:
    - uid: boolean
- name: BackendContract
  description: Backend values.
  kind: object
  properties:
  - name: properties.url
    description: "  \nRuntime Url of the Backend."
    types:
    - uid: string
  - name: properties.protocol
    description: "  \nBackend communication protocol."
    types:
    - uid: BackendProtocol
  - name: id
    isReadyOnly: true
    description: "  \nResource ID."
    types:
    - uid: string
  - name: name
    isReadyOnly: true
    description: "  \nResource name."
    types:
    - uid: string
  - name: type
    isReadyOnly: true
    description: "  \nResource type for API Management resource."
    types:
    - uid: string
  - name: properties.title
    description: "  \nBackend Title."
    types:
    - uid: string
  - name: properties.description
    description: "  \nBackend Description."
    types:
    - uid: string
  - name: properties.resourceId
    description: "  \nManagement Uri of the Resource in External System. This url can be the Arm Resource Id of Logic Apps, Function Apps or Api Apps."
    types:
    - uid: string
  - name: properties.properties
    description: "  \nBackend Properties contract"
    types:
    - uid: BackendProperties
  - name: properties.credentials
    description: "  \nBackend Credentials Contract Properties"
    types:
    - uid: BackendCredentialsContract
  - name: properties.proxy
    description: "  \nBackend Proxy Contract Properties"
    types:
    - uid: BackendProxyContract
  - name: properties.tls
    description: "  \nBackend TLS Properties"
    types:
    - uid: BackendTlsProperties
- name: ErrorResponse
  description: Error Body contract.
  kind: object
  properties:
  - name: code
    description: "  \nService-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
    types:
    - uid: string
  - name: message
    description: "  \nHuman-readable representation of the error."
    types:
    - uid: string
  - name: details
    description: "  \nError Field contract."
    types:
    - uid: ErrorFieldContract
      isArray: true
- name: BackendServiceFabricClusterProperties
  description: Backend Service Fabric Cluster Properties
  kind: object
  properties:
  - name: clientCertificatethumbprint
    description: "  \nThe client certificate thumbprint for the management endpoint."
    types:
    - uid: string
  - name: maxPartitionResolutionRetries
    description: "  \nMaximum number of retries while attempting resolve the parition."
    types:
    - uid: integer
  - name: managementEndpoints
    description: "  "
    types:
    - uid: string
      isArray: true
  - name: serverCertificateThumbprints
    description: "  "
    types:
    - uid: string
      isArray: true
  - name: serverX509Names
    description: "  \nProperties of server X509Names."
    types:
    - uid: X509CertificateName
      isArray: true
- name: BackendAuthorizationHeaderCredentials
  description: Authorization header information.
  kind: object
  properties:
  - name: scheme
    description: "  \nAuthentication Scheme name."
    types:
    - uid: string
  - name: parameter
    description: "  \nAuthentication Parameter value."
    types:
    - uid: string
- name: BackendProtocol
  description: Backend communication protocol.
  kind: enum
  properties:
  - name: http
    description: The Backend is a RESTful service.
    types:
    - uid: string
  - name: soap
    description: The Backend is a SOAP service.
    types:
    - uid: string
- name: ErrorFieldContract
  description: Error Field contract.
  kind: object
  properties:
  - name: code
    description: "  \nProperty level error code."
    types:
    - uid: string
  - name: message
    description: "  \nHuman-readable representation of property-level error."
    types:
    - uid: string
  - name: target
    description: "  \nProperty name."
    types:
    - uid: string
- name: X509CertificateName
  description: Server X509 Certificate Names Collection
  kind: object
  properties:
  - name: name
    description: "  \nCommon Name of the Certificate."
    types:
    - uid: string
  - name: issuerCertificateThumbprint
    description: "  \nThumbprint for the Issuer of the Certificate."
    types:
    - uid: string
examples:
- name: ApiManagementCreateBackendServiceFabric
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/backends/sfbackend?api-version=2017-03-01
    body: >-
      {
        "properties": {
          "description": "Service Fabric Test App 1",
          "protocol": "http",
          "url": "fabric:/mytestapp/mytestservice",
          "properties": {
            "serviceFabricCluster": {
              "managementEndpoints": [
                "https://somecluster.com"
              ],
              "clientCertificatethumbprint": "EBA029198AA3E76EF0D70482626E5BCF148594A6",
              "serverX509Names": [
                {
                  "name": "ServerCommonName1",
                  "issuerCertificateThumbprint": "IssuerCertificateThumbprint1"
                }
              ],
              "maxPartitionResolutionRetries": 5
            }
          }
        }
      }
  responses:
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/backends/sfbackend",
        "type": "Microsoft.ApiManagement/service/backends",
        "name": "sfbackend",
        "properties": {
          "description": "Service Fabric Test App 1",
          "url": "fabric:/mytestapp/mytestservice",
          "protocol": "http",
          "properties": {
            "serviceFabricCluster": {
              "managementEndpoints": [
                "https://somecluster.com"
              ],
              "clientCertificatethumbprint": "EBA029198AA3E76EF0D70482626E5BCF148594A6",
              "serverX509Names": [
                {
                  "name": "ServerCommonName1",
                  "issuerCertificateThumbprint": "IssuerCertificateThumbprint1"
                }
              ],
              "maxPartitionResolutionRetries": 5
            }
          }
        }
      }
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/backends/sfbackend",
        "type": "Microsoft.ApiManagement/service/backends",
        "name": "sfbackend",
        "properties": {
          "description": "Service Fabric Test App 1",
          "url": "fabric:/mytestapp/mytestservice",
          "protocol": "http",
          "properties": {
            "serviceFabricCluster": {
              "managementEndpoints": [
                "https://somecluster.com"
              ],
              "clientCertificatethumbprint": "EBA029198AA3E76EF0D70482626E5BCF148594A6",
              "serverX509Names": [
                {
                  "name": "ServerCommonName1",
                  "issuerCertificateThumbprint": "IssuerCertificateThumbprint1"
                }
              ],
              "maxPartitionResolutionRetries": 5
            }
          }
        }
      }
- name: ApiManagementCreateBackendProxyBackend
  request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/backends/proxybackend?api-version=2017-03-01
    body: >-
      {
        "properties": {
          "description": "description5308",
          "url": "https://backendname2644/",
          "protocol": "http",
          "tls": {
            "validateCertificateChain": true,
            "validateCertificateName": true
          },
          "proxy": {
            "url": "http://192.168.1.1:8080",
            "username": "Contoso\\admin",
            "password": "opensesame"
          },
          "credentials": {
            "query": {
              "sv": [
                "xx",
                "bb",
                "cc"
              ]
            },
            "header": {
              "x-my-1": [
                "val1",
                "val2"
              ]
            },
            "authorization": {
              "scheme": "Basic",
              "parameter": "opensesma"
            }
          }
        }
      }
  responses:
  - statusCode: "201"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/backends/proxybackend",
        "type": "Microsoft.ApiManagement/service/backends",
        "name": "proxybackend",
        "properties": {
          "description": "description5308",
          "url": "https://backendname2644/",
          "protocol": "http",
          "credentials": {
            "query": {
              "sv": [
                "xx",
                "bb",
                "cc"
              ]
            },
            "header": {
              "x-my-1": [
                "val1",
                "val2"
              ]
            },
            "authorization": {
              "scheme": "Basic",
              "parameter": "opensesma"
            }
          },
          "proxy": {
            "url": "http://192.168.1.1:8080",
            "username": "Contoso\\admin",
            "password": "opensesame"
          },
          "tls": {
            "validateCertificateChain": false,
            "validateCertificateName": false
          }
        }
      }
  - statusCode: "200"
    body: >-
      {
        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/backends/proxybackend",
        "type": "Microsoft.ApiManagement/service/backends",
        "name": "proxybackend",
        "properties": {
          "description": "description5308",
          "url": "https://backendname2644/",
          "protocol": "http",
          "credentials": {
            "query": {
              "sv": [
                "xx",
                "bb",
                "cc"
              ]
            },
            "header": {
              "x-my-1": [
                "val1",
                "val2"
              ]
            },
            "authorization": {
              "scheme": "Basic",
              "parameter": "opensesma"
            }
          },
          "proxy": {
            "url": "http://192.168.1.1:8080",
            "username": "Contoso\\admin",
            "password": "opensesame"
          },
          "tls": {
            "validateCertificateChain": false,
            "validateCertificateName": false
          }
        }
      }
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow.
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - name: user_impersonation
    description: impersonate your user account

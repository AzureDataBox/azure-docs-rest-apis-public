### YamlMime:RESTOperation
summary: Creates or updates an Azure Cosmos DB database account.
service: Cosmos DB Resource Provider
apiVersion: 2015-04-08
groupName: Database Accounts
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}?api-version=2015-04-08
uriParameters:
- in: path
  isRequired: true
  description: Azure subscription ID.
  types:
  - uid: string
  name: subscriptionId
- in: path
  isRequired: true
  description: Name of an Azure resource group.
  types:
  - uid: string
  pattern: ^[-\w\._\(\)]+$
  name: resourceGroupName
- in: path
  isRequired: true
  description: Cosmos DB database account name.
  types:
  - uid: string
  name: accountName
- in: query
  isRequired: true
  description: Version of the API to be used with the client request. The current version is 2015-04-08.
  types:
  - uid: string
  name: api-version
responses:
- description: The database account create or update operation will complete asynchronously.
  types:
  - uid: DatabaseAccount
  name: 200 OK
requestBody:
- parameters:
  - in: body
    description: Indicates the type of database account. This can only be set at database account creation.
    types:
    - uid: DatabaseAccountKind
    name: kind
  - in: body
    description: The consistency policy for the Cosmos DB account.
    types:
    - uid: ConsistencyPolicy
    name: consistencyPolicy
  - in: body
    isRequired: true
    description: An array that contains the georeplication locations enabled for the Cosmos DB account.
    types:
    - isArray: true
      uid: Location
    name: locations
  - in: body
    isRequired: true
    description: The offer type for the Cosmos DB database account.
    types:
    - uid: DatabaseAccountOfferType
    name: databaseAccountOfferType
  - in: body
    description: 'Cosmos DB Firewall Support: This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account. IP addresses/ranges must be comma separated and must not contain any spaces.'
    types:
    - uid: string
    name: ipRangeFilter
  - in: body
    description: Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.
    types:
    - uid: boolean
    name: enableAutomaticFailover
  - in: body
    isRequired: true
    description: The location of the resource group to which the resource belongs.
    types:
    - uid: string
    name: location
  - in: body
    description: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters.
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
      uid: object
    name: tags
requestHeader: []
definitions:
- name: DatabaseAccountKind
  description: Indicates the type of database account. This can only be set at database account creation.
  kind: enum
  properties:
  - types:
    - uid: string
    name: GlobalDocumentDB
  - types:
    - uid: string
    name: MongoDB
  - types:
    - uid: string
    name: Parse
- name: DefaultConsistencyLevel
  description: The default consistency level and configuration settings of the Cosmos DB account.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Eventual
  - types:
    - uid: string
    name: Session
  - types:
    - uid: string
    name: BoundedStaleness
  - types:
    - uid: string
    name: Strong
  - types:
    - uid: string
    name: ConsistentPrefix
- name: DatabaseAccountOfferType
  description: The offer type for the Cosmos DB database account.
  kind: enum
  properties:
  - types:
    - uid: string
    name: Standard
- name: DatabaseAccount
  description: An Azure Cosmos DB database account.
  kind: object
  properties:
  - description: Indicates the type of database account. This can only be set at database account creation.
    types:
    - uid: DatabaseAccountKind
    name: kind
  - isReadyOnly: true
    description: The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation.
    types:
    - uid: string
    name: provisioningState
  - isReadyOnly: true
    description: The connection endpoint for the Cosmos DB database account.
    types:
    - uid: string
    name: documentEndpoint
  - isReadyOnly: true
    description: 'The offer type for the Cosmos DB database account. Default value: Standard.'
    types:
    - uid: DatabaseAccountOfferType
    name: databaseAccountOfferType
  - description: 'Cosmos DB Firewall Support: This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account. IP addresses/ranges must be comma separated and must not contain any spaces.'
    types:
    - uid: string
    name: ipRangeFilter
  - description: Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.
    types:
    - uid: boolean
    name: enableAutomaticFailover
  - description: The consistency policy for the Cosmos DB database account.
    types:
    - uid: ConsistencyPolicy
    name: consistencyPolicy
  - isReadyOnly: true
    description: An array that contains the write location for the Cosmos DB account.
    types:
    - isArray: true
      uid: Location
    name: writeLocations
  - isReadyOnly: true
    description: An array that contains of the read locations enabled for the Cosmos DB account.
    types:
    - isArray: true
      uid: Location
    name: readLocations
  - isReadyOnly: true
    description: An array that contains the regions ordered by their failover priorities.
    types:
    - isArray: true
      uid: FailoverPolicy
    name: failoverPolicies
  - isReadyOnly: true
    description: The unique resource identifier of the database account.
    types:
    - uid: string
    name: id
  - isReadyOnly: true
    description: The name of the database account.
    types:
    - uid: string
    name: name
  - isReadyOnly: true
    description: The type of Azure resource.
    types:
    - uid: string
    name: type
  - description: The location of the resource group to which the resource belongs.
    types:
    - uid: string
    name: location
  - description: Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters.
    types:
    - isDictionary: true
      additionalTypes:
      - uid: string
      - uid: string
      uid: object
    name: tags
- name: ConsistencyPolicy
  description: The consistency policy for the Cosmos DB database account.
  kind: object
  properties:
  - description: The default consistency level and configuration settings of the Cosmos DB account.
    types:
    - uid: DefaultConsistencyLevel
    name: defaultConsistencyLevel
  - description: When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
    types:
    - uid: integer
    name: maxStalenessPrefix
  - description: When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
    types:
    - uid: integer
    name: maxIntervalInSeconds
- name: Location
  description: A region in which the Azure Cosmos DB database account is deployed.
  kind: object
  properties:
  - isReadyOnly: true
    description: 'The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;.'
    types:
    - uid: string
    name: id
  - description: The name of the region.
    types:
    - uid: string
    name: locationName
  - isReadyOnly: true
    description: 'The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/'
    types:
    - uid: string
    name: documentEndpoint
  - isReadyOnly: true
    description: The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation.
    types:
    - uid: string
    name: provisioningState
  - description: The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
    types:
    - uid: integer
    name: failoverPriority
- name: FailoverPolicy
  description: The failover policy for a given region of a database account.
  kind: object
  properties:
  - isReadyOnly: true
    description: 'The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;.'
    types:
    - uid: string
    name: id
  - description: The name of the region in which the database account exists.
    types:
    - uid: string
    name: locationName
  - description: The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
    types:
    - uid: integer
    name: failoverPriority
examples:
- request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1?api-version=2015-04-08
    requestBody: '{"location":"westus","properties":{"databaseAccountOfferType":"Standard","locations":[{"failoverPriority":0,"locationName":"southcentralus"}]}}'
  responses:
  - statusCode: "200"
    body: '{"id":"/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1","name":"ddb1","location":"West US","type":"Microsoft.DocumentDB/databaseAccounts","kind":"GlobalDocumentDB","tags":{},"properties":{"provisioningState":"Initializing","ipRangeFilter":"","databaseAccountOfferType":"Standard","consistencyPolicy":{"defaultConsistencyLevel":"Session","maxIntervalInSeconds":5,"maxStalenessPrefix":100},"writeLocations":[{"id":"ddb1-southcentralus","locationName":"South Central US","provisioningState":"Initializing","failoverPriority":0}],"readLocations":[{"id":"ddb1-southcentralus","locationName":"South Central US","provisioningState":"Initializing","failoverPriority":0}],"failoverPolicies":[{"id":"ddb1-southcentralus","locationName":"South Central US","failoverPriority":0}]}}'
  name: CosmosDBDatabaseAccountCreateMin
- request:
    uri: PUT https://management.azure.com/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1?api-version=2015-04-08
    requestBody: '{"location":"westus","tags":{},"kind":"GlobalDocumentDB","properties":{"databaseAccountOfferType":"Standard","ipRangeFilter":"10.10.10.10","locations":[{"failoverPriority":0,"locationName":"southcentralus"},{"failoverPriority":1,"locationName":"eastus"}],"consistencyPolicy":{"defaultConsistencyLevel":"BoundedStaleness","maxIntervalInSeconds":10,"maxStalenessPrefix":200}}}'
  responses:
  - statusCode: "200"
    body: '{"id":"/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1","name":"ddb1","location":"West US","type":"Microsoft.DocumentDB/databaseAccounts","kind":"GlobalDocumentDB","tags":{},"properties":{"provisioningState":"Initializing","ipRangeFilter":"10.10.10.10","databaseAccountOfferType":"Standard","consistencyPolicy":{"defaultConsistencyLevel":"BoundedStaleness","maxIntervalInSeconds":10,"maxStalenessPrefix":200},"writeLocations":[{"id":"ddb1-southcentralus","locationName":"South Central US","provisioningState":"Initializing","failoverPriority":0}],"readLocations":[{"id":"ddb1-southcentralus","locationName":"South Central US","provisioningState":"Initializing","failoverPriority":0},{"id":"ddb1-eastus","locationName":"East US","provisioningState":"Initializing","failoverPriority":1}],"failoverPolicies":[{"id":"ddb1-southcentralus","locationName":"South Central US","failoverPriority":0},{"id":"ddb1-eastus","locationName":"East US","failoverPriority":1}]}}'
  name: CosmosDBDatabaseAccountCreateMax
security:
- type: oauth2
  description: Azure Active Directory OAuth2 Flow
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
  scopes:
  - description: Impersonate your user account
    name: user_impersonation
name: CreateOrUpdate
uid: management.azure.com.cosmosdbresourceprovider.databaseaccounts.createorupdate

{
  "swagger": "2.0",
  "info": {
    "version": "2016-06-01",
    "title": "RecoveryServicesBackupClient",
    "x-ms-code-generation-settings": {
      "internalConstructors": false
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupOperationResults/{operationId}": {
      "get": {
        "tags": [
          "BackupOperationResults"
        ],
        "description": "Provides the status of the delete operations such as deleting backed up item. Once the operation has started, the status code in the response would be Accepted. It will continue to be in this state till it reaches completion. On successful completion, the status code will be OK. This method expects OperationID as an argument. OperationID is part of the Location header of the operation response.",
        "operationId": "BackupOperationResults_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "OperationID which represents the operation.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "Object": {
      "description": "Base of all objects.",
      "type": "object"
    },
    "Resource": {
      "description": "Base for all resources.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource Id represents the complete path to the resource.",
          "type": "string"
        },
        "name": {
          "description": "Resource name associated with the resource.",
          "type": "string"
        },
        "type": {
          "description": "Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...",
          "type": "string"
        },
        "location": {
          "description": "Resource location.",
          "type": "string"
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "eTag": {
          "description": "Optional ETag.",
          "type": "string"
        }
      },
      "x-ms-azure-resource": true
    },
    "JobResourceList": {
      "description": "List of Job resources",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceList"
        }
      ],
      "properties": {
        "value": {
          "description": "List of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobResource"
          }
        }
      }
    },
    "BackupEngineBase": {
      "description": "The base backup engine class. All workload specific backup engines derive from this class.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "Friendly name of the backup engine.",
          "type": "string"
        },
        "backupManagementType": {
          "description": "Type of backup management for the backup engine.",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": false
          }
        },
        "registrationStatus": {
          "description": "Registration status of the backup engine with the Recovery Services Vault.",
          "type": "string"
        },
        "healthStatus": {
          "description": "Backup status of the backup engine.",
          "type": "string"
        },
        "backupEngineType": {
          "description": "Type of the backup engine.",
          "type": "string"
        },
        "canReRegister": {
          "description": "Flag indicating if the backup engine be registered, once already registered.",
          "type": "boolean"
        },
        "backupEngineId": {
          "description": "ID of the backup engine.",
          "type": "string"
        }
      },
      "discriminator": "backupEngineType"
    },
    "BMSBackupEngineQueryObject": {
      "description": "Query parameters to fetch list of backup engines.",
      "type": "object",
      "properties": {
        "backupManagementType": {
          "description": "Backup management type for the backup engine.",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": false
          }
        }
      }
    },
    "OperationStatus": {
      "description": "Operation status.",
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the operation.",
          "type": "string"
        },
        "name": {
          "description": "Name of the operation.",
          "type": "string"
        },
        "status": {
          "description": "Operation status.",
          "enum": [
            "Invalid",
            "InProgress",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "OperationStatusValues",
            "modelAsString": false
          }
        },
        "startTime": {
          "format": "date-time",
          "description": "Operation start time. Format: ISO-8601.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "Operation end time. Format: ISO-8601.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/OperationStatusError",
          "description": "Error information related to this operation."
        },
        "properties": {
          "$ref": "#/definitions/OperationStatusExtendedInfo",
          "description": "Additional information associated with this operation."
        }
      }
    },
    "OperationStatusError": {
      "description": "Error information associated with operation status call.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code of the operation failure.",
          "type": "string"
        },
        "message": {
          "description": "Error message displayed if the operation failure.",
          "type": "string"
        }
      }
    },
    "OperationStatusExtendedInfo": {
      "description": "Base class for additional information of operation status.",
      "type": "object",
      "properties": {
        "objectType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorhpic chain of types.",
          "type": "string"
        }
      },
      "discriminator": "objectType"
    },
    "JobResource": {
      "description": "Defines workload agnostic properties for a job.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/Job"
        }
      }
    },
    "OperationWorkerResponse": {
      "description": "This is the base class for operation result responses.",
      "type": "object",
      "properties": {
        "statusCode": {
          "description": "HTTP Status Code of the operation.",
          "enum": [
            "Continue",
            "SwitchingProtocols",
            "OK",
            "Created",
            "Accepted",
            "NonAuthoritativeInformation",
            "NoContent",
            "ResetContent",
            "PartialContent",
            "MultipleChoices",
            "Ambiguous",
            "MovedPermanently",
            "Moved",
            "Found",
            "Redirect",
            "SeeOther",
            "RedirectMethod",
            "NotModified",
            "UseProxy",
            "Unused",
            "TemporaryRedirect",
            "RedirectKeepVerb",
            "BadRequest",
            "Unauthorized",
            "PaymentRequired",
            "Forbidden",
            "NotFound",
            "MethodNotAllowed",
            "NotAcceptable",
            "ProxyAuthenticationRequired",
            "RequestTimeout",
            "Conflict",
            "Gone",
            "LengthRequired",
            "PreconditionFailed",
            "RequestEntityTooLarge",
            "RequestUriTooLong",
            "UnsupportedMediaType",
            "RequestedRangeNotSatisfiable",
            "ExpectationFailed",
            "UpgradeRequired",
            "InternalServerError",
            "NotImplemented",
            "BadGateway",
            "ServiceUnavailable",
            "GatewayTimeout",
            "HttpVersionNotSupported"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "HttpStatusCode",
            "modelAsString": false
          }
        },
        "Headers": {
          "description": "HTTP headers associated with this operation.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "Job": {
      "description": "Defines workload agnostic properties for a job.",
      "type": "object",
      "properties": {
        "entityFriendlyName": {
          "description": "Friendly name of the entity on which the current job is executing.",
          "type": "string"
        },
        "backupManagementType": {
          "description": "Backup management type to execute the current job.",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": false
          }
        },
        "operation": {
          "description": "The operation name.",
          "type": "string"
        },
        "status": {
          "description": "Job status.",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "The start time.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "The end time.",
          "type": "string"
        },
        "activityId": {
          "description": "ActivityId of job.",
          "type": "string"
        },
        "jobType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorhpic chain of types.",
          "type": "string"
        }
      },
      "discriminator": "jobType"
    },
    "JobQueryObject": {
      "description": "Filters to list the jobs.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Status of the job.",
          "enum": [
            "Invalid",
            "InProgress",
            "Completed",
            "Failed",
            "CompletedWithWarnings",
            "Cancelled",
            "Cancelling"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "JobStatus",
            "modelAsString": false
          }
        },
        "backupManagementType": {
          "description": "Type of backup managmenent for the job.",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": false
          }
        },
        "operation": {
          "description": "Type of operation.",
          "enum": [
            "Invalid",
            "ConfigureBackup",
            "Backup",
            "Restore",
            "DisableBackup",
            "DeleteBackupData"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "JobOperationType",
            "modelAsString": false
          }
        },
        "jobId": {
          "description": "JobID represents the job uniquely.",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "Job has started at this time. Value is in UTC.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "Job has ended at this time. Value is in UTC.",
          "type": "string"
        }
      }
    },
    "WorkloadProtectableItemResourceList": {
      "description": "List of WorkloadProtectableItem resources",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceList"
        }
      ],
      "properties": {
        "value": {
          "description": "List of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkloadProtectableItemResource"
          }
        }
      }
    },
    "OperationResultInfoBase": {
      "description": "Base class for operation result info.",
      "type": "object",
      "properties": {
        "objectType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorhpic chain of types.",
          "type": "string"
        }
      },
      "discriminator": "objectType"
    },
    "WorkloadProtectableItemResource": {
      "description": "Base class for backup item. Workload-specific backup items are derived from this class.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadProtectableItem"
        }
      }
    },
    "ProtectedItemResource": {
      "description": "Base class for backup items.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProtectedItem"
        }
      }
    },
    "WorkloadProtectableItem": {
      "description": "Base class for backup item. Workload-specific backup items are derived from this class.",
      "type": "object",
      "properties": {
        "backupManagementType": {
          "description": "Type of backup managemenent to backup an item.",
          "type": "string"
        },
        "protectableItemType": {
          "description": "Type of the backup item.",
          "type": "string"
        },
        "friendlyName": {
          "description": "Friendly name of the backup item.",
          "type": "string"
        },
        "protectionState": {
          "description": "State of the back up item.",
          "enum": [
            "Invalid",
            "NotProtected",
            "Protecting",
            "Protected"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ProtectionStatus",
            "modelAsString": false
          }
        }
      },
      "discriminator": "protectableItemType"
    },
    "BMSPOQueryObject": {
      "description": "Filters to list items that can be backed up.",
      "type": "object",
      "properties": {
        "backupManagementType": {
          "description": "Backup management type.",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": false
          }
        },
        "status": {
          "description": "Backup status query parameter.",
          "type": "string"
        },
        "friendlyName": {
          "description": "Friendly name.",
          "type": "string"
        }
      }
    },
    "ProtectedItemResourceList": {
      "description": "List of ProtectedItem resources",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceList"
        }
      ],
      "properties": {
        "value": {
          "description": "List of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProtectedItemResource"
          }
        }
      }
    },
    "ProtectedItem": {
      "description": "Base class for backup items.",
      "type": "object",
      "properties": {
        "protectedItemType": {
          "description": "backup item type.",
          "type": "string"
        },
        "backupManagementType": {
          "description": "Type of backup managemenent for the backed up item.",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": false
          }
        },
        "workloadType": {
          "description": "Type of workload this item represents.",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "DPMUnknown"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataSourceType",
            "modelAsString": false
          }
        },
        "sourceResourceId": {
          "description": "ARM ID of the resource to be backed up.",
          "type": "string"
        },
        "policyId": {
          "description": "ID of the backup policy with which this item is backed up.",
          "type": "string"
        },
        "lastRecoveryPoint": {
          "format": "date-time",
          "description": "Timestamp when the last (latest) backup copy was created for this backup item.",
          "type": "string"
        }
      },
      "discriminator": "protectedItemType"
    },
    "GetProtectedItemQueryObject": {
      "description": "Filters to list backup items.",
      "type": "object",
      "properties": {
        "expand": {
          "description": "Specifies if the additional information should be provided for this item.",
          "type": "string"
        }
      }
    },
    "BackupRequestResource": {
      "description": "Base class for backup request. Workload-specific backup requests are derived from this class.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupRequest"
        }
      }
    },
    "ProtectedItemQueryObject": {
      "description": "Filters to list backup items.",
      "type": "object",
      "properties": {
        "backupManagementType": {
          "description": "Backup management type for the backed up item.",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": false
          }
        },
        "itemType": {
          "description": "Type of workload this item represents.",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "DPMUnknown"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataSourceType",
            "modelAsString": false
          }
        },
        "policyName": {
          "description": "Backup policy name associated with the backup item.",
          "type": "string"
        },
        "containerName": {
          "description": "Name of the container.",
          "type": "string"
        }
      }
    },
    "RecoveryPointResourceList": {
      "description": "List of RecoveryPoint resources",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceList"
        }
      ],
      "properties": {
        "value": {
          "description": "List of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPointResource"
          }
        }
      }
    },
    "BackupRequest": {
      "description": "Base class for backup request. Workload-specific backup requests are derived from this class.",
      "type": "object",
      "properties": {
        "objectType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorhpic chain of types.",
          "type": "string"
        }
      },
      "discriminator": "objectType"
    },
    "RecoveryPointResource": {
      "description": "Base class for backup copies. Workload-specific backup copies are derived from this class.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecoveryPoint"
        }
      }
    },
    "ProtectionContainerResourceList": {
      "description": "List of ProtectionContainer resources",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceList"
        }
      ],
      "properties": {
        "value": {
          "description": "List of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProtectionContainerResource"
          }
        }
      }
    },
    "RecoveryPoint": {
      "description": "Base class for backup copies. Workload-specific backup copies are derived from this class.",
      "type": "object",
      "properties": {
        "objectType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorhpic chain of types.",
          "type": "string"
        }
      },
      "discriminator": "objectType"
    },
    "BMSRPQueryObject": {
      "description": "Filters to list backup copies.",
      "type": "object",
      "properties": {
        "startDate": {
          "format": "date-time",
          "description": "Backup copies created after this time.",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "Backup copies created before this time.",
          "type": "string"
        }
      }
    },
    "ProtectionContainerResource": {
      "description": "Base class for container with backup items. Containers with specific workloads are derived from this class.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProtectionContainer"
        }
      }
    },
    "ProtectionPolicyResourceList": {
      "description": "List of ProtectionPolicy resources",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceList"
        }
      ],
      "properties": {
        "value": {
          "description": "List of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProtectionPolicyResource"
          }
        }
      }
    },
    "ProtectionContainer": {
      "description": "Base class for container with backup items. Containers with specific workloads are derived from this class.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "Friendly name of the container.",
          "type": "string"
        },
        "backupManagementType": {
          "description": "Type of backup managemenent for the container.",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": false
          }
        },
        "registrationStatus": {
          "description": "Status of registration of the container with the Recovery Services Vault.",
          "type": "string"
        },
        "healthStatus": {
          "description": "Status of health of the container.",
          "type": "string"
        },
        "containerType": {
          "description": "Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2. Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is Windows 4. Azure SQL instance is AzureSqlContainer.",
          "type": "string",
          "readOnly": true
        },
        "protectableObjectType": {
          "description": "Type of the protectable object associated with this container.",
          "type": "string"
        }
      },
      "discriminator": "protectableObjectType"
    },
    "BMSContainerQueryObject": {
      "description": "The query filters that can be used with the list containers API.",
      "type": "object",
      "properties": {
        "backupManagementType": {
          "description": "Backup management type for this container.",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": false
          }
        },
        "status": {
          "description": "Status of registration of this container with the Recovery Services Vault.",
          "type": "string"
        },
        "friendlyName": {
          "description": "Friendly name of this container.",
          "type": "string"
        }
      }
    },
    "ProtectionPolicyResource": {
      "description": "Base class for backup policy. Workload-specific backup policies are derived from this class.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProtectionPolicy"
        }
      }
    },
    "RestoreRequestResource": {
      "description": "Base class for restore request. Workload-specific restore requests are derived from this class.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/RestoreRequest"
        }
      }
    },
    "ProtectionPolicy": {
      "description": "Base class for backup policy. Workload-specific backup policies are derived from this class.",
      "type": "object",
      "properties": {
        "protectedItemsCount": {
          "format": "int32",
          "description": "Number of items associated with this policy.",
          "type": "integer"
        },
        "backupManagementType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorhpic chain of types.",
          "type": "string"
        }
      },
      "discriminator": "backupManagementType"
    },
    "ProtectionPolicyQueryObject": {
      "description": "Filters the list backup policies API.",
      "type": "object",
      "properties": {
        "backupManagementType": {
          "description": "Backup management type for the backup policy.",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": false
          }
        }
      }
    },
    "ILRRequestResource": {
      "description": "Parameters to restore file/folders API.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ILRRequest"
        }
      }
    },
    "RestoreRequest": {
      "description": "Base class for restore request. Workload-specific restore requests are derived from this class.",
      "type": "object",
      "properties": {
        "objectType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorhpic chain of types.",
          "type": "string"
        }
      },
      "discriminator": "objectType"
    },
    "ILRRequest": {
      "description": "Parameters to restore file/folders API.",
      "type": "object",
      "properties": {
        "objectType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorhpic chain of types.",
          "type": "string"
        }
      },
      "discriminator": "objectType"
    },
    "AzureBackupServerEngine": {
      "description": "Backup engine type when Azure Backup Server is used to manage the backups.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackupEngineBase"
        }
      ],
      "x-ms-discriminator-value": "AzureBackupServerEngine"
    },
    "DpmBackupEngine": {
      "description": "Data Protection Manager (DPM) specific backup engine.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackupEngineBase"
        }
      ],
      "x-ms-discriminator-value": "DpmBackupEngine"
    },
    "AzureSqlContainer": {
      "description": "Azure Sql workload-specific container.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionContainer"
        }
      ],
      "x-ms-discriminator-value": "AzureSqlContainer"
    },
    "IaaSVMContainer": {
      "description": "IaaS VM workload-specific container.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionContainer"
        }
      ],
      "properties": {
        "virtualMachineId": {
          "description": "Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.",
          "type": "string"
        },
        "virtualMachineVersion": {
          "description": "Specifies whether the container represents a Classic or an Azure Resource Manager VM.",
          "type": "string"
        },
        "resourceGroup": {
          "description": "Resource group name of Recovery Services Vault.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "IaaSVMContainer"
    },
    "MabContainer": {
      "description": "Container with items backed up using MAB backup engine.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionContainer"
        }
      ],
      "properties": {
        "canReRegister": {
          "description": "Can the container be registered one more time.",
          "type": "boolean"
        },
        "containerId": {
          "format": "int64",
          "description": "ContainerID represents the container.",
          "type": "integer"
        },
        "protectedItemCount": {
          "format": "int64",
          "description": "Number of items backed up in this container.",
          "type": "integer"
        },
        "agentVersion": {
          "description": "Agent version of this container.",
          "type": "string"
        },
        "extendedInfo": {
          "$ref": "#/definitions/MabContainerExtendedInfo",
          "description": "Additional information for this container"
        }
      },
      "x-ms-discriminator-value": "MABWindowsContainer"
    },
    "MabContainerExtendedInfo": {
      "description": "Additional information of the container.",
      "type": "object",
      "properties": {
        "lastRefreshedAt": {
          "format": "date-time",
          "description": "Time stamp when this container was refreshed.",
          "type": "string"
        },
        "backupItemType": {
          "description": "Type of backup items associated with this container.",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "DPMUnknown"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BackupItemType",
            "modelAsString": false
          }
        },
        "backupItems": {
          "description": "List of backup items associated with this container.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "policyName": {
          "description": "Backup policy associated with this container.",
          "type": "string"
        },
        "lastBackupStatus": {
          "description": "Latest backup status of this container.",
          "type": "string"
        }
      }
    },
    "IaaSVMProtectableItem": {
      "description": "IaaS VM workload-specific backup item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkloadProtectableItem"
        }
      ],
      "properties": {
        "virtualMachineId": {
          "description": "Fully qualified ARM ID of the virtual machine.",
          "type": "string"
        }
      }
    },
    "AzureIaaSVMProtectedItem": {
      "description": "IaaS VM workload-specific backup item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectedItem"
        }
      ],
      "properties": {
        "friendlyName": {
          "description": "Friendly name of the VM represented by this backup item.",
          "type": "string"
        },
        "virtualMachineId": {
          "description": "Fully qualified ARM ID of the virtual machine represented by this item.",
          "type": "string"
        },
        "protectionStatus": {
          "description": "Backup status of this backup item.",
          "type": "string"
        },
        "protectionState": {
          "description": "Backup state of this backup item.",
          "enum": [
            "Invalid",
            "IRPending",
            "Protected",
            "ProtectionError",
            "ProtectionStopped",
            "ProtectionPaused"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ProtectionState",
            "modelAsString": false
          }
        },
        "lastBackupStatus": {
          "description": "Last backup operation status. Possible values: Healthy, Unhealthy.",
          "type": "string"
        },
        "lastBackupTime": {
          "format": "date-time",
          "description": "Timestamp of the last backup operation on this backup item.",
          "type": "string"
        },
        "extendedInfo": {
          "$ref": "#/definitions/AzureIaaSVMProtectedItemExtendedInfo",
          "description": "Additional information for this backup item."
        }
      },
      "x-ms-discriminator-value": "AzureIaaSVMProtectedItem"
    },
    "AzureIaaSVMProtectedItemExtendedInfo": {
      "description": "Additional information on Azure IaaS VM specific backup item.",
      "type": "object",
      "properties": {
        "oldestRecoveryPoint": {
          "format": "date-time",
          "description": "The oldest backup copy available for this backup item.",
          "type": "string"
        },
        "recoveryPointCount": {
          "format": "int32",
          "description": "Number of backup copies available for this backup item.",
          "type": "integer"
        },
        "policyInconsistent": {
          "description": "Specifies if backup policy associated with the backup item is inconsistent.",
          "type": "boolean"
        }
      }
    },
    "MabFileFolderProtectedItem": {
      "description": "MAB workload-specific backup item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectedItem"
        }
      ],
      "properties": {
        "friendlyName": {
          "description": "Friendly name of this backup item.",
          "type": "string"
        },
        "computerName": {
          "description": "Name of the computer associated with this backup item.",
          "type": "string"
        },
        "lastBackupStatus": {
          "description": "Status of last backup operation.",
          "type": "string"
        },
        "protectionState": {
          "description": "Protected, ProtectionStopped, IRPending or ProtectionError",
          "type": "string"
        },
        "isScheduledForDeferredDelete": {
          "type": "boolean"
        },
        "extendedInfo": {
          "$ref": "#/definitions/MabFileFolderProtectedItemExtendedInfo",
          "description": "Additional information with this backup item."
        }
      },
      "x-ms-discriminator-value": "MabFileFolderProtectedItem"
    },
    "MabFileFolderProtectedItemExtendedInfo": {
      "description": "Additional information on the backed up item.",
      "type": "object",
      "properties": {
        "lastRefreshedAt": {
          "format": "date-time",
          "description": "Last time when the agent data synced to service.",
          "type": "string"
        },
        "oldestRecoveryPoint": {
          "format": "date-time",
          "description": "The oldest backup copy available.",
          "type": "string"
        },
        "recoveryPointCount": {
          "format": "int32",
          "description": "Number of backup copies associated with the backup item.",
          "type": "integer"
        }
      }
    },
    "AzureSqlProtectedItem": {
      "description": "Azure SQL workload-specific backup item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectedItem"
        }
      ],
      "properties": {
        "protectedItemDataId": {
          "description": "Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services.",
          "type": "string"
        },
        "protectionState": {
          "description": "Backup state of the backed up item.",
          "enum": [
            "Invalid",
            "IRPending",
            "Protected",
            "ProtectionError",
            "ProtectionStopped",
            "ProtectionPaused"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ProtectedItemState",
            "modelAsString": false
          }
        },
        "extendedInfo": {
          "$ref": "#/definitions/AzureSqlProtectedItemExtendedInfo",
          "description": "Additional information for this backup item."
        }
      },
      "x-ms-discriminator-value": "Microsoft.Sql/servers/databases"
    },
    "AzureSqlProtectedItemExtendedInfo": {
      "description": "Additional information on Azure SQL specific backup item.",
      "type": "object",
      "properties": {
        "oldestRecoveryPoint": {
          "format": "date-time",
          "description": "The oldest backup copy available for this item in the service.",
          "type": "string"
        },
        "recoveryPointCount": {
          "format": "int32",
          "description": "Number of available backup copies associated with this backup item.",
          "type": "integer"
        },
        "policyState": {
          "description": "State of the backup policy associated with this backup item.",
          "type": "string"
        }
      }
    },
    "IaasVMBackupRequest": {
      "description": "IaaS VM workload-specific backup request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackupRequest"
        }
      ],
      "properties": {
        "recoveryPointExpiryTimeInUTC": {
          "format": "date-time",
          "description": "Backup copy will expire after the time specified (UTC).",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "IaasVMBackupRequest"
    },
    "AzureIaaSVMProtectionPolicy": {
      "description": "IaaS VM workload-specific backup policy.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionPolicy"
        }
      ],
      "properties": {
        "schedulePolicy": {
          "$ref": "#/definitions/SchedulePolicy",
          "description": "Backup schedule specified as part of backup policy."
        },
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicy",
          "description": "Retention policy with the details on backup copy retention ranges."
        }
      },
      "x-ms-discriminator-value": "AzureIaasVM"
    },
    "SchedulePolicy": {
      "description": "Base class for backup schedule.",
      "type": "object",
      "properties": {
        "schedulePolicyType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorhpic chain of types.",
          "type": "string"
        }
      },
      "discriminator": "schedulePolicyType"
    },
    "RetentionPolicy": {
      "description": "Base class for retention policy.",
      "type": "object",
      "properties": {
        "retentionPolicyType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorhpic chain of types.",
          "type": "string"
        }
      },
      "discriminator": "retentionPolicyType"
    },
    "MabProtectionPolicy": {
      "description": "Mab container-specific backup policy.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionPolicy"
        }
      ],
      "properties": {
        "schedulePolicy": {
          "$ref": "#/definitions/SchedulePolicy",
          "description": "Backup schedule of backup policy."
        },
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicy",
          "description": "Retention policy details."
        }
      },
      "x-ms-discriminator-value": "MAB"
    },
    "AzureSqlProtectionPolicy": {
      "description": "Azure SQL workload-specific backup policy.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionPolicy"
        }
      ],
      "properties": {
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicy",
          "description": "Retention policy details."
        }
      },
      "x-ms-discriminator-value": "AzureSql"
    },
    "IaasVMRecoveryPoint": {
      "description": "IaaS VM workload specific backup copy.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPoint"
        }
      ],
      "properties": {
        "recoveryPointType": {
          "description": "Type of the backup copy.",
          "type": "string"
        },
        "recoveryPointTime": {
          "format": "date-time",
          "description": "Time at which this backup copy was created.",
          "type": "string"
        },
        "recoveryPointAdditionalInfo": {
          "description": "Additional information associated with this backup copy.",
          "type": "string"
        },
        "sourceVMStorageType": {
          "description": "Storage type of the VM whose backup copy is created.",
          "type": "string"
        },
        "isSourceVMEncrypted": {
          "description": "Identifies whether the VM was encrypted when the backup copy is created.",
          "type": "boolean"
        },
        "keyAndSecret": {
          "$ref": "#/definitions/KeyAndSecretDetails",
          "description": "Required details for recovering an encrypted VM. Applicable only when IsSourceVMEncrypted is true."
        },
        "isInstantILRSessionActive": {
          "description": "Is the session to recover items from this backup copy still active.",
          "type": "boolean"
        }
      },
      "x-ms-discriminator-value": "IaasVMRecoveryPoint"
    },
    "KeyAndSecretDetails": {
      "description": "BEK is bitlocker key.\r\n            KEK is encryption key for BEK\r\n            If the VM was encrypted then we will store follwing details :\r\n            1. Secret(BEK) - Url + Backup Data + vaultId.\r\n            2. Key(KEK) - Url + Backup Data + vaultId.\r\n            BEK and KEK can potentiallty have different vault ids.",
      "type": "object",
      "properties": {
        "kekDetails": {
          "$ref": "#/definitions/KEKDetails",
          "description": "KEK is encryption key for BEK."
        },
        "bekDetails": {
          "$ref": "#/definitions/BEKDetails",
          "description": "BEK is bitlocker encrpytion key."
        }
      }
    },
    "KEKDetails": {
      "description": "KEK is encryption key for BEK.",
      "type": "object",
      "properties": {
        "keyUrl": {
          "description": "Key is KEK.",
          "type": "string"
        },
        "keyVaultId": {
          "description": "Key Vault ID where this Key is stored.",
          "type": "string"
        },
        "keyBackupData": {
          "description": "KEK data.",
          "type": "string"
        }
      }
    },
    "BEKDetails": {
      "description": "BEK is bitlocker encrpytion key.",
      "type": "object",
      "properties": {
        "secretUrl": {
          "description": "Secret is BEK.",
          "type": "string"
        },
        "secretVaultId": {
          "description": "ID of the Key Vault where this Secret is stored.",
          "type": "string"
        },
        "secretData": {
          "description": "BEK data.",
          "type": "string"
        }
      }
    },
    "GenericRecoveryPoint": {
      "description": "Generic backup copy.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPoint"
        }
      ],
      "properties": {
        "friendlyName": {
          "description": "Friendly name of the backup copy.",
          "type": "string"
        },
        "recoveryPointType": {
          "description": "Type of the backup copy.",
          "type": "string"
        },
        "recoveryPointTime": {
          "format": "date-time",
          "description": "Time at which this backup copy was created.",
          "type": "string"
        },
        "recoveryPointAdditionalInfo": {
          "description": "Additional information associated with this backup copy.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "GenericRecoveryPoint"
    },
    "IaasVMRestoreRequest": {
      "description": "IaaS VM workload-specific restore.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RestoreRequest"
        }
      ],
      "properties": {
        "recoveryPointId": {
          "description": "ID of the backup copy to be recovered.",
          "type": "string"
        },
        "recoveryType": {
          "description": "Type of this recovery.",
          "enum": [
            "Invalid",
            "OriginalLocation",
            "AlternateLocation",
            "RestoreDisks"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RecoveryType",
            "modelAsString": false
          }
        },
        "sourceResourceId": {
          "description": "Fully qualified ARM ID of the VM which is being recovered.",
          "type": "string"
        },
        "targetVirtualMachineId": {
          "description": "This is the complete ARM Id of the VM that will be created.\r\n            For e.g. /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}",
          "type": "string"
        },
        "targetResourceGroupId": {
          "description": "This is the ARM Id of the resource group that you want to create for this Virtual machine and other artifacts.\r\n            For e.g. /subscriptions/{subId}/resourcegroups/{rg}",
          "type": "string"
        },
        "storageAccountId": {
          "description": "Fully qualified ARM ID of the storage account to which the VM has to be restored.",
          "type": "string"
        },
        "virtualNetworkId": {
          "description": "This is the virtual network Id of the vnet that will be attached to the virtual machine.\r\n            User will be validated for join action permissions in the linked access.",
          "type": "string"
        },
        "subnetId": {
          "description": "Subnet ID, is the subnet ID associated with the to be restored VM. For Classic VMs it would be {VnetID}/Subnet/{SubnetName} and, for the Azure Resource Manager VMs it would be ARM resource ID used to represent the subnet.",
          "type": "string"
        },
        "targetDomainNameId": {
          "description": "Fully qualified ARM ID of the domain name to be associated to the VM being restored. This applies only to Classic Virtual Machines.",
          "type": "string"
        },
        "region": {
          "description": "Region in which the virtual machine is restored.",
          "type": "string"
        },
        "affinityGroup": {
          "description": "Affinity group associated to VM to be restored. Used only for Classic Compute Virtual Machines.",
          "type": "string"
        },
        "createNewCloudService": {
          "description": "Should a new cloud service be created while restoring the VM. If this is false, VM will be restored to the same cloud service as it was at the time of backup.",
          "type": "boolean"
        },
        "encryptionDetails": {
          "$ref": "#/definitions/EncryptionDetails",
          "description": "Details needed if the VM was encrypted at the time of backup."
        }
      },
      "x-ms-discriminator-value": "IaasVMRestoreRequest"
    },
    "EncryptionDetails": {
      "description": "Details needed if the VM was encrypted at the time of backup.",
      "type": "object",
      "properties": {
        "encryptionEnabled": {
          "description": "Identifies whether this backup copy represents an encrypted VM at the time of backup.",
          "type": "boolean"
        },
        "kekUrl": {
          "description": "Key Url.",
          "type": "string"
        },
        "secretKeyUrl": {
          "description": "Secret Url.",
          "type": "string"
        },
        "kekVaultId": {
          "description": "ID of Key Vault where KEK is stored.",
          "type": "string"
        },
        "secretKeyVaultId": {
          "description": "ID of Key Vault where Secret is stored.",
          "type": "string"
        }
      }
    },
    "IaasVMILRRegistrationRequest": {
      "description": "Restore files/folders from a backup copy of IaaS VM.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ILRRequest"
        }
      ],
      "properties": {
        "recoveryPointId": {
          "description": "ID of the IaaS VM backup copy from where the files/folders have to be restored.",
          "type": "string"
        },
        "virtualMachineId": {
          "description": "Fully qualified ARM ID of the virtual machine whose the files / folders have to be restored.",
          "type": "string"
        },
        "initiatorName": {
          "description": "iSCSI initiator name.",
          "type": "string"
        },
        "renewExistingRegistration": {
          "description": "Whether to renew existing registration with the iSCSI server.",
          "type": "boolean"
        }
      },
      "x-ms-discriminator-value": "IaasVMILRRegistrationRequest"
    },
    "AzureIaaSVMJob": {
      "description": "Azure IaaS VM workload-specifc job object.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Job"
        }
      ],
      "properties": {
        "duration": {
          "format": "duration",
          "description": "Time elapsed during the execution of this job.",
          "type": "string"
        },
        "actionsInfo": {
          "description": "Gets or sets the state/actions applicable on this job like cancel/retry.",
          "type": "array",
          "items": {
            "enum": [
              "Invalid",
              "Cancellable",
              "Retriable"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "JobSupportedAction",
              "modelAsString": false
            }
          }
        },
        "errorDetails": {
          "description": "Error details on execution of this job.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureIaaSVMErrorInfo"
          }
        },
        "virtualMachineVersion": {
          "description": "Specifies whether the backup item is a Classic or an Azure Resource Manager VM.",
          "type": "string"
        },
        "extendedInfo": {
          "$ref": "#/definitions/AzureIaaSVMJobExtendedInfo",
          "description": "Additional information for this job."
        }
      },
      "x-ms-discriminator-value": "AzureIaaSVMJob"
    },
    "AzureIaaSVMErrorInfo": {
      "description": "Azure IaaS VM workload-specific error information.",
      "type": "object",
      "properties": {
        "errorCode": {
          "format": "int32",
          "description": "Error code.",
          "type": "integer"
        },
        "errorTitle": {
          "description": "Title: Typically, the entity that the error pertains to.",
          "type": "string"
        },
        "errorString": {
          "description": "Localized error string.",
          "type": "string"
        },
        "recommendations": {
          "description": "List of localized recommendations for above error code.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AzureIaaSVMJobExtendedInfo": {
      "description": "Azure IaaS VM workload-specific additional information for job.",
      "type": "object",
      "properties": {
        "tasksList": {
          "description": "List of tasks associated with this job.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureIaaSVMJobTaskDetails"
          }
        },
        "propertyBag": {
          "description": "Job properties.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "progressPercentage": {
          "format": "double",
          "description": "Indicates progress of the job. Null if it has not started or completed.",
          "type": "number"
        },
        "dynamicErrorMessage": {
          "description": "Non localized error message on job execution.",
          "type": "string"
        }
      }
    },
    "AzureIaaSVMJobTaskDetails": {
      "description": "Azure IaaS VM workload-specific job task details.",
      "type": "object",
      "properties": {
        "taskId": {
          "description": "The task display name.",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "The start time.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "The end time.",
          "type": "string"
        },
        "instanceId": {
          "description": "The instanceId.",
          "type": "string"
        },
        "duration": {
          "format": "duration",
          "description": "Time elapsed for task.",
          "type": "string"
        },
        "status": {
          "description": "The status.",
          "type": "string"
        },
        "progressPercentage": {
          "format": "double",
          "description": "Progress of the task.",
          "type": "number"
        }
      }
    },
    "DpmJob": {
      "description": "DPM workload-specifc job object.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Job"
        }
      ],
      "properties": {
        "duration": {
          "format": "duration",
          "description": "Time elapsed for job.",
          "type": "string"
        },
        "dpmServerName": {
          "description": "DPM server name managing the backup item or backup job.",
          "type": "string"
        },
        "containerName": {
          "description": "Name of cluster/server protecting current backup item, if any.",
          "type": "string"
        },
        "containerType": {
          "description": "Type of container.",
          "type": "string"
        },
        "workloadType": {
          "description": "Type of backup item.",
          "type": "string"
        },
        "actionsInfo": {
          "description": "The state/actions applicable on this job like cancel/retry.",
          "type": "array",
          "items": {
            "enum": [
              "Invalid",
              "Cancellable",
              "Retriable"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "JobSupportedAction",
              "modelAsString": false
            }
          }
        },
        "errorDetails": {
          "description": "The errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DpmErrorInfo"
          }
        },
        "extendedInfo": {
          "$ref": "#/definitions/DpmJobExtendedInfo",
          "description": "Additional information for this job."
        }
      },
      "x-ms-discriminator-value": "DpmJob"
    },
    "DpmErrorInfo": {
      "description": "DPM workload-specific error information.",
      "type": "object",
      "properties": {
        "errorString": {
          "description": "Localized error string.",
          "type": "string"
        },
        "recommendations": {
          "description": "List of localized recommendations for above error code.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DpmJobExtendedInfo": {
      "description": "Additional information on the DPM workload-specific job.",
      "type": "object",
      "properties": {
        "tasksList": {
          "description": "List of tasks associated with this job.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DpmJobTaskDetails"
          }
        },
        "propertyBag": {
          "description": "The job properties.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "dynamicErrorMessage": {
          "description": "Non localized error message on job execution.",
          "type": "string"
        }
      }
    },
    "DpmJobTaskDetails": {
      "description": "DPM workload-specific job task details.",
      "type": "object",
      "properties": {
        "taskId": {
          "description": "The task display name.",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "The start time.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "The end time.",
          "type": "string"
        },
        "duration": {
          "format": "duration",
          "description": "Time elapsed for task.",
          "type": "string"
        },
        "status": {
          "description": "The status.",
          "type": "string"
        }
      }
    },
    "MabJob": {
      "description": "MAB workload-specific job.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Job"
        }
      ],
      "properties": {
        "duration": {
          "format": "duration",
          "description": "Time taken by job to run.",
          "type": "string"
        },
        "actionsInfo": {
          "description": "The state/actions applicable on jobs like cancel/retry.",
          "type": "array",
          "items": {
            "enum": [
              "Invalid",
              "Cancellable",
              "Retriable"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "JobSupportedAction",
              "modelAsString": false
            }
          }
        },
        "mabServerName": {
          "description": "Name of server protecting the DS.",
          "type": "string"
        },
        "mabServerType": {
          "description": "Server type of MAB container.",
          "enum": [
            "Invalid",
            "Unknown",
            "IaasVMContainer",
            "IaasVMServiceContainer",
            "DPMContainer",
            "DPMVenusContainer",
            "MABContainer",
            "ClusterResource",
            "AzureSqlContainer",
            "WindowsServer",
            "Windows"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MabServerType",
            "modelAsString": false
          }
        },
        "workloadType": {
          "description": "Workload type of backup item.",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "DPMUnknown"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "WorkloadType",
            "modelAsString": false
          }
        },
        "errorDetails": {
          "description": "The errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MabErrorInfo"
          }
        },
        "extendedInfo": {
          "$ref": "#/definitions/MabJobExtendedInfo",
          "description": "Additional information on the job."
        }
      },
      "x-ms-discriminator-value": "MabJob"
    },
    "MabErrorInfo": {
      "description": "MAB workload-specific error information.",
      "type": "object",
      "properties": {
        "errorString": {
          "description": "Localized error string.",
          "type": "string"
        },
        "recommendations": {
          "description": "List of localized recommendations.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MabJobExtendedInfo": {
      "description": "Additional information for the MAB workload-specific job.",
      "type": "object",
      "properties": {
        "tasksList": {
          "description": "List of tasks for this job.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MabJobTaskDetails"
          }
        },
        "propertyBag": {
          "description": "The job properties.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "dynamicErrorMessage": {
          "description": "Non localized error message specific to this job.",
          "type": "string"
        }
      }
    },
    "MabJobTaskDetails": {
      "description": "MAB workload-specific job task details.",
      "type": "object",
      "properties": {
        "taskId": {
          "description": "The task display name.",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "The start time.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "The end time.",
          "type": "string"
        },
        "duration": {
          "format": "duration",
          "description": "Time elapsed for task.",
          "type": "string"
        },
        "status": {
          "description": "The status.",
          "type": "string"
        }
      }
    },
    "OperationResultInfo": {
      "description": "Operation result info.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OperationResultInfoBase"
        }
      ],
      "properties": {
        "jobList": {
          "description": "List of jobs created by this operation.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "OperationResultInfo"
    },
    "ExportJobsOperationResultInfo": {
      "description": "This class is used to send blob details after exporting jobs.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OperationResultInfoBase"
        }
      ],
      "properties": {
        "blobUrl": {
          "description": "URL of the blob into which the serialized string of list of jobs is exported.",
          "type": "string"
        },
        "blobSasKey": {
          "description": "SAS key to access the blob. It expires in 15 mins.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "ExportJobsOperationResultInfo"
    },
    "AzureIaaSComputeVMContainer": {
      "description": "IaaS VM workload-specific backup item representing an Azure Resource Manager virtual machine.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IaaSVMContainer"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.Compute/virtualMachines"
    },
    "AzureIaaSClassicComputeVMContainer": {
      "description": "IaaS VM workload-specific backup item representing a classic virtual machine.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IaaSVMContainer"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.ClassicCompute/virtualMachines"
    },
    "AzureIaaSComputeVMProtectableItem": {
      "description": "IaaS VM workload-specific backup item representing the Azure Resource Manager VM.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IaaSVMProtectableItem"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.Compute/virtualMachines"
    },
    "AzureIaaSClassicComputeVMProtectableItem": {
      "description": "IaaS VM workload-specific backup item representing the Classic Compute VM.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IaaSVMProtectableItem"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.ClassicCompute/virtualMachines"
    },
    "AzureIaaSComputeVMProtectedItem": {
      "description": "IaaS VM workload-specific backup item representing the Azure Resource Manager VM.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AzureIaaSVMProtectedItem"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.Compute/virtualMachines"
    },
    "AzureIaaSClassicComputeVMProtectedItem": {
      "description": "IaaS VM workload-specific backup item representing the Classic Compute VM.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AzureIaaSVMProtectedItem"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.ClassicCompute/virtualMachines"
    },
    "OperationStatusJobExtendedInfo": {
      "description": "Operation status job extended info.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OperationStatusExtendedInfo"
        }
      ],
      "properties": {
        "jobId": {
          "description": "ID of the job created for this protected item.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "OperationStatusJobExtendedInfo"
    },
    "OperationStatusProvisionILRExtendedInfo": {
      "description": "Operation status extended info for ILR provision action.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OperationStatusExtendedInfo"
        }
      ],
      "properties": {
        "recoveryTarget": {
          "$ref": "#/definitions/InstantItemRecoveryTarget",
          "description": "Target details for file / folder restore."
        }
      },
      "x-ms-discriminator-value": "OperationStatusProvisionILRExtendedInfo"
    },
    "InstantItemRecoveryTarget": {
      "description": "Target details for file / folder restore.",
      "type": "object",
      "properties": {
        "clientScripts": {
          "description": "List of client scripts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClientScriptForConnect"
          }
        }
      }
    },
    "ClientScriptForConnect": {
      "description": "Client script details for file / folder restore.",
      "type": "object",
      "properties": {
        "scriptContent": {
          "description": "File content of the client script for file / folder restore.",
          "type": "string"
        },
        "scriptExtension": {
          "description": "File extension of the client script for file / folder restore - .ps1 , .sh , etc.",
          "type": "string"
        },
        "osType": {
          "description": "OS type - Windows, Linux etc. for which this file / folder restore client script works.",
          "type": "string"
        }
      }
    },
    "OperationStatusJobsExtendedInfo": {
      "description": "Operation status extended info for list of jobs.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OperationStatusExtendedInfo"
        }
      ],
      "properties": {
        "jobIds": {
          "description": "IDs of the jobs created for the protected item.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "failedJobsError": {
          "description": "Stores all the failed jobs along with the corresponding error codes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "OperationStatusJobsExtendedInfo"
    },
    "LongTermSchedulePolicy": {
      "description": "Long term policy schedule.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SchedulePolicy"
        }
      ]
    },
    "SimpleSchedulePolicy": {
      "description": "Simple policy schedule.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SchedulePolicy"
        }
      ],
      "properties": {
        "scheduleRunFrequency": {
          "description": "Frequency of the schedule operation of this policy.",
          "enum": [
            "Invalid",
            "Daily",
            "Weekly"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ScheduleRunType",
            "modelAsString": false
          }
        },
        "scheduleRunDays": {
          "description": "List of days of week this schedule has to be run.",
          "type": "array",
          "items": {
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "DayOfWeek",
              "modelAsString": false
            }
          }
        },
        "scheduleRunTimes": {
          "description": "List of times of day this schedule has to be run.",
          "type": "array",
          "items": {
            "format": "date-time",
            "type": "string"
          }
        },
        "scheduleWeeklyFrequency": {
          "format": "int32",
          "description": "At every number weeks this schedule has to be run.",
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "SimpleSchedulePolicy"
    },
    "SimpleRetentionPolicy": {
      "description": "Simple policy retention.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RetentionPolicy"
        }
      ],
      "properties": {
        "retentionDuration": {
          "$ref": "#/definitions/RetentionDuration",
          "description": "Retention duration of the protection policy."
        }
      },
      "x-ms-discriminator-value": "SimpleRetentionPolicy"
    },
    "RetentionDuration": {
      "description": "Retention duration.",
      "type": "object",
      "properties": {
        "count": {
          "format": "int32",
          "description": "Count of duration types. Retention duration is obtained by the counting the duration type Count times. \r\n            For example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks.",
          "type": "integer"
        },
        "durationType": {
          "description": "Retention duration type of retention policy.",
          "enum": [
            "Invalid",
            "Days",
            "Weeks",
            "Months",
            "Years"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RetentionDurationType",
            "modelAsString": false
          }
        }
      }
    },
    "LongTermRetentionPolicy": {
      "description": "Long term retention policy.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RetentionPolicy"
        }
      ],
      "properties": {
        "dailySchedule": {
          "$ref": "#/definitions/DailyRetentionSchedule",
          "description": "Daily retention schedule of the protection policy."
        },
        "weeklySchedule": {
          "$ref": "#/definitions/WeeklyRetentionSchedule",
          "description": "Weekly retention schedule of the protection policy."
        },
        "monthlySchedule": {
          "$ref": "#/definitions/MonthlyRetentionSchedule",
          "description": "Monthly retention schedule of the protection policy."
        },
        "yearlySchedule": {
          "$ref": "#/definitions/YearlyRetentionSchedule",
          "description": "Yearly retention schedule of the protection policy."
        }
      },
      "x-ms-discriminator-value": "LongTermRetentionPolicy"
    },
    "DailyRetentionSchedule": {
      "description": "Daily retention schedule.",
      "type": "object",
      "properties": {
        "retentionTimes": {
          "description": "Retention times of retention policy.",
          "type": "array",
          "items": {
            "format": "date-time",
            "type": "string"
          }
        },
        "retentionDuration": {
          "$ref": "#/definitions/RetentionDuration",
          "description": "Retention duration of retention Policy."
        }
      }
    },
    "WeeklyRetentionSchedule": {
      "description": "Weekly retention schedule.",
      "type": "object",
      "properties": {
        "daysOfTheWeek": {
          "description": "List of days of week for weekly retention policy.",
          "type": "array",
          "items": {
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "DayOfWeek",
              "modelAsString": false
            }
          }
        },
        "retentionTimes": {
          "description": "Retention times of retention policy.",
          "type": "array",
          "items": {
            "format": "date-time",
            "type": "string"
          }
        },
        "retentionDuration": {
          "$ref": "#/definitions/RetentionDuration",
          "description": "Retention duration of retention Policy."
        }
      }
    },
    "MonthlyRetentionSchedule": {
      "description": "Monthly retention schedule.",
      "type": "object",
      "properties": {
        "retentionScheduleFormatType": {
          "description": "Retention schedule format type for monthly retention policy.",
          "enum": [
            "Invalid",
            "Daily",
            "Weekly"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RetentionScheduleFormat",
            "modelAsString": false
          }
        },
        "retentionScheduleDaily": {
          "$ref": "#/definitions/DailyRetentionFormat",
          "description": "Daily retention format for monthly retention policy."
        },
        "retentionScheduleWeekly": {
          "$ref": "#/definitions/WeeklyRetentionFormat",
          "description": "Weekly retention format for monthly retention policy."
        },
        "retentionTimes": {
          "description": "Retention times of retention policy.",
          "type": "array",
          "items": {
            "format": "date-time",
            "type": "string"
          }
        },
        "retentionDuration": {
          "$ref": "#/definitions/RetentionDuration",
          "description": "Retention duration of retention Policy."
        }
      }
    },
    "YearlyRetentionSchedule": {
      "description": "Yearly retention schedule.",
      "type": "object",
      "properties": {
        "retentionScheduleFormatType": {
          "description": "Retention schedule format for yearly retention policy.",
          "enum": [
            "Invalid",
            "Daily",
            "Weekly"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RetentionScheduleFormat",
            "modelAsString": false
          }
        },
        "monthsOfYear": {
          "description": "List of months of year of yearly retention policy.",
          "type": "array",
          "items": {
            "enum": [
              "Invalid",
              "January",
              "February",
              "March",
              "April",
              "May",
              "June",
              "July",
              "August",
              "September",
              "October",
              "November",
              "December"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "MonthOfYear",
              "modelAsString": false
            }
          }
        },
        "retentionScheduleDaily": {
          "$ref": "#/definitions/DailyRetentionFormat",
          "description": "Daily retention format for yearly retention policy."
        },
        "retentionScheduleWeekly": {
          "$ref": "#/definitions/WeeklyRetentionFormat",
          "description": "Weekly retention format for yearly retention policy."
        },
        "retentionTimes": {
          "description": "Retention times of retention policy.",
          "type": "array",
          "items": {
            "format": "date-time",
            "type": "string"
          }
        },
        "retentionDuration": {
          "$ref": "#/definitions/RetentionDuration",
          "description": "Retention duration of retention Policy."
        }
      }
    },
    "DailyRetentionFormat": {
      "description": "Daily retention format.",
      "type": "object",
      "properties": {
        "daysOfTheMonth": {
          "description": "List of days of the month.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Day"
          }
        }
      }
    },
    "WeeklyRetentionFormat": {
      "description": "Weekly retention format.",
      "type": "object",
      "properties": {
        "daysOfTheWeek": {
          "description": "List of days of the week.",
          "type": "array",
          "items": {
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "DayOfWeek",
              "modelAsString": false
            }
          }
        },
        "weeksOfTheMonth": {
          "description": "List of weeks of month.",
          "type": "array",
          "items": {
            "enum": [
              "First",
              "Second",
              "Third",
              "Fourth",
              "Last"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "WeekOfMonth",
              "modelAsString": false
            }
          }
        }
      }
    },
    "Day": {
      "description": "Day of the week.",
      "type": "object",
      "properties": {
        "date": {
          "format": "int32",
          "type": "integer"
        },
        "isLast": {
          "type": "boolean"
        }
      }
    },
    "ResourceList": {
      "description": "Base for all lists of resources.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The uri to fetch the next page of resources. Call ListNext() fetches next page of resources.",
          "type": "string"
        }
      }
    },
    "BackupEngineBaseResourceList": {
      "description": "List of BackupEngineBase resources",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceList"
        }
      ],
      "properties": {
        "value": {
          "description": "List of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackupEngineBaseResource"
          }
        }
      }
    },
    "BackupEngineBaseResource": {
      "description": "The base backup engine class. All workload specific backup engines derive from this class.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupEngineBase"
        }
      }
    },
    "OperationResultInfoBaseResource": {
      "description": "Base class for operation result info.",
      "allOf": [
        {
          "$ref": "#/definitions/OperationWorkerResponse"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/OperationResultInfoBase"
        }
      }
    }
  },
  "parameters": {
    "SubscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The subscription Id.",
      "required": true,
      "type": "string"
    },
    "ResourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group where the recovery services vault is present.",
      "required": true,
      "x-ms-parameter-location": "method",
      "type": "string"
    },
    "VaultName": {
      "name": "vaultName",
      "in": "path",
      "description": "The name of the recovery services vault.",
      "required": true,
      "x-ms-parameter-location": "method",
      "type": "string"
    },
    "ApiVersion": {
      "name": "api-version",
      "in": "query",
      "description": "Client Api Version.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account."
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
{
  "swagger": "2.0",
  "info": {
    "title": "DataLakeAnalyticsAccountManagementClient",
    "description": "Creates an Azure Data Lake Analytics account management client.",
    "version": "2016-11-01",
    "x-ms-code-generation-settings": {
      "internalConstructors": true
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_ListByResourceGroup",
        "description": "Gets the first page of Data Lake Analytics accounts, if any, within a specific resource group. This includes a link to the next page, if any.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter. Optional."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "description": "The number of items to return. Optional."
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "description": "The number of items to skip over before returning elements. Optional."
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional."
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
          },
          {
            "name": "$count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of accounts in the specified resource group.",
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccountListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/DataLakeAnalyticsAccount"
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeAnalytics/accounts": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_List",
        "description": "Gets the first page of Data Lake Analytics accounts, if any, within the current subscription. This includes a link to the next page, if any.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter. Optional."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "description": "The number of items to return. Optional."
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "description": "The number of items to skip over before returning elements. Optional."
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional."
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
          },
          {
            "name": "$count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of Azure Data Lake Analytics accounts.",
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccountListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/DataLakeAnalyticsAccount"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_Get",
        "description": "Gets details of the specified Data Lake Analytics account.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account to retrieve."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the details of the specified account.",
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccount"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_Delete",
        "description": "Begins the delete delete process for the Data Lake Analytics account object specified by the account name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account to delete"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the specified account."
          },
          "202": {
            "description": "Successfully initiated the deletion of the specified account."
          },
          "204": {
            "description": "The specified account was not found."
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_Create",
        "description": "Creates the specified Data Lake Analytics account. This supplies the user with computation services for Data Lake Analytics workloads",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account.the account will be associated with."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account to create."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccount"
            },
            "description": "Parameters supplied to the create Data Lake Analytics account operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully initiated creation of the specified account.",
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccount"
            }
          },
          "200": {
            "description": "Successfully created the specified account.",
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccount"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_Update",
        "description": "Updates the Data Lake Analytics account object specified by the accountName with the contents of the account object.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account to update."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccountUpdateParameters"
            },
            "description": "Parameters supplied to the update Data Lake Analytics account operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the specified account.",
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccount"
            }
          },
          "201": {
            "description": "Successfully initiated an update of the specified account.",
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccount"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "StorageAccountProperties": {
      "required": [
        "accessKey"
      ],
      "properties": {
        "accessKey": {
          "type": "string",
          "description": "the access key associated with this Azure Storage account that will be used to connect to it."
        },
        "suffix": {
          "type": "string",
          "description": "the optional suffix for the storage account."
        }
      },
      "description": "Azure Storage account properties information."
    },
    "UpdateStorageAccountProperties": {
      "properties": {
        "accessKey": {
          "type": "string",
          "description": "the updated access key associated with this Azure Storage account that will be used to connect to it."
        },
        "suffix": {
          "type": "string",
          "description": "the optional suffix for the storage account."
        }
      },
      "description": "Azure Storage account properties information to update."
    },
    "StorageAccountInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageAccountProperties",
          "description": "the properties associated with this storage account.",
          "x-ms-client-flatten": true
        }
      },
      "description": "Azure Storage account information."
    },
    "StorageContainerProperties": {
      "properties": {
        "lastModifiedTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "the last modified time of the blob container."
        }
      },
      "description": "Azure Storage blob container properties information."
    },
    "StorageContainer": {
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "the name of the blob container."
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "the unique identifier of the blob container."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "the type of the blob container."
        },
        "properties": {
          "readOnly": true,
          "$ref": "#/definitions/StorageContainerProperties",
          "description": "the properties of the blob container.",
          "x-ms-client-flatten": true
        }
      },
      "description": "Azure Storage blob container information."
    },
    "ListStorageContainersResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageContainer"
          },
          "readOnly": true,
          "description": "the results of the list operation"
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "the link (url) to the next page of results."
        }
      },
      "description": "The list of blob containers associated with the storage account attached to the Data Lake Analytics account."
    },
    "SasTokenInfo": {
      "properties": {
        "accessToken": {
          "readOnly": true,
          "type": "string",
          "description": "the access token for the associated Azure Storage Container."
        }
      },
      "description": "SAS token information."
    },
    "ListSasTokensResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SasTokenInfo"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "the link (url) to the next page of results."
        }
      },
      "description": "The SAS response that contains the storage account, container and associated SAS token for connection use."
    },
    "DataLakeStoreAccountInfoProperties": {
      "properties": {
        "suffix": {
          "type": "string",
          "description": "the optional suffix for the Data Lake Store account."
        }
      },
      "description": "Data Lake Store account properties information."
    },
    "DataLakeStoreAccountInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataLakeStoreAccountInfoProperties",
          "description": "the properties associated with this Data Lake Store account.",
          "x-ms-client-flatten": true
        }
      },
      "description": "Data Lake Store account information."
    },
    "DataLakeAnalyticsAccountListStorageAccountsResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccountInfo"
          },
          "readOnly": true,
          "description": "the results of the list operation"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "the link (url) to the next page of results."
        }
      },
      "description": "Azure Storage Account list information."
    },
    "DataLakeAnalyticsAccountListDataLakeStoreResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataLakeStoreAccountInfo"
          },
          "readOnly": true,
          "description": "the results of the list operation"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "the link (url) to the next page of results."
        }
      },
      "description": "Data Lake Account list information."
    },
    "DataLakeAnalyticsAccountProperties": {
      "required": [
        "defaultDataLakeStoreAccount",
        "dataLakeStoreAccounts"
      ],
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "the provisioning status of the Data Lake Analytics account.",
          "enum": [
            "Failed",
            "Creating",
            "Running",
            "Succeeded",
            "Patching",
            "Suspending",
            "Resuming",
            "Deleting",
            "Deleted"
          ],
          "x-ms-enum": {
            "name": "DataLakeAnalyticsAccountStatus",
            "modelAsString": false
          }
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "description": "the state of the Data Lake Analytics account.",
          "enum": [
            "Active",
            "Suspended"
          ],
          "x-ms-enum": {
            "name": "DataLakeAnalyticsAccountState",
            "modelAsString": false
          }
        },
        "defaultDataLakeStoreAccount": {
          "type": "string",
          "description": "the default data lake storage account associated with this Data Lake Analytics account."
        },
        "maxDegreeOfParallelism": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "default": 30,
          "description": "the maximum supported degree of parallelism for this account."
        },
        "queryStoreRetention": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 180,
          "default": 30,
          "description": "the number of days that job metadata is retained."
        },
        "maxJobCount": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "default": 3,
          "description": "the maximum supported jobs running under the account at the same time."
        },
        "systemMaxDegreeOfParallelism": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "the system defined maximum supported degree of parallelism for this account, which restricts the maximum value of parallelism the user can set for the account.."
        },
        "systemMaxJobCount": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "the system defined maximum supported jobs running under the account at the same time, which restricts the maximum number of running jobs the user can set for the account."
        },
        "dataLakeStoreAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataLakeStoreAccountInfo"
          },
          "description": "the list of Data Lake storage accounts associated with this account."
        },
        "storageAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccountInfo"
          },
          "description": "the list of Azure Blob storage accounts associated with this account."
        },
        "creationTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "the account creation time."
        },
        "lastModifiedTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "the account last modified time."
        },
        "endpoint": {
          "type": "string",
          "readOnly": true,
          "description": "the full CName endpoint for this account."
        },
        "newTier": {
          "type": "string",
          "enum": [
            "Consumption",
            "Commitment_100AUHours",
            "Commitment_500AUHours",
            "Commitment_1000AUHours",
            "Commitment_5000AUHours",
            "Commitment_10000AUHours",
            "Commitment_50000AUHours",
            "Commitment_100000AUHours",
            "Commitment_500000AUHours"
          ],
          "x-ms-enum": {
            "name": "PricingTierType",
            "modelAsString": false
          },
          "description": "the billing tier to use for next month."
        },
        "currentTier": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Consumption",
            "Commitment_100AUHours",
            "Commitment_500AUHours",
            "Commitment_1000AUHours",
            "Commitment_5000AUHours",
            "Commitment_10000AUHours",
            "Commitment_50000AUHours",
            "Commitment_100000AUHours",
            "Commitment_500000AUHours"
          ],
          "x-ms-enum": {
            "name": "PricingTierType",
            "modelAsString": false
          },
          "description": "the billing tier in use for the current month."
        }
      },
      "description": "The account specific properties that are associated with an underlying Data Lake Analytics account."
    },
    "UpdateDataLakeAnalyticsAccountProperties": {
      "properties": {
        "maxDegreeOfParallelism": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "the maximum supported degree of parallelism for this account."
        },
        "queryStoreRetention": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 180,
          "description": "the number of days that job metadata is retained."
        },
        "maxJobCount": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "the maximum supported jobs running under the account at the same time."
        },
        "newTier": {
          "type": "string",
          "enum": [
            "Consumption",
            "Commitment_100AUHours",
            "Commitment_500AUHours",
            "Commitment_1000AUHours",
            "Commitment_5000AUHours",
            "Commitment_10000AUHours",
            "Commitment_50000AUHours",
            "Commitment_100000AUHours",
            "Commitment_500000AUHours"
          ],
          "x-ms-enum": {
            "name": "PricingTierType",
            "modelAsString": false
          },
          "description": "the billing tier to use for next month."
        }
      },
      "description": "The properties to update that are associated with an underlying Data Lake Analytics account to."
    },
    "AddDataLakeStoreParameters": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataLakeStoreAccountInfoProperties",
          "description": "the properties for the Data Lake Store account being added.",
          "x-ms-client-flatten": true
        }
      },
      "description": "Additional Data Lake Store parameters."
    },
    "AddStorageAccountParameters": {
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageAccountProperties",
          "description": "the properties for the Azure Storage account being added.",
          "x-ms-client-flatten": true
        }
      },
      "description": "Storage account parameters for a storage account being added to a Data Lake Analytics account."
    },
    "UpdateStorageAccountParameters": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdateStorageAccountProperties",
          "description": "the properties for the Azure Storage account being updated.",
          "x-ms-client-flatten": true
        }
      },
      "description": "Storage account parameters for a storage account being updated in a Data Lake Analytics account."
    },
    "DataLakeAnalyticsAccountUpdateParameters": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "properties": {
          "$ref": "#/definitions/UpdateDataLakeAnalyticsAccountProperties",
          "description": "The properties that can be updated in an existing Data Lake Analytics account.",
          "x-ms-client-flatten": true
        }
      },
      "description": "The parameters that can be used to update an existing Data Lake Analytics account."
    },
    "DataLakeAnalyticsAccount": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataLakeAnalyticsAccountProperties",
          "description": "The properties defined by Data Lake Analytics all properties are specific to each resource provider.",
          "x-ms-client-flatten": true
        }
      },
      "description": "A Data Lake Analytics account object, containing all information associated with the named Data Lake Analytics account."
    },
    "DataLakeAnalyticsAccountListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataLakeAnalyticsAccount"
          },
          "readOnly": true,
          "description": "the results of the list operation"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "the link (url) to the next page of results."
        }
      },
      "description": "DataLakeAnalytics Account list information."
    },
    "ErrorDetails": {
      "properties": {
        "code": {
          "type": "string",
          "readOnly": true,
          "description": "the HTTP status code or error code associated with this error"
        },
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "the error message localized based on Accept-Language"
        },
        "target": {
          "type": "string",
          "readOnly": true,
          "description": "the target of the particular error (for example, the name of the property in error)."
        }
      },
      "description": "Generic resource error details information."
    },
    "Resource": {
      "description": "The Resource model definition.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "required": [
        "location"
      ],
      "x-ms-azure-resource": true
    },
    "SubResource": {
      "description": "The Sub Resource model definition.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        }
      },
      "required": [
        "name"
      ],
      "x-ms-azure-resource": true
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    }
  }
}
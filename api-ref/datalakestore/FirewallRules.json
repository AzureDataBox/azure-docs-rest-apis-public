{
  "swagger": "2.0",
  "info": {
    "title": "DataLakeStoreAccountManagementClient",
    "description": "Creates an Azure Data Lake Store account management client.",
    "version": "2016-11-01",
    "x-ms-code-generation-settings": {
      "internalConstructors": true
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules/{firewallRuleName}": {
      "put": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_CreateOrUpdate",
        "description": "Creates or updates the specified firewall rule. During update, the firewall rule with the specified name will be replaced with this new firewall rule.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Store account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Store account to which to add the firewall rule."
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the firewall rule to create or update."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            },
            "description": "Parameters supplied to create or update the firewall rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the specified firewall rule",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_Delete",
        "description": "Deletes the specified firewall rule from the specified Data Lake Store account",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Store account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Store account from which to delete the firewall rule."
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the firewall rule to delete."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the specified firewall rule"
          },
          "204": {
            "description": "The specified firewall rule does not exist or was already deleted."
          }
        }
      },
      "get": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_Get",
        "description": "Gets the specified Data Lake Store firewall rule.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Store account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Store account from which to get the firewall rule."
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the firewall rule to retrieve."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of firewall rules.",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules": {
      "get": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_ListByAccount",
        "description": "Lists the Data Lake Store firewall rules within the specified Data Lake Store account.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Store account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Store account from which to get the firewall rules."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created the firewall rule.",
            "schema": {
              "$ref": "#/definitions/DataLakeStoreFirewallRuleListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "FirewallRuleProperties": {
      "required": [
        "startIpAddress",
        "endIpAddress"
      ],
      "properties": {
        "startIpAddress": {
          "type": "string",
          "description": "the start IP address for the firewall rule."
        },
        "endIpAddress": {
          "type": "string",
          "description": "the end IP address for the firewall rule."
        }
      },
      "description": "Data Lake Store firewall rule properties information"
    },
    "FirewallRule": {
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/FirewallRuleProperties",
          "description": "the properties of the firewall rule.",
          "x-ms-client-flatten": true
        }
      },
      "description": "Data Lake Store firewall rule information"
    },
    "TrustedIdProviderProperties": {
      "required": [
        "idProvider"
      ],
      "properties": {
        "idProvider": {
          "type": "string",
          "description": "The URL of this trusted identity provider"
        }
      },
      "description": "Data Lake Store trusted identity provider properties information"
    },
    "TrustedIdProvider": {
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/TrustedIdProviderProperties",
          "description": "the properties of the trusted identity provider.",
          "x-ms-client-flatten": true
        }
      },
      "description": "Data Lake Store firewall rule information"
    },
    "DataLakeStoreTrustedIdProviderListResult": {
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/TrustedIdProvider"
          },
          "description": "the results of the list operation"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "the link (url) to the next page of results."
        }
      },
      "description": "Data Lake Store trusted identity provider list information."
    },
    "DataLakeStoreFirewallRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/FirewallRule"
          },
          "description": "the results of the list operation"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "the link (url) to the next page of results."
        }
      },
      "description": "Data Lake Store firewall rule list information."
    },
    "EncryptionIdentity": {
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of encryption being used. Currently the only supported type is 'SystemAssigned'.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "EncryptionIdentityType",
            "modelAsString": false
          }
        },
        "principalId": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "description": "The principal identifier associated with the encryption."
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "description": "The tenant identifier associated with the encryption."
        }
      },
      "description": "The encryption identity properties."
    },
    "EncryptionConfig": {
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of encryption configuration being used. Currently the only supported types are 'UserManaged' and 'ServiceManaged'.",
          "enum": [
            "UserManaged",
            "ServiceManaged"
          ],
          "x-ms-enum": {
            "name": "EncryptionConfigType",
            "modelAsString": false
          }
        },
        "keyVaultMetaInfo": {
          "$ref": "#/definitions/KeyVaultMetaInfo",
          "description": "The Key vault information for connecting to user managed encryption keys."
        }
      },
      "description": "The encryption configuration for the account."
    },
    "KeyVaultMetaInfo": {
      "required": [
        "keyVaultResourceId",
        "encryptionKeyName",
        "encryptionKeyVersion"
      ],
      "properties": {
        "keyVaultResourceId": {
          "type": "string",
          "description": "The resource identifier for the user managed Key Vault being used to encrypt."
        },
        "encryptionKeyName": {
          "type": "string",
          "description": "The name of the user managed encryption key."
        },
        "encryptionKeyVersion": {
          "type": "string",
          "description": "The version of the user managed encryption key."
        }
      },
      "description": "Metadata information used by account encryption."
    },
    "DataLakeStoreAccountProperties": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "the status of the Data Lake Store account while being provisioned.",
          "enum": [
            "Failed",
            "Creating",
            "Running",
            "Succeeded",
            "Patching",
            "Suspending",
            "Resuming",
            "Deleting",
            "Deleted"
          ],
          "x-ms-enum": {
            "name": "DataLakeStoreAccountStatus",
            "modelAsString": false
          }
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "description": "the status of the Data Lake Store account after provisioning has completed.",
          "enum": [
            "Active",
            "Suspended"
          ],
          "x-ms-enum": {
            "name": "DataLakeStoreAccountState",
            "modelAsString": false
          }
        },
        "creationTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "the account creation time."
        },
        "encryptionState": {
          "type": "string",
          "description": "The current state of encryption for this Data Lake store account.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionState",
            "modelAsString": false
          }
        },
        "encryptionProvisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The current state of encryption provisioning for this Data Lake store account.",
          "enum": [
            "Creating",
            "Succeeded"
          ],
          "x-ms-enum": {
            "name": "EncryptionProvisioningState",
            "modelAsString": false
          }
        },
        "encryptionConfig": {
          "$ref": "#/definitions/EncryptionConfig",
          "description": "The Key vault encryption configuration."
        },
        "firewallState": {
          "type": "string",
          "description": "The current state of the IP address firewall for this Data Lake store account.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FirewallState",
            "modelAsString": false
          }
        },
        "firewallRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallRule"
          },
          "description": "The list of firewall rules associated with this Data Lake store account."
        },
        "trustedIdProviderState": {
          "type": "string",
          "description": "The current state of the trusted identity provider feature for this Data Lake store account.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "TrustedIdProviderState",
            "modelAsString": false
          }
        },
        "trustedIdProviders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrustedIdProvider"
          },
          "description": "The list of trusted identity providers associated with this Data Lake store account."
        },
        "lastModifiedTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "the account last modified time."
        },
        "endpoint": {
          "type": "string",
          "readOnly": true,
          "description": "the gateway host."
        },
        "defaultGroup": {
          "type": "string",
          "description": "the default owner group for all new folders and files created in the Data Lake Store account."
        },
        "newTier": {
          "type": "string",
          "enum": [
            "Consumption",
            "Commitment_1TB",
            "Commitment_10TB",
            "Commitment_100TB",
            "Commitment_500TB",
            "Commitment_1PB",
            "Commitment_5PB"
          ],
          "x-ms-enum": {
            "name": "PricingTierType",
            "modelAsString": false
          },
          "description": "the billing tier to use for next month."
        },
        "currentTier": {
          "type": "string",
          "enum": [
            "Consumption",
            "Commitment_1TB",
            "Commitment_10TB",
            "Commitment_100TB",
            "Commitment_500TB",
            "Commitment_1PB",
            "Commitment_5PB"
          ],
          "x-ms-enum": {
            "name": "PricingTierType",
            "modelAsString": false
          },
          "readOnly": true,
          "description": "the billing tier in use for the current month."
        }
      },
      "description": "Data Lake Store account properties information"
    },
    "UpdateDataLakeStoreAccountProperties": {
      "properties": {
        "firewallState": {
          "type": "string",
          "description": "The current state of the IP address firewall for this Data Lake store account. Disabling the firewall does not remove existing rules, they will just be ignored until the firewall is re-enabled.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FirewallState",
            "modelAsString": false
          }
        },
        "trustedIdProviderState": {
          "type": "string",
          "description": "The current state of the trusted identity provider feature for this Data Lake store account. Disabling trusted identity provider functionality does not remove the providers, they will just be ignored until this feature is re-enabled.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "TrustedIdProviderState",
            "modelAsString": false
          }
        },
        "defaultGroup": {
          "type": "string",
          "description": "the default owner group for all new folders and files created in the Data Lake Store account."
        },
        "newTier": {
          "type": "string",
          "enum": [
            "Consumption",
            "Commitment_1TB",
            "Commitment_10TB",
            "Commitment_100TB",
            "Commitment_500TB",
            "Commitment_1PB",
            "Commitment_5PB"
          ],
          "x-ms-enum": {
            "name": "PricingTierType",
            "modelAsString": false
          },
          "description": "the billing tier to use for next month."
        }
      },
      "description": "Data Lake Store account properties information to be updated."
    },
    "DataLakeStoreAccountUpdateParameters": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "properties": {
          "$ref": "#/definitions/UpdateDataLakeStoreAccountProperties",
          "description": "the Data Lake Store account properties to update.",
          "x-ms-client-flatten": true
        }
      },
      "description": "Data Lake Store account information to update"
    },
    "DataLakeStoreAccount": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "identity": {
          "$ref": "#/definitions/EncryptionIdentity",
          "description": "The Key vault encryption identity, if any."
        },
        "properties": {
          "$ref": "#/definitions/DataLakeStoreAccountProperties",
          "description": "the Data Lake Store account properties.",
          "x-ms-client-flatten": true
        }
      },
      "description": "Data Lake Store account information"
    },
    "DataLakeStoreAccountListResult": {
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/DataLakeStoreAccount"
          },
          "description": "the results of the list operation"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "the link (url) to the next page of results."
        }
      },
      "description": "Data Lake Store account list information response."
    },
    "ErrorDetails": {
      "properties": {
        "code": {
          "type": "string",
          "readOnly": true,
          "description": "the HTTP status code or error code associated with this error"
        },
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "the error message localized based on Accept-Language"
        },
        "target": {
          "type": "string",
          "readOnly": true,
          "description": "the target of the particular error (for example, the name of the property in error)."
        }
      },
      "description": "Data Lake Store error details information"
    },
    "Resource": {
      "description": "The Resource model definition.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "required": [
        "location"
      ],
      "x-ms-azure-resource": true
    },
    "SubResource": {
      "description": "The Resource model definition for a nested resource.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        }
      },
      "x-ms-azure-resource": true
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    }
  }
}